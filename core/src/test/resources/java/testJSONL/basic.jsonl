{"code":"\r\npublic class Test1 {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tint i = 0;\r\n\t\ti++;\r\n\t\tif (i > 0) {\r\n\t\t\tSystem.out.println(\"Positive\");\r\n\t\t\ti *= 2;\r\n\t\t} else {\r\n\t\t\tSystem.out.println(\"Non-positive\");\r\n\t\t\ti *= -2;\r\n\t\t}\r\n\r\n\t\tSystem.out.println(\"End\");\r\n\t}\r\n}\r\n\r\n","text":"Test1.java"}
{"code":"\r\npublic class Test1 {\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(\"a\");\r\n        System.out.println(\"aa\");\r\n        System.out.println(\"aaa\");\r\n        System.out.println(\"End\");\r\n    }\r\n}\r\n\r\n","text":"test10.java"}
{"code":"\r\npublic class Test2 {\r\n\r\n    private String str;\r\n\r\n    public Test2() {\r\n        str = \"init\";\r\n    }\r\n\r\n    public String getString() {\r\n        return str;\r\n    }\r\n\r\n    public void setString(String s) {\r\n        str = s;\r\n    }\r\n\r\n    public void process(int x, int y) {\r\n        int res;\r\n        int i = 0;\r\n        int test = 0;\r\n        do {\r\n            do {\r\n                for (i = 0; i <= 10; i++) {\r\n                    while (test == 0) {\r\n                        if (test <= 10) {\r\n                            test += 2;\r\n                        } else {\r\n                            if (test == 10) {\r\n                                test++;\r\n                            }\r\n                            test += 3;\r\n                        }\r\n                    }\r\n                }\r\n            } while (test < 10);\r\n            i += 2;\r\n        } while (i < 10);\r\n\r\n        if (x > y) {\r\n            res = x - y;\r\n            System.out.println(\"x-y=\" + res);\r\n            res = x / y;\r\n            System.out.println(\"x/y=\" + res);\r\n            res = x % y;\r\n            System.out.println(\"x%y=\" + res);\r\n        } else {\r\n            if (x == y) {\r\n                System.out.println(\"x==y\");\r\n                while (test <= 10) {\r\n                    test++;\r\n                    if (test <= 5) {\r\n                        System.out.println(test);\r\n                    }\r\n                }\r\n            } else {\r\n                res = x + y;\r\n                System.out.println(\"x+y=\" + res);\r\n                res = x * y;\r\n                System.out.println(\"x*y=\" + res);\r\n                for (i = 0; i < 10; i++) {\r\n                    System.out.println(res);\r\n                    int j = 0;\r\n                    while (j < 5) {\r\n                        System.out.println(j);\r\n                        for (int k = 10; k > 0; k--) {\r\n                            System.out.println(k);\r\n                        }\r\n                        j++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        int i = 0;\r\n        i++;\r\n        if (i > 0)\r\n            System.out.println(\"Positive\");\r\n        else\r\n            System.out.println(\"Non-positive\");\r\n        Test2 tst = new Test2();\r\n        tst.setString(tst.getString());\r\n        System.out.println(tst.getString());\r\n        tst.process(10, i);\r\n        System.out.println(\"End\");\r\n    }\r\n}\r\n","text":"Test2.java"}
{"code":"\r\npublic class Test3 {\r\n\r\n\tpublic static void test1(int i) {\r\n\t\tswitch (i) {\r\n\t\t\tcase 1:\r\n\t\t\t\tSystem.out.println(\"One\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\tcase 3:\r\n\t\t\tcase 5:\r\n\t\t\tcase 7:\r\n\t\t\t\tSystem.out.println(i + \" is Prime\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\tcase 6:\r\n\t\t\tcase 8:\r\n\t\t\tcase 9:\r\n\t\t\t\tSystem.out.println(i + \" is Composite\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tSystem.out.println(i);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tpublic static void test2(int i) {\r\n\t\tSystem.out.println(\"Start\");\r\n\t\tswitch (i % 2) {\r\n\t\t\tcase 0:\r\n\t\t\t\tSystem.out.println(i + \" is Even\");\r\n\t\t\t\t//break;\r\n\t\t\tcase 1:\r\n\t\t\t\tSystem.out.println(i + \" is Odd\");\r\n\t\t\t\t//break;\r\n\t\t\tdefault:\r\n\t\t\t\tSystem.out.println(\"WTF!\");\r\n\t\t}\r\n\t\tSystem.out.println(\"Finish\");\r\n\t}\r\n\t\r\n\t\r\n\tpublic static void test3(int i) {\r\n\t\tswitch (i % 2) {\r\n\t\t\tcase 0:\r\n\t\t\t\tSystem.out.println(i + \" is Even\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tSystem.out.println(i + \" is Odd\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tpublic static void test4() {\r\n\t\tint i = 0;\r\n\t\tswitch (i) {\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\tSystem.out.println(\"Finish\");\r\n\t}\r\n\t\r\n\t\r\n\tpublic static void test5() {\r\n\t\tint i = 0;\r\n\t\tswitch (i) {\r\n\t\t\tcase 0:\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tSystem.out.println(\"test-1:\");\r\n\t\ttest1(5);\r\n\t\tSystem.out.println(\"\\ntest-2:\");\r\n\t\ttest2(7);\r\n\t\tSystem.out.println(\"\\ntest-3:\");\r\n\t\ttest3(4);\r\n\t\tSystem.out.println(\"\\ntest-4:\");\r\n\t\ttest4();\r\n\t\tSystem.out.println(\"\\ntest-5:\");\r\n\t\ttest5();\r\n\t}\r\n\t\r\n}\r\n\r\n","text":"Test3.java"}
{"code":"\r\npublic class Test4 {\r\n\r\n\tprivate String str;\r\n\r\n\tpublic Test4() {\r\n\t\tstr = \"init\";\r\n\t}\r\n\t\r\n\tpublic String getString() {\r\n\t\tif (str == null)\r\n\t\t\tstr = \"\";\r\n\t\treturn str;\r\n\t}\r\n\t\r\n\tpublic void setString(String s) {\r\n\t\tstr = s;\r\n\t}\r\n\t\r\n\tpublic boolean isPrime(int x) {\r\n\t\tint[] primes = {2, 3, 5, 7, 11, 13, 17, 19};\r\n\t\tfor (int p: primes) {\r\n\t\t\tif (x == p)\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic void test1(int n) {\r\n\t\tfor (int i = 0; i < n; ++i) {\r\n\t\t\tif (isPrime(i))\r\n\t\t\t\tSystem.out.println(i);\r\n\t\t\telse\r\n\t\t\t\tcontinue;\r\n\t\t\ttest2(i);\r\n\t\t}\t\t\r\n\t}\r\n\r\n\tpublic void test2(int n) {\r\n\t\tint counter = n;\r\n\t\tdo {\r\n\t\t\tif (isPrime(counter)) {\r\n\t\t\t\tSystem.out.println(counter);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t--counter;\r\n\t\t} while(counter > 2);\r\n\t}\r\n\t\r\n\tpublic void test3(int x, int y) {\r\n\t\tint res;\r\n\t\tif (x > y) {\r\n\t\t\tres = x - y;\r\n\t\t\tSystem.out.println(\"x-y=\" + res);\r\n\t\t\tres = x / y;\r\n\t\t\tSystem.out.println(\"x/y=\" + res);\r\n\t\t\tres = x % y;\r\n\t\t\tSystem.out.println(\"x%y=\" + res);\r\n\t\t} else {\r\n\t\t\tres = x + y;\r\n\t\t\tSystem.out.println(\"x+y=\" + res);\r\n\t\t\tres = x * y;\r\n\t\t\tSystem.out.println(\"x*y=\" + res);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void test4() {\r\n\t\tint i = 0;\r\n\t\twhile (i < 10) {\r\n\t\t\ti += 2;\r\n\t\t\ti--;\r\n\t\t\tif (i == 8)\r\n\t\t\t\tbreak;\r\n\t\t\tif (i == 5)\r\n\t\t\t\tcontinue;\r\n\t\t\tSystem.out.println(i);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic void test5() {\r\n\t\tint x = 0;\r\n\t\tboolean p0 =  true;\r\n\t\twhile (p0) {\r\n\t\t\tx += 7;\r\n\t\t\tboolean p1 = true;\r\n\t\t\twhile (p1) {\r\n\t\t\t\tx *= 2;\r\n\t\t\t\tx -= 10;\r\n\t\t\t\tif (x > 10) {\r\n\t\t\t\t\tx += 8;\r\n\t\t\t\t\tx /= 3;\r\n\t\t\t\t\tif (x > 0)\r\n\t\t\t\t\t\tx -= 2;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t} else \r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tx--;\r\n\t\t\t\tSystem.out.println(x);\r\n\t\t\t\tif (x > 20)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t--x;\r\n\t\t\t\tp1 = x > 7 ? true : false;\r\n\t\t\t}\r\n\t\t\tif (x > 40)\r\n\t\t\t\tp0 = false;\r\n\t\t\tSystem.out.println(x);\r\n\t\t}\r\n\t\tSystem.out.println(x);\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tTest4 tst = new Test4();\r\n\t\ttst.setString(tst.getString());\r\n\t\tSystem.out.println(tst.getString());\r\n\t\ttst.test1(9);\r\n\t\ttst.test2(16);\r\n\t\ttst.test3(20, 5);\r\n\t\ttst.test4();\r\n\t\ttst.test5();\r\n\t\tSystem.out.println(\"End\");\r\n\t}\r\n}\r\n\r\n","text":"Test4.java"}
{"code":"\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.util.Arrays;\r\n\r\npublic class Test5 {\r\n\r\n\tpublic static void test1() {\r\n\t\tFile file = new File(\"file.log\");\r\n\t\ttry {\r\n\t\t\tFileInputStream fis = new FileInputStream(file);\t// FileNotFoundException\r\n\t\t\tbyte[] buffer = new byte[256];\r\n\t\t\tint read = fis.read(buffer);\t\t\t\t\t\t// IOException\r\n\t\t\tSystem.out.println(read + \" bytes read.\");\r\n\t\t\tSystem.out.println(Arrays.toString(Arrays.copyOf(buffer, read)));\r\n\t\t} catch (FileNotFoundException ex) {\r\n\t\t\tSystem.err.println(ex);\r\n\t\t} catch (IOException ex) {\r\n\t\t\tSystem.err.println(ex);\r\n\t\t} finally {\r\n\t\t\tSystem.out.println(\"finally\");\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\tpublic static void test2() {\r\n\t\ttry {\r\n\t\t\tFile file = new File(\"file.log\");\r\n\t\t\tif (file.exists()) {\r\n\t\t\t\tSystem.out.println(\"Permissions for 'file.log':\");\r\n\t\t\t\tSystem.out.println(\"  Read = \" + file.canRead());\r\n\t\t\t\tSystem.out.println(\"  Write = \" + file.canWrite());\r\n\t\t\t\tSystem.out.println(\"  Execute = \" + file.canExecute());\r\n\t\t\t} else {\r\n\t\t\t\tSystem.out.println(\"'file.log' does not exist!\");\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tSystem.out.println(\"finally\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tpublic static void test3() {\r\n\t\tint i = 10;\r\n\t\ttry {\r\n\t\t\twhile (true) {\r\n\t\t\t\tSystem.out.println(10 / i);  // Division by zero; ArithmeticException\r\n\t\t\t\t--i;\r\n\t\t\t}\r\n\t\t} catch (ArithmeticException ex) {\r\n\t\t\tSystem.err.println(ex);\r\n\t\t}\r\n\t\tSystem.out.println(\"i = \" + i);\r\n\t}\t\r\n\r\n\t\t\r\n\tpublic static void test4(int i) {\r\n\t\ttry {\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tSystem.out.println(\"Positive\");\r\n\t\t\t} else {\r\n\t\t\t\tif (i == 0)\r\n\t\t\t\t\tthrow new Exception(\"ZERO! [ A Pointless Exception! ]\");\r\n\t\t\t\tSystem.out.println(\"Negative\");\r\n\t\t\t}\r\n\t\t} catch (Exception ex) {\r\n\t\t\tSystem.err.println(ex);\r\n\t\t}\r\n\t\tSystem.out.println(\"Finish\");\r\n\t}\r\n\t\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSystem.out.println(\"test-1:\");\r\n\t\ttest1();\r\n\t\tSystem.out.println(\"\\ntest-2:\");\r\n\t\ttest2();\r\n\t\tSystem.out.println(\"\\ntest-3:\");\r\n\t\ttest3();\r\n\t\tSystem.out.println(\"\\ntest-4:\");\r\n\t\ttest4(0);\r\n\t}\r\n\t\r\n}\r\n\r\n","text":"Test5.java"}
{"code":"\r\npublic class Test6 {\r\n\r\n\tpublic void test() {\r\n\t\tint x = 0;\r\n\t\tboolean p1 = true;\r\n\t\twhile (p1) {\r\n\t\t\tx *= 2;\r\n\t\t\tx -= 10;\r\n\t\t\tif (x > 10) {\r\n\t\t\t\tx += 8;\r\n\t\t\t\tx /= 3;\r\n\t\t\t\tif (x > 0)\r\n\t\t\t\t\tx -= 2;\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t} else \r\n\t\t\t\tcontinue;\r\n\t\t\tx--;\r\n\t\t\tSystem.out.println(x);\r\n\t\t\tif (x > 20)\r\n\t\t\t\tbreak;\r\n\t\t\t--x;\r\n\t\t\tp1 = x > 7 ? true : false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tint x = 120;\r\n\t\twhile (true) {\r\n\t\t\tif (x > 100) {\r\n\t\t\t\tx -= 10;\r\n\t\t\t\tcontinue;\r\n\t\t\t} else {\r\n\t\t\t\tif (x < 10)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\telse\r\n\t\t\t\t\tx -= 5;\r\n\t\t\t}\r\n\t\t\tSystem.out.println(x);\r\n\t\t}\r\n\t\t\r\n\t\tTest6 tst = new Test6();\r\n\t\ttst.test();\r\n\t}\r\n}\r\n\r\n","text":"Test6.java"}
{"code":"\r\npublic class Test7 {\r\n\r\n\tprivate String str;\r\n\tprivate Integer integer;\r\n\r\n\tpublic Test7() {\r\n\t\tstr = \"\";\r\n\t\tinteger = 0;\r\n\t}\r\n\t\r\n\tpublic Test7(String str, int sub) {\r\n\t\tthis.str = str.substring(sub);\r\n\t\tinteger = 0;\r\n\t}\r\n\r\n\tpublic String getSTR() {\r\n\t\treturn str;\r\n\t}\r\n\t\r\n\tpublic void setInteger(int i) {\r\n\t\tinteger = i;\r\n\t}\r\n\t\r\n\tpublic int getInteger() {\r\n\t\treturn integer;\r\n\t}\r\n\r\n\tpublic void setSTR(String str) {\r\n\t\tthis.str = str;\r\n\t}\r\n\r\n\tpublic void method1() {\r\n\t\tint len = str.length();\r\n\t\tSystem.out.println(\"STR length is \" + len);\r\n\t}\r\n\r\n\tpublic String addSTR(String str) {\r\n\t\treturn this.str + str;\r\n\t}\r\n\t\r\n\tpublic static void simple() {\r\n\t\tint i = 1, j;\r\n\t\ti++;\r\n\t\tSystem.out.println(i);\r\n\t\tj = i + 3;\r\n\t\tSystem.out.println(j);\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tint idx = 4;\r\n\t\tTest7 t = new Test7();\r\n\t\tt.method1();\r\n\t\tString str = \"some-string\";\r\n\t\tt.setSTR(t.addSTR(str).concat(str));\r\n\t\tSystem.out.println(t.getSTR());\r\n\t\tSystem.out.println(t.getSTR().charAt(idx += 2));\r\n\t\tt = new Test7(str.concat(\"-plus-more\"), idx);\r\n\t\tnew Test7(\"This is a string\", 10).getSTR();\r\n\t\tsimple();\r\n\t\tt.sideEffect();\r\n\t\tSystem.out.println(\"t.integer = \" + t.getInteger());\r\n\t\tStringBuilder val = new StringBuilder(\"10\");\r\n\t\tSystem.out.println(\"val = \" + val);\r\n\t\tt.doubleSideEffect(val);\r\n\t\tSystem.out.println(\"val = \" + val);\r\n\t\tSystem.out.println(\"t.integer = \" + t.getInteger());\r\n\t}\r\n\t\r\n\tpublic void sideEffect() {\r\n\t\tinteger++;\r\n\t}\r\n\t\r\n\tpublic void doubleSideEffect(StringBuilder intStr) {\r\n\t\tintStr.append(0);\r\n\t\tinteger = Integer.parseInt(intStr.toString());\r\n\t}\r\n}\r\n\r\n","text":"Test7.java"}
{"code":"import java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.util.Arrays;\r\n\r\n\r\npublic class Test8 {\r\n\r\n\tpublic static void run(int x) {\r\n\t\t//\r\n\t\tboolean isPrime = false;\r\n\t\tint[] primes = {2, 3, 5, 7, 11, 13, 17, 19};\r\n\t\tfor (int p: primes) {\r\n\t\t\tif (x == p)\r\n\t\t\t\tisPrime = true;\r\n\t\t}\r\n\t\tSystem.out.println(x + (isPrime ? \" is prime\" : \" is not prime\"));\r\n\t\t//\r\n\t\t//\r\n\t\tFile file = new File(\"manifest.mf\");\r\n\t\tFileInputStream fis = null;\r\n\t\ttry {\r\n\t\t\tfis = new FileInputStream(file);\t// FileNotFoundException\r\n\t\t\tbyte[] buffer = new byte[x];\r\n\t\t\tint read = fis.read(buffer);\t\t// IOException\r\n\t\t\tSystem.out.println(read + \" bytes read.\");\r\n\t\t\tSystem.out.println(Arrays.toString(Arrays.copyOf(buffer, read)));\r\n\t\t} catch (FileNotFoundException ex) {\r\n\t\t\tSystem.err.println(ex);\r\n\t\t} catch (IOException ex) {\r\n\t\t\tSystem.err.println(ex);\r\n\t\t} finally {\r\n\t\t\ttry {\r\n\t\t\t\tif (fis != null)\r\n\t\t\t\t\tfis.close();\t\t\t\t// IOException\r\n\t\t\t} catch (IOException ex) {\r\n\t\t\t\tSystem.err.println(ex);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//\r\n\t\t//\r\n\t\tfile = new File(\"build.xml\");\r\n\t\ttry (FileInputStream fism = new FileInputStream(file)) { \t// FileNotFoundException\r\n\t\t\tbyte[] buffer = new byte[2 * x];\r\n\t\t\tint read = fism.read(buffer);\t\t\t\t\t\t\t// IOException\r\n\t\t\tSystem.out.println(read + \" bytes read.\");\r\n\t\t\tSystem.out.println(Arrays.toString(Arrays.copyOf(buffer, read)));\r\n\t\t} catch (FileNotFoundException ex) {\r\n\t\t\tSystem.err.println(ex);\r\n\t\t} catch (IOException ex) {\r\n\t\t\tSystem.err.println(ex);\r\n\t\t}\r\n\t\t//\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tif (args.length > 0)\r\n\t\t\tTest8.run(Integer.parseInt(args[0]));\r\n\t\telse\r\n\t\t\tSystem.out.println(\"Nothing to process!\");\r\n\t}\r\n}\r\n\t\r\n","text":"Test8.java"}
{"code":"\r\npublic class Test9 {\r\n\r\n\tpublic static String test() {\r\n\t\tStringBuilder str = new StringBuilder();\r\n\t\tstr.append(\"hello\").append(\"World\");\r\n\t\tint x = 0;\r\n\t\tif (x < 0)\r\n\t\t\treturn \"\";\r\n\t\treturn str.toString();\r\n\t}\r\n\r\n\tpublic static void main(String [] args) {\r\n\t\tSystem.out.println(test() + test());\r\n\t}\r\n}\r\n","text":"Test9.java"}

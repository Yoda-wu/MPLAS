======= LOG CREATED on 周三 2023/4月/19 12:04:12:246 =======

PROGEX (Program Graph Extractor)  [ v3.4.5 ]
Visit project website @ https://github.com/ghaffarian/progex

PROGEX execution config:
  Language = JavaScript
  Output format = JSON
  Output directory = ../generate/js/basic/AST/\
  Analysis types = [AST]
  File name = 
  Input paths = 
        src/test/resources/js/basic/


# JavaScript source files = 9


Abstract Syntax Analysis
========================
AST exported to: ../generate/js/basic/AST/\breakContinue-AST.json
{
  "directed": true,  "label": "AST of breakContinue.js",  "type": "Abstract Syntax Tree (AST)",  "file": "breakContinue.js",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "breakContinue.js",      "normalized": "breakContinue.js"    },    {      "id": 1,      "line": 1,      "type": "SOURCEELEMENT",      "label": "for(vari=0;i<10;i++){if(i%5==0){break;}}",      "normalized": "for(vari=0;i<10;i++){if(i%5==0){break;}}"    },    {      "id": 2,      "line": 1,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 3,      "line": 6,      "type": "SOURCEELEMENT",      "label": "for(vari=0;i<10;i++){if(i%2==0){continue;}}",      "normalized": "for(vari=0;i<10;i++){if(i%2==0){continue;}}"    },    {      "id": 4,      "line": 6,      "type": "",      "label": "",      "normalized": ""    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 0,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 1,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 1,      "target": 4,      "label": ""    }  ]
}
AST exported to: ../generate/js/basic/AST/\classDefination-AST.json
{
  "directed": true,  "label": "AST of classDefination.js",  "type": "Abstract Syntax Tree (AST)",  "file": "classDefination.js",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "classDefination.js",      "normalized": "classDefination.js"    },    {      "id": 1,      "line": 1,      "type": "SOURCEELEMENT",      "label": "classRunoob{constructor(name){this.sitename=name;}gets_name(){returnthis.sitename;}sets_name(x){this.sitename=x;}}",      "normalized": "classRunoob{constructor(name){this.sitename=name;}gets_name(){returnthis.sitename;}sets_name(x){this.sitename=x;}}"    },    {      "id": 2,      "line": 1,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 3,      "line": 1,      "type": "CLASS",      "label": "CLASS",      "normalized": "CLASS"    },    {      "id": 4,      "line": 1,      "type": "MODIFIER",      "label": "MODIFIER",      "normalized": "MODIFIER"    },    {      "id": 5,      "line": 1,      "type": "NAME",      "label": "Runoob",      "normalized": "Runoob"    },    {      "id": 6,      "line": 13,      "type": "SOURCEELEMENT",      "label": "letnoob=newRunoob('菜鸟教程');",      "normalized": "letnoob=newRunoob('菜鸟教程');"    },    {      "id": 7,      "line": 13,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 8,      "line": 13,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 9,      "line": 15,      "type": "SOURCEELEMENT",      "label": "document.getElementById('demo').innerHTML=noob.s_name;",      "normalized": "document.getElementById('demo').innerHTML=noob.s_name;"    },    {      "id": 10,      "line": 15,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 11,      "line": 15,      "type": "",      "label": "",      "normalized": ""    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 0,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 0,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 3,      "target": 4,      "label": ""    },    {      "id": 4,      "source": 3,      "target": 5,      "label": ""    },    {      "id": 5,      "source": 1,      "target": 6,      "label": ""    },    {      "id": 6,      "source": 1,      "target": 7,      "label": ""    },    {      "id": 7,      "source": 1,      "target": 8,      "label": ""    },    {      "id": 8,      "source": 2,      "target": 9,      "label": ""    },    {      "id": 9,      "source": 2,      "target": 10,      "label": ""    },    {      "id": 10,      "source": 2,      "target": 11,      "label": ""    }  ]
}
AST exported to: ../generate/js/basic/AST/\functionDefinition-AST.json
{
  "directed": true,  "label": "AST of functionDefinition.js",  "type": "Abstract Syntax Tree (AST)",  "file": "functionDefinition.js",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "functionDefinition.js",      "normalized": "functionDefinition.js"    },    {      "id": 1,      "line": 1,      "type": "SOURCEELEMENT",      "label": "functionmyFunction(){varx=5;returnx;}",      "normalized": "functionmyFunction(){varx=5;returnx;}"    },    {      "id": 2,      "line": 1,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 3,      "line": 1,      "type": "MODIFIER",      "label": "MODIFIER",      "normalized": "MODIFIER"    },    {      "id": 4,      "line": 1,      "type": "RETURN",      "label": "function",      "normalized": "function"    },    {      "id": 5,      "line": 1,      "type": "NAME",      "label": "myFunction",      "normalized": "$METHOD_1"    },    {      "id": 6,      "line": 2,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 7,      "line": 3,      "type": "SOURCEELEMENT",      "label": "varx=5;",      "normalized": "varx=5;"    },    {      "id": 8,      "line": 3,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 9,      "line": 3,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 10,      "line": 4,      "type": "SOURCEELEMENT",      "label": "returnx;",      "normalized": "returnx;"    },    {      "id": 11,      "line": 4,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 12,      "line": 4,      "type": "RETURN",      "label": "RETURN",      "normalized": "RETURN"    },    {      "id": 13,      "line": 4,      "type": "",      "label": "return x;",      "normalized": "return x"    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 0,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 0,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 0,      "target": 4,      "label": ""    },    {      "id": 4,      "source": 0,      "target": 5,      "label": ""    },    {      "id": 5,      "source": 0,      "target": 6,      "label": ""    },    {      "id": 6,      "source": 6,      "target": 7,      "label": ""    },    {      "id": 7,      "source": 6,      "target": 8,      "label": ""    },    {      "id": 8,      "source": 6,      "target": 9,      "label": ""    },    {      "id": 9,      "source": 0,      "target": 10,      "label": ""    },    {      "id": 10,      "source": 0,      "target": 11,      "label": ""    },    {      "id": 11,      "source": 0,      "target": 12,      "label": ""    },    {      "id": 12,      "source": 0,      "target": 13,      "label": ""    }  ]
}
AST exported to: ../generate/js/basic/AST/\ifelse-AST.json
{
  "directed": true,  "label": "AST of ifelse.js",  "type": "Abstract Syntax Tree (AST)",  "file": "ifelse.js",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "ifelse.js",      "normalized": "ifelse.js"    },    {      "id": 1,      "line": 1,      "type": "SOURCEELEMENT",      "label": "vari=10",      "normalized": "vari=10"    },    {      "id": 2,      "line": 1,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 3,      "line": 1,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 4,      "line": 2,      "type": "SOURCEELEMENT",      "label": "if(i%2==0){console.log('hello world')}else{console.log('world hello')}",      "normalized": "if(i%2==0){console.log('hello world')}else{console.log('world hello')}"    },    {      "id": 5,      "line": 2,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 6,      "line": 2,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 7,      "line": 2,      "type": "COND",      "label": "i%2==0",      "normalized": "i * 2 == 0"    },    {      "id": 8,      "line": 2,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 9,      "line": 2,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 10,      "line": 2,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 11,      "line": 3,      "type": "STATEMENTLIST",      "label": "STATEMENTLIST",      "normalized": "STATEMENTLIST"    },    {      "id": 12,      "line": 3,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 13,      "line": 3,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 14,      "line": 4,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 15,      "line": 4,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 16,      "line": 4,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 17,      "line": 5,      "type": "STATEMENTLIST",      "label": "STATEMENTLIST",      "normalized": "STATEMENTLIST"    },    {      "id": 18,      "line": 5,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 19,      "line": 5,      "type": "",      "label": "",      "normalized": ""    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 0,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 0,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 1,      "target": 4,      "label": ""    },    {      "id": 4,      "source": 1,      "target": 5,      "label": ""    },    {      "id": 5,      "source": 1,      "target": 6,      "label": ""    },    {      "id": 6,      "source": 6,      "target": 7,      "label": ""    },    {      "id": 7,      "source": 6,      "target": 8,      "label": ""    },    {      "id": 8,      "source": 8,      "target": 9,      "label": ""    },    {      "id": 9,      "source": 8,      "target": 10,      "label": ""    },    {      "id": 10,      "source": 8,      "target": 11,      "label": ""    },    {      "id": 11,      "source": 8,      "target": 12,      "label": ""    },    {      "id": 12,      "source": 8,      "target": 13,      "label": ""    },    {      "id": 13,      "source": 6,      "target": 14,      "label": ""    },    {      "id": 14,      "source": 14,      "target": 15,      "label": ""    },    {      "id": 15,      "source": 14,      "target": 16,      "label": ""    },    {      "id": 16,      "source": 14,      "target": 17,      "label": ""    },    {      "id": 17,      "source": 14,      "target": 18,      "label": ""    },    {      "id": 18,      "source": 14,      "target": 19,      "label": ""    }  ]
}
AST exported to: ../generate/js/basic/AST/\import-AST.json
{
  "directed": true,  "label": "AST of import.js",  "type": "Abstract Syntax Tree (AST)",  "file": "import.js",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "import.js",      "normalized": "import.js"    },    {      "id": 1,      "line": 1,      "type": "SOURCEELEMENT",      "label": "import$from'jquery'",      "normalized": "import$from'jquery'"    },    {      "id": 2,      "line": 1,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 3,      "line": 1,      "type": "IMPORT",      "label": "import",      "normalized": "import"    },    {      "id": 4,      "line": 1,      "type": "IMPORTFROMBLOCK",      "label": "IMPORTFROMBLOCK",      "normalized": "IMPORTFROMBLOCK"    },    {      "id": 5,      "line": 1,      "type": "IMPORTNAMESPACE",      "label": "IMPORTNAMESPACE",      "normalized": "IMPORTNAMESPACE"    },    {      "id": 6,      "line": 1,      "type": "IMPORTFROM",      "label": "IMPORTFROM",      "normalized": "IMPORTFROM"    },    {      "id": 7,      "line": 3,      "type": "SOURCEELEMENT",      "label": "exportdefault{created(){console.log($)}}<EOF>",      "normalized": "exportdefault{created(){console.log($)}}<EOF>"    },    {      "id": 8,      "line": 3,      "type": "",      "label": "",      "normalized": ""    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 0,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 0,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 3,      "target": 4,      "label": ""    },    {      "id": 4,      "source": 4,      "target": 5,      "label": ""    },    {      "id": 5,      "source": 5,      "target": 6,      "label": ""    },    {      "id": 6,      "source": 0,      "target": 7,      "label": ""    },    {      "id": 7,      "source": 0,      "target": 8,      "label": ""    }  ]
}
AST exported to: ../generate/js/basic/AST/\iteration-AST.json
{
  "directed": true,  "label": "AST of iteration.js",  "type": "Abstract Syntax Tree (AST)",  "file": "iteration.js",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "iteration.js",      "normalized": "iteration.js"    },    {      "id": 1,      "line": 1,      "type": "SOURCEELEMENT",      "label": "for(vari=0;i<cars.length;i++){document.write(cars[i]+'<br>');}",      "normalized": "for(vari=0;i<cars.length;i++){document.write(cars[i]+'<br>');}"    },    {      "id": 2,      "line": 1,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 3,      "line": 5,      "type": "SOURCEELEMENT",      "label": "while(i<5){x=x+'The number is '+i+'<br>';i++;}",      "normalized": "while(i<5){x=x+'The number is '+i+'<br>';i++;}"    },    {      "id": 4,      "line": 5,      "type": "",      "label": "",      "normalized": ""    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 0,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 1,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 1,      "target": 4,      "label": ""    }  ]
}
AST exported to: ../generate/js/basic/AST/\promise-AST.json
{
  "directed": true,  "label": "AST of promise.js",  "type": "Abstract Syntax Tree (AST)",  "file": "promise.js",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "promise.js",      "normalized": "promise.js"    },    {      "id": 1,      "line": 1,      "type": "SOURCEELEMENT",      "label": "newPromise(function(resolve,reject){setTimeout(function(){console.log('First');resolve();},1000);}).then(function(){returnnewPromise(function(resolve,reject){setTimeout(function(){console.log('Second');resolve();},4000);});}).then(function(){setTimeout(function(){console.log('Third');},3000);});",      "normalized": "newPromise(function(resolve,reject){setTimeout(function(){console.log('First');resolve();},1000);}).then(function(){returnnewPromise(function(resolve,reject){setTimeout(function(){console.log('Second');resolve();},4000);});}).then(function(){setTimeout(function(){console.log('Third');},3000);});"    },    {      "id": 2,      "line": 1,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 3,      "line": 1,      "type": "",      "label": "",      "normalized": ""    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 0,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 0,      "target": 3,      "label": ""    }  ]
}
AST exported to: ../generate/js/basic/AST/\switch-AST.json
{
  "directed": true,  "label": "AST of switch.js",  "type": "Abstract Syntax Tree (AST)",  "file": "switch.js",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "switch.js",      "normalized": "switch.js"    },    {      "id": 1,      "line": 1,      "type": "SOURCEELEMENT",      "label": "vard=newDate().getDay();",      "normalized": "vard=newDate().getDay();"    },    {      "id": 2,      "line": 1,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 3,      "line": 1,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 4,      "line": 2,      "type": "SOURCEELEMENT",      "label": "switch(d){case0:x='今天是星期日';break;case1:x='今天是星期一';break;case2:x='今天是星期二';break;case3:x='今天是星期三';break;case4:x='今天是星期四';break;case5:x='今天是星期五';break;case6:x='今天是星期六';break;}",      "normalized": "switch(d){case0:x='今天是星期日';break;case1:x='今天是星期一';break;case2:x='今天是星期二';break;case3:x='今天是星期三';break;case4:x='今天是星期四';break;case5:x='今天是星期五';break;case6:x='今天是星期六';break;}"    },    {      "id": 5,      "line": 2,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 6,      "line": 2,      "type": "SWITCH",      "label": "SWITCH",      "normalized": "SWITCH"    },    {      "id": 7,      "line": 2,      "type": "",      "label": "d",      "normalized": "d"    },    {      "id": 8,      "line": 3,      "type": "CASEBLOCK",      "label": "{case0:x='今天是星期日';break;case1:x='今天是星期一';break;case2:x='今天是星期二';break;case3:x='今天是星期三';break;case4:x='今天是星期四';break;case5:x='今天是星期五';break;case6:x='今天是星期六';break;}",      "normalized": "{case0:x='今天是星期日';break;case1:x='今天是星期一';break;case2:x='今天是星期二';break;case3:x='今天是星期三';break;case4:x='今天是星期四';break;case5:x='今天是星期五';break;case6:x='今天是星期六';break;}"    },    {      "id": 9,      "line": 4,      "type": "CASECLAUSES",      "label": "case0:x='今天是星期日';break;case1:x='今天是星期一';break;case2:x='今天是星期二';break;case3:x='今天是星期三';break;case4:x='今天是星期四';break;case5:x='今天是星期五';break;case6:x='今天是星期六';break;",      "normalized": "case0:x='今天是星期日';break;case1:x='今天是星期一';break;case2:x='今天是星期二';break;case3:x='今天是星期三';break;case4:x='今天是星期四';break;case5:x='今天是星期五';break;case6:x='今天是星期六';break;"    },    {      "id": 10,      "line": 4,      "type": "CASE",      "label": "case0:x='今天是星期日';break;",      "normalized": "case0:x='今天是星期日';break;"    },    {      "id": 11,      "line": 4,      "type": "",      "label": "0",      "normalized": "0"    },    {      "id": 12,      "line": 4,      "type": "STATEMENTLIST",      "label": "STATEMENTLIST",      "normalized": "STATEMENTLIST"    },    {      "id": 13,      "line": 4,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 14,      "line": 4,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 15,      "line": 5,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 16,      "line": 5,      "type": "BREAK",      "label": "BREAK",      "normalized": "BREAK"    },    {      "id": 17,      "line": 4,      "type": "",      "label": "x='今天是星期日';break;",      "normalized": "x ?= "    },    {      "id": 18,      "line": 6,      "type": "CASE",      "label": "case1:x='今天是星期一';break;",      "normalized": "case1:x='今天是星期一';break;"    },    {      "id": 19,      "line": 6,      "type": "",      "label": "1",      "normalized": "1"    },    {      "id": 20,      "line": 6,      "type": "STATEMENTLIST",      "label": "STATEMENTLIST",      "normalized": "STATEMENTLIST"    },    {      "id": 21,      "line": 6,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 22,      "line": 6,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 23,      "line": 7,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 24,      "line": 7,      "type": "BREAK",      "label": "BREAK",      "normalized": "BREAK"    },    {      "id": 25,      "line": 6,      "type": "",      "label": "x='今天是星期一';break;",      "normalized": "x ?= "    },    {      "id": 26,      "line": 8,      "type": "CASE",      "label": "case2:x='今天是星期二';break;",      "normalized": "case2:x='今天是星期二';break;"    },    {      "id": 27,      "line": 8,      "type": "",      "label": "2",      "normalized": "2"    },    {      "id": 28,      "line": 8,      "type": "STATEMENTLIST",      "label": "STATEMENTLIST",      "normalized": "STATEMENTLIST"    },    {      "id": 29,      "line": 8,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 30,      "line": 8,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 31,      "line": 9,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 32,      "line": 9,      "type": "BREAK",      "label": "BREAK",      "normalized": "BREAK"    },    {      "id": 33,      "line": 8,      "type": "",      "label": "x='今天是星期二';break;",      "normalized": "x ?= "    },    {      "id": 34,      "line": 10,      "type": "CASE",      "label": "case3:x='今天是星期三';break;",      "normalized": "case3:x='今天是星期三';break;"    },    {      "id": 35,      "line": 10,      "type": "",      "label": "3",      "normalized": "3"    },    {      "id": 36,      "line": 10,      "type": "STATEMENTLIST",      "label": "STATEMENTLIST",      "normalized": "STATEMENTLIST"    },    {      "id": 37,      "line": 10,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 38,      "line": 10,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 39,      "line": 11,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 40,      "line": 11,      "type": "BREAK",      "label": "BREAK",      "normalized": "BREAK"    },    {      "id": 41,      "line": 10,      "type": "",      "label": "x='今天是星期三';break;",      "normalized": "x ?= "    },    {      "id": 42,      "line": 12,      "type": "CASE",      "label": "case4:x='今天是星期四';break;",      "normalized": "case4:x='今天是星期四';break;"    },    {      "id": 43,      "line": 12,      "type": "",      "label": "4",      "normalized": "4"    },    {      "id": 44,      "line": 12,      "type": "STATEMENTLIST",      "label": "STATEMENTLIST",      "normalized": "STATEMENTLIST"    },    {      "id": 45,      "line": 12,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 46,      "line": 12,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 47,      "line": 13,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 48,      "line": 13,      "type": "BREAK",      "label": "BREAK",      "normalized": "BREAK"    },    {      "id": 49,      "line": 12,      "type": "",      "label": "x='今天是星期四';break;",      "normalized": "x ?= "    },    {      "id": 50,      "line": 14,      "type": "CASE",      "label": "case5:x='今天是星期五';break;",      "normalized": "case5:x='今天是星期五';break;"    },    {      "id": 51,      "line": 14,      "type": "",      "label": "5",      "normalized": "5"    },    {      "id": 52,      "line": 14,      "type": "STATEMENTLIST",      "label": "STATEMENTLIST",      "normalized": "STATEMENTLIST"    },    {      "id": 53,      "line": 14,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 54,      "line": 14,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 55,      "line": 15,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 56,      "line": 15,      "type": "BREAK",      "label": "BREAK",      "normalized": "BREAK"    },    {      "id": 57,      "line": 14,      "type": "",      "label": "x='今天是星期五';break;",      "normalized": "x ?= "    },    {      "id": 58,      "line": 16,      "type": "CASE",      "label": "case6:x='今天是星期六';break;",      "normalized": "case6:x='今天是星期六';break;"    },    {      "id": 59,      "line": 16,      "type": "",      "label": "6",      "normalized": "6"    },    {      "id": 60,      "line": 16,      "type": "STATEMENTLIST",      "label": "STATEMENTLIST",      "normalized": "STATEMENTLIST"    },    {      "id": 61,      "line": 16,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 62,      "line": 16,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 63,      "line": 17,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 64,      "line": 17,      "type": "BREAK",      "label": "BREAK",      "normalized": "BREAK"    },    {      "id": 65,      "line": 16,      "type": "",      "label": "x='今天是星期六';break;",      "normalized": "x ?= "    },    {      "id": 66,      "line": 3,      "type": "CASEBLOCK",      "label": "{  case 0:x='今天是星期日';  break;  case 1:x='今天是星期一';  break;  case 2:x='今天是星期二';  break;  case 3:x='今天是星期三';  break;  case 4:x='今天是星期四';  break;  case 5:x='今天是星期五';  break;  case 6:x='今天是星期六';  break;  }",      "normalized": "{  case 0:x='今天是星期日';  break;  case 1:x='今天是星期一';  break;  case 2:x='今天是星期二';  break;  case 3:x='今天是星期三';  break;  case 4:x='今天是星期四';  break;  case 5:x='今天是星期五';  break;  case 6:x='今天是星期六';  break;  }"    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 0,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 0,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 1,      "target": 4,      "label": ""    },    {      "id": 4,      "source": 1,      "target": 5,      "label": ""    },    {      "id": 5,      "source": 1,      "target": 6,      "label": ""    },    {      "id": 6,      "source": 6,      "target": 7,      "label": ""    },    {      "id": 7,      "source": 8,      "target": 9,      "label": ""    },    {      "id": 8,      "source": 9,      "target": 10,      "label": ""    },    {      "id": 9,      "source": 10,      "target": 11,      "label": ""    },    {      "id": 10,      "source": 9,      "target": 12,      "label": ""    },    {      "id": 11,      "source": 9,      "target": 13,      "label": ""    },    {      "id": 12,      "source": 9,      "target": 14,      "label": ""    },    {      "id": 13,      "source": 8,      "target": 15,      "label": ""    },    {      "id": 14,      "source": 8,      "target": 16,      "label": ""    },    {      "id": 15,      "source": 10,      "target": 17,      "label": ""    },    {      "id": 16,      "source": 2,      "target": 18,      "label": ""    },    {      "id": 17,      "source": 18,      "target": 19,      "label": ""    },    {      "id": 18,      "source": 2,      "target": 20,      "label": ""    },    {      "id": 19,      "source": 2,      "target": 21,      "label": ""    },    {      "id": 20,      "source": 2,      "target": 22,      "label": ""    },    {      "id": 21,      "source": 4,      "target": 23,      "label": ""    },    {      "id": 22,      "source": 4,      "target": 24,      "label": ""    },    {      "id": 23,      "source": 18,      "target": 25,      "label": ""    },    {      "id": 24,      "source": 12,      "target": 26,      "label": ""    },    {      "id": 25,      "source": 26,      "target": 27,      "label": ""    },    {      "id": 26,      "source": 12,      "target": 28,      "label": ""    },    {      "id": 27,      "source": 12,      "target": 29,      "label": ""    },    {      "id": 28,      "source": 12,      "target": 30,      "label": ""    },    {      "id": 29,      "source": 13,      "target": 31,      "label": ""    },    {      "id": 30,      "source": 13,      "target": 32,      "label": ""    },    {      "id": 31,      "source": 26,      "target": 33,      "label": ""    },    {      "id": 32,      "source": 20,      "target": 34,      "label": ""    },    {      "id": 33,      "source": 34,      "target": 35,      "label": ""    },    {      "id": 34,      "source": 20,      "target": 36,      "label": ""    },    {      "id": 35,      "source": 20,      "target": 37,      "label": ""    },    {      "id": 36,      "source": 20,      "target": 38,      "label": ""    },    {      "id": 37,      "source": 21,      "target": 39,      "label": ""    },    {      "id": 38,      "source": 21,      "target": 40,      "label": ""    },    {      "id": 39,      "source": 34,      "target": 41,      "label": ""    },    {      "id": 40,      "source": 28,      "target": 42,      "label": ""    },    {      "id": 41,      "source": 42,      "target": 43,      "label": ""    },    {      "id": 42,      "source": 28,      "target": 44,      "label": ""    },    {      "id": 43,      "source": 28,      "target": 45,      "label": ""    },    {      "id": 44,      "source": 28,      "target": 46,      "label": ""    },    {      "id": 45,      "source": 29,      "target": 47,      "label": ""    },    {      "id": 46,      "source": 29,      "target": 48,      "label": ""    },    {      "id": 47,      "source": 42,      "target": 49,      "label": ""    },    {      "id": 48,      "source": 36,      "target": 50,      "label": ""    },    {      "id": 49,      "source": 50,      "target": 51,      "label": ""    },    {      "id": 50,      "source": 36,      "target": 52,      "label": ""    },    {      "id": 51,      "source": 36,      "target": 53,      "label": ""    },    {      "id": 52,      "source": 36,      "target": 54,      "label": ""    },    {      "id": 53,      "source": 37,      "target": 55,      "label": ""    },    {      "id": 54,      "source": 37,      "target": 56,      "label": ""    },    {      "id": 55,      "source": 50,      "target": 57,      "label": ""    },    {      "id": 56,      "source": 44,      "target": 58,      "label": ""    },    {      "id": 57,      "source": 58,      "target": 59,      "label": ""    },    {      "id": 58,      "source": 44,      "target": 60,      "label": ""    },    {      "id": 59,      "source": 44,      "target": 61,      "label": ""    },    {      "id": 60,      "source": 44,      "target": 62,      "label": ""    },    {      "id": 61,      "source": 45,      "target": 63,      "label": ""    },    {      "id": 62,      "source": 45,      "target": 64,      "label": ""    },    {      "id": 63,      "source": 58,      "target": 65,      "label": ""    },    {      "id": 64,      "source": 6,      "target": 66,      "label": ""    }  ]
}
AST exported to: ../generate/js/basic/AST/\varDefination-AST.json
{
  "directed": true,  "label": "AST of varDefination.js",  "type": "Abstract Syntax Tree (AST)",  "file": "varDefination.js",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "varDefination.js",      "normalized": "varDefination.js"    },    {      "id": 1,      "line": 1,      "type": "SOURCEELEMENT",      "label": "varx=1",      "normalized": "varx=1"    },    {      "id": 2,      "line": 1,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 3,      "line": 1,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 4,      "line": 2,      "type": "SOURCEELEMENT",      "label": "letlen=10<EOF>",      "normalized": "letlen=10<EOF>"    },    {      "id": 5,      "line": 2,      "type": "",      "label": "",      "normalized": ""    },    {      "id": 6,      "line": 2,      "type": "",      "label": "",      "normalized": ""    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 0,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 0,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 1,      "target": 4,      "label": ""    },    {      "id": 4,      "source": 1,      "target": 5,      "label": ""    },    {      "id": 5,      "source": 1,      "target": 6,      "label": ""    }  ]
}

======= LOG CREATED on 周三 2023/4月/05 20:16:07:222 =======

PROGEX (Program Graph Extractor)  [ v3.4.5 ]
Visit project website @ https://github.com/ghaffarian/progex

PROGEX execution config:
  Language = Java
  Output format = JSON
  Output directory = ../generate/java/basic/AST/\
  Analysis types = [AST]
  Input paths = 
        src/test/resources/java/basic/


# Java source files = 9


Abstract Syntax Analysis
========================
AST exported to: ../generate/java/basic/AST/\Test1-AST.json
{
  "directed": true,  "label": "AST of Test1.java",  "type": "Abstract Syntax Tree (AST)",  "file": "Test1.java",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "Test1.java",      "normalized": "Test1.java"    },    {      "id": 1,      "line": 2,      "type": "CLASS",      "label": "CLASS",      "normalized": "CLASS"    },    {      "id": 2,      "line": 2,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 3,      "line": 2,      "type": "NAME",      "label": "Test1",      "normalized": "Test1"    },    {      "id": 4,      "line": 4,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 5,      "line": 4,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 6,      "line": 4,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 7,      "line": 4,      "type": "NAME",      "label": "main",      "normalized": "$METHOD_1"    },    {      "id": 8,      "line": 4,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 9,      "line": 4,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 10,      "line": 4,      "type": "TYPE",      "label": "String[]",      "normalized": "String[]"    },    {      "id": 11,      "line": 4,      "type": "NAME",      "label": "args",      "normalized": "$VARL_1"    },    {      "id": 12,      "line": 4,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 13,      "line": 5,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 14,      "line": 5,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 15,      "line": 5,      "type": "NAME",      "label": "i",      "normalized": "$VARL_2"    },    {      "id": 16,      "line": 5,      "type": "INIT",      "label": "= 0",      "normalized": "= 0"    },    {      "id": 17,      "line": 6,      "type": "",      "label": "i++",      "normalized": "$VARL_2++"    },    {      "id": 18,      "line": 7,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 19,      "line": 7,      "type": "COND",      "label": "i > 0",      "normalized": "$VARL_2 > 0"    },    {      "id": 20,      "line": 7,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 21,      "line": 8,      "type": "",      "label": "System.out.println('Positive')",      "normalized": "System.out.println('Positive')"    },    {      "id": 22,      "line": 9,      "type": "",      "label": "i *= 2",      "normalized": "$VARL_2 ?= 2"    },    {      "id": 23,      "line": 10,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 24,      "line": 11,      "type": "",      "label": "System.out.println('Non-positive')",      "normalized": "System.out.println('Non-positive')"    },    {      "id": 25,      "line": 12,      "type": "",      "label": "i *= -2",      "normalized": "$VARL_2 ?= -2"    },    {      "id": 26,      "line": 14,      "type": "",      "label": "System.out.println('End')",      "normalized": "System.out.println('End')"    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 1,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 1,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 1,      "target": 4,      "label": ""    },    {      "id": 4,      "source": 4,      "target": 5,      "label": ""    },    {      "id": 5,      "source": 4,      "target": 6,      "label": ""    },    {      "id": 6,      "source": 4,      "target": 7,      "label": ""    },    {      "id": 7,      "source": 4,      "target": 8,      "label": ""    },    {      "id": 8,      "source": 8,      "target": 9,      "label": ""    },    {      "id": 9,      "source": 9,      "target": 10,      "label": ""    },    {      "id": 10,      "source": 9,      "target": 11,      "label": ""    },    {      "id": 11,      "source": 4,      "target": 12,      "label": ""    },    {      "id": 12,      "source": 12,      "target": 13,      "label": ""    },    {      "id": 13,      "source": 13,      "target": 14,      "label": ""    },    {      "id": 14,      "source": 13,      "target": 15,      "label": ""    },    {      "id": 15,      "source": 13,      "target": 16,      "label": ""    },    {      "id": 16,      "source": 12,      "target": 17,      "label": ""    },    {      "id": 17,      "source": 12,      "target": 18,      "label": ""    },    {      "id": 18,      "source": 18,      "target": 19,      "label": ""    },    {      "id": 19,      "source": 18,      "target": 20,      "label": ""    },    {      "id": 20,      "source": 20,      "target": 21,      "label": ""    },    {      "id": 21,      "source": 20,      "target": 22,      "label": ""    },    {      "id": 22,      "source": 18,      "target": 23,      "label": ""    },    {      "id": 23,      "source": 23,      "target": 24,      "label": ""    },    {      "id": 24,      "source": 23,      "target": 25,      "label": ""    },    {      "id": 25,      "source": 12,      "target": 26,      "label": ""    }  ]
}
AST exported to: ../generate/java/basic/AST/\Test2-AST.json
{
  "directed": true,  "label": "AST of Test2.java",  "type": "Abstract Syntax Tree (AST)",  "file": "Test2.java",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "Test2.java",      "normalized": "Test2.java"    },    {      "id": 1,      "line": 2,      "type": "CLASS",      "label": "CLASS",      "normalized": "CLASS"    },    {      "id": 2,      "line": 2,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 3,      "line": 2,      "type": "NAME",      "label": "Test2",      "normalized": "Test2"    },    {      "id": 4,      "line": 4,      "type": "FIELD",      "label": "FIELD",      "normalized": "FIELD"    },    {      "id": 5,      "line": 4,      "type": "MODIFIER",      "label": "private",      "normalized": "private"    },    {      "id": 6,      "line": 4,      "type": "TYPE",      "label": "String",      "normalized": "String"    },    {      "id": 7,      "line": 4,      "type": "NAME",      "label": "str",      "normalized": "$VARF_1"    },    {      "id": 8,      "line": 6,      "type": "CONSTRUCTOR",      "label": "CONSTRUCTOR",      "normalized": "CONSTRUCTOR"    },    {      "id": 9,      "line": 6,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 10,      "line": 6,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 11,      "line": 7,      "type": "",      "label": "str = 'init'",      "normalized": "$VARF_1 ?= 'init'"    },    {      "id": 12,      "line": 10,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 13,      "line": 10,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 14,      "line": 10,      "type": "RETURN",      "label": "String",      "normalized": "String"    },    {      "id": 15,      "line": 10,      "type": "NAME",      "label": "getString",      "normalized": "$METHOD_1"    },    {      "id": 16,      "line": 10,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 17,      "line": 11,      "type": "",      "label": "return str;",      "normalized": "return $VARF_1"    },    {      "id": 18,      "line": 14,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 19,      "line": 14,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 20,      "line": 14,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 21,      "line": 14,      "type": "NAME",      "label": "setString",      "normalized": "$METHOD_2"    },    {      "id": 22,      "line": 14,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 23,      "line": 14,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 24,      "line": 14,      "type": "TYPE",      "label": "String",      "normalized": "String"    },    {      "id": 25,      "line": 14,      "type": "NAME",      "label": "s",      "normalized": "$VARL_1"    },    {      "id": 26,      "line": 14,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 27,      "line": 15,      "type": "",      "label": "str = s",      "normalized": "$VARF_1 ?= $VARL_1"    },    {      "id": 28,      "line": 18,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 29,      "line": 18,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 30,      "line": 18,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 31,      "line": 18,      "type": "NAME",      "label": "process",      "normalized": "$METHOD_3"    },    {      "id": 32,      "line": 18,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 33,      "line": 18,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 34,      "line": 18,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 35,      "line": 18,      "type": "NAME",      "label": "x",      "normalized": "$VARL_1"    },    {      "id": 36,      "line": 18,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 37,      "line": 18,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 38,      "line": 18,      "type": "NAME",      "label": "y",      "normalized": "$VARL_2"    },    {      "id": 39,      "line": 18,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 40,      "line": 19,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 41,      "line": 19,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 42,      "line": 19,      "type": "NAME",      "label": "res",      "normalized": "$VARL_3"    },    {      "id": 43,      "line": 20,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 44,      "line": 20,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 45,      "line": 20,      "type": "NAME",      "label": "i",      "normalized": "$VARL_4"    },    {      "id": 46,      "line": 20,      "type": "INIT",      "label": "= 0",      "normalized": "= 0"    },    {      "id": 47,      "line": 21,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 48,      "line": 21,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 49,      "line": 21,      "type": "NAME",      "label": "test",      "normalized": "$VARL_5"    },    {      "id": 50,      "line": 21,      "type": "INIT",      "label": "= 0",      "normalized": "= 0"    },    {      "id": 51,      "line": 22,      "type": "DO-WHILE",      "label": "DO-WHILE",      "normalized": "DO-WHILE"    },    {      "id": 52,      "line": 38,      "type": "COND",      "label": "i < 10",      "normalized": "$VARL_4 < 10"    },    {      "id": 53,      "line": 22,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 54,      "line": 23,      "type": "DO-WHILE",      "label": "DO-WHILE",      "normalized": "DO-WHILE"    },    {      "id": 55,      "line": 36,      "type": "COND",      "label": "test < 10",      "normalized": "$VARL_5 < 10"    },    {      "id": 56,      "line": 23,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 57,      "line": 24,      "type": "FOR",      "label": "FOR",      "normalized": "FOR"    },    {      "id": 58,      "line": 0,      "type": "INIT",      "label": "INIT",      "normalized": "INIT"    },    {      "id": 59,      "line": 24,      "type": "",      "label": "i = 0",      "normalized": "$VARL_4 ?= 0"    },    {      "id": 60,      "line": 24,      "type": "COND",      "label": "i <= 10",      "normalized": "$VARL_4 <= 10"    },    {      "id": 61,      "line": 0,      "type": "UPDATE",      "label": "UPDATE",      "normalized": "UPDATE"    },    {      "id": 62,      "line": 24,      "type": "",      "label": "i++",      "normalized": "$VARL_4++"    },    {      "id": 63,      "line": 24,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 64,      "line": 25,      "type": "WHILE",      "label": "WHILE",      "normalized": "WHILE"    },    {      "id": 65,      "line": 25,      "type": "COND",      "label": "test == 0",      "normalized": "$VARL_5 == 0"    },    {      "id": 66,      "line": 25,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 67,      "line": 26,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 68,      "line": 26,      "type": "COND",      "label": "test <= 10",      "normalized": "$VARL_5 <= 10"    },    {      "id": 69,      "line": 26,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 70,      "line": 27,      "type": "",      "label": "test += 2",      "normalized": "$VARL_5 ?= 2"    },    {      "id": 71,      "line": 28,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 72,      "line": 29,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 73,      "line": 29,      "type": "COND",      "label": "test == 10",      "normalized": "$VARL_5 == 10"    },    {      "id": 74,      "line": 29,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 75,      "line": 30,      "type": "",      "label": "test++",      "normalized": "$VARL_5++"    },    {      "id": 76,      "line": 32,      "type": "",      "label": "test += 3",      "normalized": "$VARL_5 ?= 3"    },    {      "id": 77,      "line": 37,      "type": "",      "label": "i += 2",      "normalized": "$VARL_4 ?= 2"    },    {      "id": 78,      "line": 40,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 79,      "line": 40,      "type": "COND",      "label": "x > y",      "normalized": "$VARL_1 > $VARL_2"    },    {      "id": 80,      "line": 40,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 81,      "line": 41,      "type": "",      "label": "res = x - y",      "normalized": "$VARL_3 ?= $VARL_1 - $VARL_2"    },    {      "id": 82,      "line": 42,      "type": "",      "label": "System.out.println('x-y=' + res)",      "normalized": "System.out.println('x-y=' + $VARL_3)"    },    {      "id": 83,      "line": 43,      "type": "",      "label": "res = x / y",      "normalized": "$VARL_3 ?= $VARL_1 / $VARL_2"    },    {      "id": 84,      "line": 44,      "type": "",      "label": "System.out.println('x/y=' + res)",      "normalized": "System.out.println('x/y=' + $VARL_3)"    },    {      "id": 85,      "line": 45,      "type": "",      "label": "res = x % y",      "normalized": "$VARL_3 ?= $VARL_1 % $VARL_2"    },    {      "id": 86,      "line": 46,      "type": "",      "label": "System.out.println('x%y=' + res)",      "normalized": "System.out.println('x%y=' + $VARL_3)"    },    {      "id": 87,      "line": 47,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 88,      "line": 48,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 89,      "line": 48,      "type": "COND",      "label": "x == y",      "normalized": "$VARL_1 == $VARL_2"    },    {      "id": 90,      "line": 48,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 91,      "line": 49,      "type": "",      "label": "System.out.println('x==y')",      "normalized": "System.out.println('x==y')"    },    {      "id": 92,      "line": 50,      "type": "WHILE",      "label": "WHILE",      "normalized": "WHILE"    },    {      "id": 93,      "line": 50,      "type": "COND",      "label": "test <= 10",      "normalized": "$VARL_5 <= 10"    },    {      "id": 94,      "line": 50,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 95,      "line": 51,      "type": "",      "label": "test++",      "normalized": "$VARL_5++"    },    {      "id": 96,      "line": 52,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 97,      "line": 52,      "type": "COND",      "label": "test <= 5",      "normalized": "$VARL_5 <= 5"    },    {      "id": 98,      "line": 52,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 99,      "line": 53,      "type": "",      "label": "System.out.println(test)",      "normalized": "System.out.println($VARL_5)"    },    {      "id": 100,      "line": 56,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 101,      "line": 57,      "type": "",      "label": "res = x + y",      "normalized": "$VARL_3 ?= $VARL_1 + $VARL_2"    },    {      "id": 102,      "line": 58,      "type": "",      "label": "System.out.println('x+y=' + res)",      "normalized": "System.out.println('x+y=' + $VARL_3)"    },    {      "id": 103,      "line": 59,      "type": "",      "label": "res = x * y",      "normalized": "$VARL_3 ?= $VARL_1 * $VARL_2"    },    {      "id": 104,      "line": 60,      "type": "",      "label": "System.out.println('x*y=' + res)",      "normalized": "System.out.println('x*y=' + $VARL_3)"    },    {      "id": 105,      "line": 61,      "type": "FOR",      "label": "FOR",      "normalized": "FOR"    },    {      "id": 106,      "line": 0,      "type": "INIT",      "label": "INIT",      "normalized": "INIT"    },    {      "id": 107,      "line": 61,      "type": "",      "label": "i = 0",      "normalized": "$VARL_4 ?= 0"    },    {      "id": 108,      "line": 61,      "type": "COND",      "label": "i < 10",      "normalized": "$VARL_4 < 10"    },    {      "id": 109,      "line": 0,      "type": "UPDATE",      "label": "UPDATE",      "normalized": "UPDATE"    },    {      "id": 110,      "line": 61,      "type": "",      "label": "i++",      "normalized": "$VARL_4++"    },    {      "id": 111,      "line": 61,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 112,      "line": 62,      "type": "",      "label": "System.out.println(res)",      "normalized": "System.out.println($VARL_3)"    },    {      "id": 113,      "line": 63,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 114,      "line": 63,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 115,      "line": 63,      "type": "NAME",      "label": "j",      "normalized": "$VARL_6"    },    {      "id": 116,      "line": 63,      "type": "INIT",      "label": "= 0",      "normalized": "= 0"    },    {      "id": 117,      "line": 64,      "type": "WHILE",      "label": "WHILE",      "normalized": "WHILE"    },    {      "id": 118,      "line": 64,      "type": "COND",      "label": "j < 5",      "normalized": "$VARL_6 < 5"    },    {      "id": 119,      "line": 64,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 120,      "line": 65,      "type": "",      "label": "System.out.println(j)",      "normalized": "System.out.println($VARL_6)"    },    {      "id": 121,      "line": 66,      "type": "FOR",      "label": "FOR",      "normalized": "FOR"    },    {      "id": 122,      "line": 0,      "type": "INIT",      "label": "INIT",      "normalized": "INIT"    },    {      "id": 123,      "line": 66,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 124,      "line": 66,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 125,      "line": 66,      "type": "NAME",      "label": "k",      "normalized": "$VARL_7"    },    {      "id": 126,      "line": 66,      "type": "INIT",      "label": "= 10",      "normalized": "= 10"    },    {      "id": 127,      "line": 66,      "type": "COND",      "label": "k > 0",      "normalized": "$VARL_7 > 0"    },    {      "id": 128,      "line": 0,      "type": "UPDATE",      "label": "UPDATE",      "normalized": "UPDATE"    },    {      "id": 129,      "line": 66,      "type": "",      "label": "k--",      "normalized": "$VARL_7--"    },    {      "id": 130,      "line": 66,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 131,      "line": 67,      "type": "",      "label": "System.out.println(k)",      "normalized": "System.out.println($VARL_7)"    },    {      "id": 132,      "line": 69,      "type": "",      "label": "j++",      "normalized": "$VARL_6++"    },    {      "id": 133,      "line": 76,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 134,      "line": 76,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 135,      "line": 76,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 136,      "line": 76,      "type": "NAME",      "label": "main",      "normalized": "$METHOD_4"    },    {      "id": 137,      "line": 76,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 138,      "line": 76,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 139,      "line": 76,      "type": "TYPE",      "label": "String[]",      "normalized": "String[]"    },    {      "id": 140,      "line": 76,      "type": "NAME",      "label": "args",      "normalized": "$VARL_1"    },    {      "id": 141,      "line": 76,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 142,      "line": 77,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 143,      "line": 77,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 144,      "line": 77,      "type": "NAME",      "label": "i",      "normalized": "$VARL_2"    },    {      "id": 145,      "line": 77,      "type": "INIT",      "label": "= 0",      "normalized": "= 0"    },    {      "id": 146,      "line": 78,      "type": "",      "label": "i++",      "normalized": "$VARL_2++"    },    {      "id": 147,      "line": 79,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 148,      "line": 79,      "type": "COND",      "label": "i > 0",      "normalized": "$VARL_2 > 0"    },    {      "id": 149,      "line": 80,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 150,      "line": 80,      "type": "",      "label": "System.out.println('Positive')",      "normalized": "System.out.println('Positive')"    },    {      "id": 151,      "line": 82,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 152,      "line": 82,      "type": "",      "label": "System.out.println('Non-positive')",      "normalized": "System.out.println('Non-positive')"    },    {      "id": 153,      "line": 83,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 154,      "line": 83,      "type": "TYPE",      "label": "Test2",      "normalized": "Test2"    },    {      "id": 155,      "line": 83,      "type": "NAME",      "label": "tst",      "normalized": "$VARL_3"    },    {      "id": 156,      "line": 83,      "type": "INIT",      "label": "= new Test2()",      "normalized": "= ()"    },    {      "id": 157,      "line": 84,      "type": "",      "label": "tst.setString(tst.getString())",      "normalized": "$VARL_3.$METHOD_2($VARL_3.$METHOD_1())"    },    {      "id": 158,      "line": 85,      "type": "",      "label": "System.out.println(tst.getString())",      "normalized": "System.out.println($VARL_3.$METHOD_1())"    },    {      "id": 159,      "line": 86,      "type": "",      "label": "tst.process(10, i)",      "normalized": "$VARL_3.$METHOD_3(10, $VARL_2)"    },    {      "id": 160,      "line": 87,      "type": "",      "label": "System.out.println('End')",      "normalized": "System.out.println('End')"    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 1,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 1,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 1,      "target": 4,      "label": ""    },    {      "id": 4,      "source": 4,      "target": 5,      "label": ""    },    {      "id": 5,      "source": 4,      "target": 6,      "label": ""    },    {      "id": 6,      "source": 4,      "target": 7,      "label": ""    },    {      "id": 7,      "source": 1,      "target": 8,      "label": ""    },    {      "id": 8,      "source": 8,      "target": 9,      "label": ""    },    {      "id": 9,      "source": 8,      "target": 10,      "label": ""    },    {      "id": 10,      "source": 10,      "target": 11,      "label": ""    },    {      "id": 11,      "source": 1,      "target": 12,      "label": ""    },    {      "id": 12,      "source": 12,      "target": 13,      "label": ""    },    {      "id": 13,      "source": 12,      "target": 14,      "label": ""    },    {      "id": 14,      "source": 12,      "target": 15,      "label": ""    },    {      "id": 15,      "source": 12,      "target": 16,      "label": ""    },    {      "id": 16,      "source": 16,      "target": 17,      "label": ""    },    {      "id": 17,      "source": 1,      "target": 18,      "label": ""    },    {      "id": 18,      "source": 18,      "target": 19,      "label": ""    },    {      "id": 19,      "source": 18,      "target": 20,      "label": ""    },    {      "id": 20,      "source": 18,      "target": 21,      "label": ""    },    {      "id": 21,      "source": 18,      "target": 22,      "label": ""    },    {      "id": 22,      "source": 22,      "target": 23,      "label": ""    },    {      "id": 23,      "source": 23,      "target": 24,      "label": ""    },    {      "id": 24,      "source": 23,      "target": 25,      "label": ""    },    {      "id": 25,      "source": 18,      "target": 26,      "label": ""    },    {      "id": 26,      "source": 26,      "target": 27,      "label": ""    },    {      "id": 27,      "source": 1,      "target": 28,      "label": ""    },    {      "id": 28,      "source": 28,      "target": 29,      "label": ""    },    {      "id": 29,      "source": 28,      "target": 30,      "label": ""    },    {      "id": 30,      "source": 28,      "target": 31,      "label": ""    },    {      "id": 31,      "source": 28,      "target": 32,      "label": ""    },    {      "id": 32,      "source": 32,      "target": 33,      "label": ""    },    {      "id": 33,      "source": 33,      "target": 34,      "label": ""    },    {      "id": 34,      "source": 33,      "target": 35,      "label": ""    },    {      "id": 35,      "source": 32,      "target": 36,      "label": ""    },    {      "id": 36,      "source": 36,      "target": 37,      "label": ""    },    {      "id": 37,      "source": 36,      "target": 38,      "label": ""    },    {      "id": 38,      "source": 28,      "target": 39,      "label": ""    },    {      "id": 39,      "source": 39,      "target": 40,      "label": ""    },    {      "id": 40,      "source": 40,      "target": 41,      "label": ""    },    {      "id": 41,      "source": 40,      "target": 42,      "label": ""    },    {      "id": 42,      "source": 39,      "target": 43,      "label": ""    },    {      "id": 43,      "source": 43,      "target": 44,      "label": ""    },    {      "id": 44,      "source": 43,      "target": 45,      "label": ""    },    {      "id": 45,      "source": 43,      "target": 46,      "label": ""    },    {      "id": 46,      "source": 39,      "target": 47,      "label": ""    },    {      "id": 47,      "source": 47,      "target": 48,      "label": ""    },    {      "id": 48,      "source": 47,      "target": 49,      "label": ""    },    {      "id": 49,      "source": 47,      "target": 50,      "label": ""    },    {      "id": 50,      "source": 39,      "target": 51,      "label": ""    },    {      "id": 51,      "source": 51,      "target": 52,      "label": ""    },    {      "id": 52,      "source": 51,      "target": 53,      "label": ""    },    {      "id": 53,      "source": 53,      "target": 54,      "label": ""    },    {      "id": 54,      "source": 54,      "target": 55,      "label": ""    },    {      "id": 55,      "source": 54,      "target": 56,      "label": ""    },    {      "id": 56,      "source": 56,      "target": 57,      "label": ""    },    {      "id": 57,      "source": 57,      "target": 58,      "label": ""    },    {      "id": 58,      "source": 58,      "target": 59,      "label": ""    },    {      "id": 59,      "source": 57,      "target": 60,      "label": ""    },    {      "id": 60,      "source": 57,      "target": 61,      "label": ""    },    {      "id": 61,      "source": 61,      "target": 62,      "label": ""    },    {      "id": 62,      "source": 57,      "target": 63,      "label": ""    },    {      "id": 63,      "source": 63,      "target": 64,      "label": ""    },    {      "id": 64,      "source": 64,      "target": 65,      "label": ""    },    {      "id": 65,      "source": 64,      "target": 66,      "label": ""    },    {      "id": 66,      "source": 66,      "target": 67,      "label": ""    },    {      "id": 67,      "source": 67,      "target": 68,      "label": ""    },    {      "id": 68,      "source": 67,      "target": 69,      "label": ""    },    {      "id": 69,      "source": 69,      "target": 70,      "label": ""    },    {      "id": 70,      "source": 67,      "target": 71,      "label": ""    },    {      "id": 71,      "source": 71,      "target": 72,      "label": ""    },    {      "id": 72,      "source": 72,      "target": 73,      "label": ""    },    {      "id": 73,      "source": 72,      "target": 74,      "label": ""    },    {      "id": 74,      "source": 74,      "target": 75,      "label": ""    },    {      "id": 75,      "source": 71,      "target": 76,      "label": ""    },    {      "id": 76,      "source": 53,      "target": 77,      "label": ""    },    {      "id": 77,      "source": 39,      "target": 78,      "label": ""    },    {      "id": 78,      "source": 78,      "target": 79,      "label": ""    },    {      "id": 79,      "source": 78,      "target": 80,      "label": ""    },    {      "id": 80,      "source": 80,      "target": 81,      "label": ""    },    {      "id": 81,      "source": 80,      "target": 82,      "label": ""    },    {      "id": 82,      "source": 80,      "target": 83,      "label": ""    },    {      "id": 83,      "source": 80,      "target": 84,      "label": ""    },    {      "id": 84,      "source": 80,      "target": 85,      "label": ""    },    {      "id": 85,      "source": 80,      "target": 86,      "label": ""    },    {      "id": 86,      "source": 78,      "target": 87,      "label": ""    },    {      "id": 87,      "source": 87,      "target": 88,      "label": ""    },    {      "id": 88,      "source": 88,      "target": 89,      "label": ""    },    {      "id": 89,      "source": 88,      "target": 90,      "label": ""    },    {      "id": 90,      "source": 90,      "target": 91,      "label": ""    },    {      "id": 91,      "source": 90,      "target": 92,      "label": ""    },    {      "id": 92,      "source": 92,      "target": 93,      "label": ""    },    {      "id": 93,      "source": 92,      "target": 94,      "label": ""    },    {      "id": 94,      "source": 94,      "target": 95,      "label": ""    },    {      "id": 95,      "source": 94,      "target": 96,      "label": ""    },    {      "id": 96,      "source": 96,      "target": 97,      "label": ""    },    {      "id": 97,      "source": 96,      "target": 98,      "label": ""    },    {      "id": 98,      "source": 98,      "target": 99,      "label": ""    },    {      "id": 99,      "source": 88,      "target": 100,      "label": ""    },    {      "id": 100,      "source": 100,      "target": 101,      "label": ""    },    {      "id": 101,      "source": 100,      "target": 102,      "label": ""    },    {      "id": 102,      "source": 100,      "target": 103,      "label": ""    },    {      "id": 103,      "source": 100,      "target": 104,      "label": ""    },    {      "id": 104,      "source": 100,      "target": 105,      "label": ""    },    {      "id": 105,      "source": 105,      "target": 106,      "label": ""    },    {      "id": 106,      "source": 106,      "target": 107,      "label": ""    },    {      "id": 107,      "source": 105,      "target": 108,      "label": ""    },    {      "id": 108,      "source": 105,      "target": 109,      "label": ""    },    {      "id": 109,      "source": 109,      "target": 110,      "label": ""    },    {      "id": 110,      "source": 105,      "target": 111,      "label": ""    },    {      "id": 111,      "source": 111,      "target": 112,      "label": ""    },    {      "id": 112,      "source": 111,      "target": 113,      "label": ""    },    {      "id": 113,      "source": 113,      "target": 114,      "label": ""    },    {      "id": 114,      "source": 113,      "target": 115,      "label": ""    },    {      "id": 115,      "source": 113,      "target": 116,      "label": ""    },    {      "id": 116,      "source": 111,      "target": 117,      "label": ""    },    {      "id": 117,      "source": 117,      "target": 118,      "label": ""    },    {      "id": 118,      "source": 117,      "target": 119,      "label": ""    },    {      "id": 119,      "source": 119,      "target": 120,      "label": ""    },    {      "id": 120,      "source": 119,      "target": 121,      "label": ""    },    {      "id": 121,      "source": 121,      "target": 122,      "label": ""    },    {      "id": 122,      "source": 122,      "target": 123,      "label": ""    },    {      "id": 123,      "source": 123,      "target": 124,      "label": ""    },    {      "id": 124,      "source": 123,      "target": 125,      "label": ""    },    {      "id": 125,      "source": 123,      "target": 126,      "label": ""    },    {      "id": 126,      "source": 121,      "target": 127,      "label": ""    },    {      "id": 127,      "source": 121,      "target": 128,      "label": ""    },    {      "id": 128,      "source": 128,      "target": 129,      "label": ""    },    {      "id": 129,      "source": 121,      "target": 130,      "label": ""    },    {      "id": 130,      "source": 130,      "target": 131,      "label": ""    },    {      "id": 131,      "source": 119,      "target": 132,      "label": ""    },    {      "id": 132,      "source": 1,      "target": 133,      "label": ""    },    {      "id": 133,      "source": 133,      "target": 134,      "label": ""    },    {      "id": 134,      "source": 133,      "target": 135,      "label": ""    },    {      "id": 135,      "source": 133,      "target": 136,      "label": ""    },    {      "id": 136,      "source": 133,      "target": 137,      "label": ""    },    {      "id": 137,      "source": 137,      "target": 138,      "label": ""    },    {      "id": 138,      "source": 138,      "target": 139,      "label": ""    },    {      "id": 139,      "source": 138,      "target": 140,      "label": ""    },    {      "id": 140,      "source": 133,      "target": 141,      "label": ""    },    {      "id": 141,      "source": 141,      "target": 142,      "label": ""    },    {      "id": 142,      "source": 142,      "target": 143,      "label": ""    },    {      "id": 143,      "source": 142,      "target": 144,      "label": ""    },    {      "id": 144,      "source": 142,      "target": 145,      "label": ""    },    {      "id": 145,      "source": 141,      "target": 146,      "label": ""    },    {      "id": 146,      "source": 141,      "target": 147,      "label": ""    },    {      "id": 147,      "source": 147,      "target": 148,      "label": ""    },    {      "id": 148,      "source": 147,      "target": 149,      "label": ""    },    {      "id": 149,      "source": 149,      "target": 150,      "label": ""    },    {      "id": 150,      "source": 147,      "target": 151,      "label": ""    },    {      "id": 151,      "source": 151,      "target": 152,      "label": ""    },    {      "id": 152,      "source": 141,      "target": 153,      "label": ""    },    {      "id": 153,      "source": 153,      "target": 154,      "label": ""    },    {      "id": 154,      "source": 153,      "target": 155,      "label": ""    },    {      "id": 155,      "source": 153,      "target": 156,      "label": ""    },    {      "id": 156,      "source": 141,      "target": 157,      "label": ""    },    {      "id": 157,      "source": 141,      "target": 158,      "label": ""    },    {      "id": 158,      "source": 141,      "target": 159,      "label": ""    },    {      "id": 159,      "source": 141,      "target": 160,      "label": ""    }  ]
}
AST exported to: ../generate/java/basic/AST/\Test3-AST.json
{
  "directed": true,  "label": "AST of Test3.java",  "type": "Abstract Syntax Tree (AST)",  "file": "Test3.java",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "Test3.java",      "normalized": "Test3.java"    },    {      "id": 1,      "line": 2,      "type": "CLASS",      "label": "CLASS",      "normalized": "CLASS"    },    {      "id": 2,      "line": 2,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 3,      "line": 2,      "type": "NAME",      "label": "Test3",      "normalized": "Test3"    },    {      "id": 4,      "line": 4,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 5,      "line": 4,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 6,      "line": 4,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 7,      "line": 4,      "type": "NAME",      "label": "test1",      "normalized": "$METHOD_1"    },    {      "id": 8,      "line": 4,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 9,      "line": 4,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 10,      "line": 4,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 11,      "line": 4,      "type": "NAME",      "label": "i",      "normalized": "$VARL_1"    },    {      "id": 12,      "line": 4,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 13,      "line": 5,      "type": "SWITCH",      "label": "SWITCH",      "normalized": "SWITCH"    },    {      "id": 14,      "line": 5,      "type": "NAME",      "label": "i",      "normalized": "$VARL_1"    },    {      "id": 15,      "line": 7,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 16,      "line": 6,      "type": "CASE",      "label": "1",      "normalized": "1"    },    {      "id": 17,      "line": 7,      "type": "",      "label": "System.out.println('One')",      "normalized": "System.out.println('One')"    },    {      "id": 18,      "line": 8,      "type": "",      "label": "break;",      "normalized": "break;"    },    {      "id": 19,      "line": 13,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 20,      "line": 9,      "type": "CASE",      "label": "2",      "normalized": "2"    },    {      "id": 21,      "line": 10,      "type": "CASE",      "label": "3",      "normalized": "3"    },    {      "id": 22,      "line": 11,      "type": "CASE",      "label": "5",      "normalized": "5"    },    {      "id": 23,      "line": 12,      "type": "CASE",      "label": "7",      "normalized": "7"    },    {      "id": 24,      "line": 13,      "type": "",      "label": "System.out.println(i + ' is Prime')",      "normalized": "System.out.println($VARL_1 + ' is Prime')"    },    {      "id": 25,      "line": 14,      "type": "",      "label": "break;",      "normalized": "break;"    },    {      "id": 26,      "line": 19,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 27,      "line": 15,      "type": "CASE",      "label": "4",      "normalized": "4"    },    {      "id": 28,      "line": 16,      "type": "CASE",      "label": "6",      "normalized": "6"    },    {      "id": 29,      "line": 17,      "type": "CASE",      "label": "8",      "normalized": "8"    },    {      "id": 30,      "line": 18,      "type": "CASE",      "label": "9",      "normalized": "9"    },    {      "id": 31,      "line": 19,      "type": "",      "label": "System.out.println(i + ' is Composite')",      "normalized": "System.out.println($VARL_1 + ' is Composite')"    },    {      "id": 32,      "line": 20,      "type": "",      "label": "break;",      "normalized": "break;"    },    {      "id": 33,      "line": 22,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 34,      "line": 21,      "type": "DEFAULT",      "label": "DEFAULT",      "normalized": "DEFAULT"    },    {      "id": 35,      "line": 22,      "type": "",      "label": "System.out.println(i)",      "normalized": "System.out.println($VARL_1)"    },    {      "id": 36,      "line": 27,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 37,      "line": 27,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 38,      "line": 27,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 39,      "line": 27,      "type": "NAME",      "label": "test2",      "normalized": "$METHOD_2"    },    {      "id": 40,      "line": 27,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 41,      "line": 27,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 42,      "line": 27,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 43,      "line": 27,      "type": "NAME",      "label": "i",      "normalized": "$VARL_1"    },    {      "id": 44,      "line": 27,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 45,      "line": 28,      "type": "",      "label": "System.out.println('Start')",      "normalized": "System.out.println('Start')"    },    {      "id": 46,      "line": 29,      "type": "SWITCH",      "label": "SWITCH",      "normalized": "SWITCH"    },    {      "id": 47,      "line": 29,      "type": "NAME",      "label": "i % 2",      "normalized": "$VARL_1 % 2"    },    {      "id": 48,      "line": 31,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 49,      "line": 30,      "type": "CASE",      "label": "0",      "normalized": "0"    },    {      "id": 50,      "line": 31,      "type": "",      "label": "System.out.println(i + ' is Even')",      "normalized": "System.out.println($VARL_1 + ' is Even')"    },    {      "id": 51,      "line": 34,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 52,      "line": 33,      "type": "CASE",      "label": "1",      "normalized": "1"    },    {      "id": 53,      "line": 34,      "type": "",      "label": "System.out.println(i + ' is Odd')",      "normalized": "System.out.println($VARL_1 + ' is Odd')"    },    {      "id": 54,      "line": 37,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 55,      "line": 36,      "type": "DEFAULT",      "label": "DEFAULT",      "normalized": "DEFAULT"    },    {      "id": 56,      "line": 37,      "type": "",      "label": "System.out.println('WTF!')",      "normalized": "System.out.println('WTF!')"    },    {      "id": 57,      "line": 39,      "type": "",      "label": "System.out.println('Finish')",      "normalized": "System.out.println('Finish')"    },    {      "id": 58,      "line": 43,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 59,      "line": 43,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 60,      "line": 43,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 61,      "line": 43,      "type": "NAME",      "label": "test3",      "normalized": "$METHOD_3"    },    {      "id": 62,      "line": 43,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 63,      "line": 43,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 64,      "line": 43,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 65,      "line": 43,      "type": "NAME",      "label": "i",      "normalized": "$VARL_1"    },    {      "id": 66,      "line": 43,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 67,      "line": 44,      "type": "SWITCH",      "label": "SWITCH",      "normalized": "SWITCH"    },    {      "id": 68,      "line": 44,      "type": "NAME",      "label": "i % 2",      "normalized": "$VARL_1 % 2"    },    {      "id": 69,      "line": 46,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 70,      "line": 45,      "type": "CASE",      "label": "0",      "normalized": "0"    },    {      "id": 71,      "line": 46,      "type": "",      "label": "System.out.println(i + ' is Even')",      "normalized": "System.out.println($VARL_1 + ' is Even')"    },    {      "id": 72,      "line": 47,      "type": "",      "label": "break;",      "normalized": "break;"    },    {      "id": 73,      "line": 49,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 74,      "line": 48,      "type": "CASE",      "label": "1",      "normalized": "1"    },    {      "id": 75,      "line": 49,      "type": "",      "label": "System.out.println(i + ' is Odd')",      "normalized": "System.out.println($VARL_1 + ' is Odd')"    },    {      "id": 76,      "line": 50,      "type": "",      "label": "break;",      "normalized": "break;"    },    {      "id": 77,      "line": 55,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 78,      "line": 55,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 79,      "line": 55,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 80,      "line": 55,      "type": "NAME",      "label": "test4",      "normalized": "$METHOD_4"    },    {      "id": 81,      "line": 55,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 82,      "line": 56,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 83,      "line": 56,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 84,      "line": 56,      "type": "NAME",      "label": "i",      "normalized": "$VARL_1"    },    {      "id": 85,      "line": 56,      "type": "INIT",      "label": "= 0",      "normalized": "= 0"    },    {      "id": 86,      "line": 57,      "type": "SWITCH",      "label": "SWITCH",      "normalized": "SWITCH"    },    {      "id": 87,      "line": 57,      "type": "NAME",      "label": "i",      "normalized": "$VARL_1"    },    {      "id": 88,      "line": 58,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 89,      "line": 58,      "type": "DEFAULT",      "label": "DEFAULT",      "normalized": "DEFAULT"    },    {      "id": 90,      "line": 60,      "type": "",      "label": "System.out.println('Finish')",      "normalized": "System.out.println('Finish')"    },    {      "id": 91,      "line": 64,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 92,      "line": 64,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 93,      "line": 64,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 94,      "line": 64,      "type": "NAME",      "label": "test5",      "normalized": "$METHOD_5"    },    {      "id": 95,      "line": 64,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 96,      "line": 65,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 97,      "line": 65,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 98,      "line": 65,      "type": "NAME",      "label": "i",      "normalized": "$VARL_1"    },    {      "id": 99,      "line": 65,      "type": "INIT",      "label": "= 0",      "normalized": "= 0"    },    {      "id": 100,      "line": 66,      "type": "SWITCH",      "label": "SWITCH",      "normalized": "SWITCH"    },    {      "id": 101,      "line": 66,      "type": "NAME",      "label": "i",      "normalized": "$VARL_1"    },    {      "id": 102,      "line": 67,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 103,      "line": 67,      "type": "CASE",      "label": "0",      "normalized": "0"    },    {      "id": 104,      "line": 72,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 105,      "line": 72,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 106,      "line": 72,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 107,      "line": 72,      "type": "NAME",      "label": "main",      "normalized": "$METHOD_6"    },    {      "id": 108,      "line": 72,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 109,      "line": 72,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 110,      "line": 72,      "type": "TYPE",      "label": "String[]",      "normalized": "String[]"    },    {      "id": 111,      "line": 72,      "type": "NAME",      "label": "args",      "normalized": "$VARL_1"    },    {      "id": 112,      "line": 72,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 113,      "line": 73,      "type": "",      "label": "System.out.println('test-1:')",      "normalized": "System.out.println('test-1:')"    },    {      "id": 114,      "line": 74,      "type": "",      "label": "test1(5)",      "normalized": "$METHOD_1(5)"    },    {      "id": 115,      "line": 75,      "type": "",      "label": "System.out.println('\\ntest-2:')",      "normalized": "System.out.println('\\ntest-2:')"    },    {      "id": 116,      "line": 76,      "type": "",      "label": "test2(7)",      "normalized": "$METHOD_2(7)"    },    {      "id": 117,      "line": 77,      "type": "",      "label": "System.out.println('\\ntest-3:')",      "normalized": "System.out.println('\\ntest-3:')"    },    {      "id": 118,      "line": 78,      "type": "",      "label": "test3(4)",      "normalized": "$METHOD_3(4)"    },    {      "id": 119,      "line": 79,      "type": "",      "label": "System.out.println('\\ntest-4:')",      "normalized": "System.out.println('\\ntest-4:')"    },    {      "id": 120,      "line": 80,      "type": "",      "label": "test4()",      "normalized": "$METHOD_4()"    },    {      "id": 121,      "line": 81,      "type": "",      "label": "System.out.println('\\ntest-5:')",      "normalized": "System.out.println('\\ntest-5:')"    },    {      "id": 122,      "line": 82,      "type": "",      "label": "test5()",      "normalized": "$METHOD_5()"    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 1,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 1,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 1,      "target": 4,      "label": ""    },    {      "id": 4,      "source": 4,      "target": 5,      "label": ""    },    {      "id": 5,      "source": 4,      "target": 6,      "label": ""    },    {      "id": 6,      "source": 4,      "target": 7,      "label": ""    },    {      "id": 7,      "source": 4,      "target": 8,      "label": ""    },    {      "id": 8,      "source": 8,      "target": 9,      "label": ""    },    {      "id": 9,      "source": 9,      "target": 10,      "label": ""    },    {      "id": 10,      "source": 9,      "target": 11,      "label": ""    },    {      "id": 11,      "source": 4,      "target": 12,      "label": ""    },    {      "id": 12,      "source": 12,      "target": 13,      "label": ""    },    {      "id": 13,      "source": 13,      "target": 14,      "label": ""    },    {      "id": 14,      "source": 13,      "target": 16,      "label": ""    },    {      "id": 15,      "source": 16,      "target": 15,      "label": ""    },    {      "id": 16,      "source": 15,      "target": 17,      "label": ""    },    {      "id": 17,      "source": 15,      "target": 18,      "label": ""    },    {      "id": 18,      "source": 13,      "target": 20,      "label": ""    },    {      "id": 19,      "source": 20,      "target": 19,      "label": ""    },    {      "id": 20,      "source": 13,      "target": 21,      "label": ""    },    {      "id": 21,      "source": 21,      "target": 19,      "label": ""    },    {      "id": 22,      "source": 13,      "target": 22,      "label": ""    },    {      "id": 23,      "source": 22,      "target": 19,      "label": ""    },    {      "id": 24,      "source": 13,      "target": 23,      "label": ""    },    {      "id": 25,      "source": 23,      "target": 19,      "label": ""    },    {      "id": 26,      "source": 19,      "target": 24,      "label": ""    },    {      "id": 27,      "source": 19,      "target": 25,      "label": ""    },    {      "id": 28,      "source": 13,      "target": 27,      "label": ""    },    {      "id": 29,      "source": 27,      "target": 26,      "label": ""    },    {      "id": 30,      "source": 13,      "target": 28,      "label": ""    },    {      "id": 31,      "source": 28,      "target": 26,      "label": ""    },    {      "id": 32,      "source": 13,      "target": 29,      "label": ""    },    {      "id": 33,      "source": 29,      "target": 26,      "label": ""    },    {      "id": 34,      "source": 13,      "target": 30,      "label": ""    },    {      "id": 35,      "source": 30,      "target": 26,      "label": ""    },    {      "id": 36,      "source": 26,      "target": 31,      "label": ""    },    {      "id": 37,      "source": 26,      "target": 32,      "label": ""    },    {      "id": 38,      "source": 13,      "target": 34,      "label": ""    },    {      "id": 39,      "source": 34,      "target": 33,      "label": ""    },    {      "id": 40,      "source": 33,      "target": 35,      "label": ""    },    {      "id": 41,      "source": 1,      "target": 36,      "label": ""    },    {      "id": 42,      "source": 36,      "target": 37,      "label": ""    },    {      "id": 43,      "source": 36,      "target": 38,      "label": ""    },    {      "id": 44,      "source": 36,      "target": 39,      "label": ""    },    {      "id": 45,      "source": 36,      "target": 40,      "label": ""    },    {      "id": 46,      "source": 40,      "target": 41,      "label": ""    },    {      "id": 47,      "source": 41,      "target": 42,      "label": ""    },    {      "id": 48,      "source": 41,      "target": 43,      "label": ""    },    {      "id": 49,      "source": 36,      "target": 44,      "label": ""    },    {      "id": 50,      "source": 44,      "target": 45,      "label": ""    },    {      "id": 51,      "source": 44,      "target": 46,      "label": ""    },    {      "id": 52,      "source": 46,      "target": 47,      "label": ""    },    {      "id": 53,      "source": 46,      "target": 49,      "label": ""    },    {      "id": 54,      "source": 49,      "target": 48,      "label": ""    },    {      "id": 55,      "source": 48,      "target": 50,      "label": ""    },    {      "id": 56,      "source": 46,      "target": 52,      "label": ""    },    {      "id": 57,      "source": 52,      "target": 51,      "label": ""    },    {      "id": 58,      "source": 51,      "target": 53,      "label": ""    },    {      "id": 59,      "source": 46,      "target": 55,      "label": ""    },    {      "id": 60,      "source": 55,      "target": 54,      "label": ""    },    {      "id": 61,      "source": 54,      "target": 56,      "label": ""    },    {      "id": 62,      "source": 44,      "target": 57,      "label": ""    },    {      "id": 63,      "source": 1,      "target": 58,      "label": ""    },    {      "id": 64,      "source": 58,      "target": 59,      "label": ""    },    {      "id": 65,      "source": 58,      "target": 60,      "label": ""    },    {      "id": 66,      "source": 58,      "target": 61,      "label": ""    },    {      "id": 67,      "source": 58,      "target": 62,      "label": ""    },    {      "id": 68,      "source": 62,      "target": 63,      "label": ""    },    {      "id": 69,      "source": 63,      "target": 64,      "label": ""    },    {      "id": 70,      "source": 63,      "target": 65,      "label": ""    },    {      "id": 71,      "source": 58,      "target": 66,      "label": ""    },    {      "id": 72,      "source": 66,      "target": 67,      "label": ""    },    {      "id": 73,      "source": 67,      "target": 68,      "label": ""    },    {      "id": 74,      "source": 67,      "target": 70,      "label": ""    },    {      "id": 75,      "source": 70,      "target": 69,      "label": ""    },    {      "id": 76,      "source": 69,      "target": 71,      "label": ""    },    {      "id": 77,      "source": 69,      "target": 72,      "label": ""    },    {      "id": 78,      "source": 67,      "target": 74,      "label": ""    },    {      "id": 79,      "source": 74,      "target": 73,      "label": ""    },    {      "id": 80,      "source": 73,      "target": 75,      "label": ""    },    {      "id": 81,      "source": 73,      "target": 76,      "label": ""    },    {      "id": 82,      "source": 1,      "target": 77,      "label": ""    },    {      "id": 83,      "source": 77,      "target": 78,      "label": ""    },    {      "id": 84,      "source": 77,      "target": 79,      "label": ""    },    {      "id": 85,      "source": 77,      "target": 80,      "label": ""    },    {      "id": 86,      "source": 77,      "target": 81,      "label": ""    },    {      "id": 87,      "source": 81,      "target": 82,      "label": ""    },    {      "id": 88,      "source": 82,      "target": 83,      "label": ""    },    {      "id": 89,      "source": 82,      "target": 84,      "label": ""    },    {      "id": 90,      "source": 82,      "target": 85,      "label": ""    },    {      "id": 91,      "source": 81,      "target": 86,      "label": ""    },    {      "id": 92,      "source": 86,      "target": 87,      "label": ""    },    {      "id": 93,      "source": 86,      "target": 89,      "label": ""    },    {      "id": 94,      "source": 89,      "target": 88,      "label": ""    },    {      "id": 95,      "source": 81,      "target": 90,      "label": ""    },    {      "id": 96,      "source": 1,      "target": 91,      "label": ""    },    {      "id": 97,      "source": 91,      "target": 92,      "label": ""    },    {      "id": 98,      "source": 91,      "target": 93,      "label": ""    },    {      "id": 99,      "source": 91,      "target": 94,      "label": ""    },    {      "id": 100,      "source": 91,      "target": 95,      "label": ""    },    {      "id": 101,      "source": 95,      "target": 96,      "label": ""    },    {      "id": 102,      "source": 96,      "target": 97,      "label": ""    },    {      "id": 103,      "source": 96,      "target": 98,      "label": ""    },    {      "id": 104,      "source": 96,      "target": 99,      "label": ""    },    {      "id": 105,      "source": 95,      "target": 100,      "label": ""    },    {      "id": 106,      "source": 100,      "target": 101,      "label": ""    },    {      "id": 107,      "source": 100,      "target": 103,      "label": ""    },    {      "id": 108,      "source": 103,      "target": 102,      "label": ""    },    {      "id": 109,      "source": 1,      "target": 104,      "label": ""    },    {      "id": 110,      "source": 104,      "target": 105,      "label": ""    },    {      "id": 111,      "source": 104,      "target": 106,      "label": ""    },    {      "id": 112,      "source": 104,      "target": 107,      "label": ""    },    {      "id": 113,      "source": 104,      "target": 108,      "label": ""    },    {      "id": 114,      "source": 108,      "target": 109,      "label": ""    },    {      "id": 115,      "source": 109,      "target": 110,      "label": ""    },    {      "id": 116,      "source": 109,      "target": 111,      "label": ""    },    {      "id": 117,      "source": 104,      "target": 112,      "label": ""    },    {      "id": 118,      "source": 112,      "target": 113,      "label": ""    },    {      "id": 119,      "source": 112,      "target": 114,      "label": ""    },    {      "id": 120,      "source": 112,      "target": 115,      "label": ""    },    {      "id": 121,      "source": 112,      "target": 116,      "label": ""    },    {      "id": 122,      "source": 112,      "target": 117,      "label": ""    },    {      "id": 123,      "source": 112,      "target": 118,      "label": ""    },    {      "id": 124,      "source": 112,      "target": 119,      "label": ""    },    {      "id": 125,      "source": 112,      "target": 120,      "label": ""    },    {      "id": 126,      "source": 112,      "target": 121,      "label": ""    },    {      "id": 127,      "source": 112,      "target": 122,      "label": ""    }  ]
}
AST exported to: ../generate/java/basic/AST/\Test4-AST.json
{
  "directed": true,  "label": "AST of Test4.java",  "type": "Abstract Syntax Tree (AST)",  "file": "Test4.java",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "Test4.java",      "normalized": "Test4.java"    },    {      "id": 1,      "line": 2,      "type": "CLASS",      "label": "CLASS",      "normalized": "CLASS"    },    {      "id": 2,      "line": 2,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 3,      "line": 2,      "type": "NAME",      "label": "Test4",      "normalized": "Test4"    },    {      "id": 4,      "line": 4,      "type": "FIELD",      "label": "FIELD",      "normalized": "FIELD"    },    {      "id": 5,      "line": 4,      "type": "MODIFIER",      "label": "private",      "normalized": "private"    },    {      "id": 6,      "line": 4,      "type": "TYPE",      "label": "String",      "normalized": "String"    },    {      "id": 7,      "line": 4,      "type": "NAME",      "label": "str",      "normalized": "$VARF_1"    },    {      "id": 8,      "line": 6,      "type": "CONSTRUCTOR",      "label": "CONSTRUCTOR",      "normalized": "CONSTRUCTOR"    },    {      "id": 9,      "line": 6,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 10,      "line": 6,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 11,      "line": 7,      "type": "",      "label": "str = 'init'",      "normalized": "$VARF_1 ?= 'init'"    },    {      "id": 12,      "line": 10,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 13,      "line": 10,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 14,      "line": 10,      "type": "RETURN",      "label": "String",      "normalized": "String"    },    {      "id": 15,      "line": 10,      "type": "NAME",      "label": "getString",      "normalized": "$METHOD_1"    },    {      "id": 16,      "line": 10,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 17,      "line": 11,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 18,      "line": 11,      "type": "COND",      "label": "str == null",      "normalized": "$VARF_1 == null"    },    {      "id": 19,      "line": 12,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 20,      "line": 12,      "type": "",      "label": "str = ''",      "normalized": "$VARF_1 ?= ''"    },    {      "id": 21,      "line": 13,      "type": "",      "label": "return str;",      "normalized": "return $VARF_1"    },    {      "id": 22,      "line": 16,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 23,      "line": 16,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 24,      "line": 16,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 25,      "line": 16,      "type": "NAME",      "label": "setString",      "normalized": "$METHOD_2"    },    {      "id": 26,      "line": 16,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 27,      "line": 16,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 28,      "line": 16,      "type": "TYPE",      "label": "String",      "normalized": "String"    },    {      "id": 29,      "line": 16,      "type": "NAME",      "label": "s",      "normalized": "$VARL_1"    },    {      "id": 30,      "line": 16,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 31,      "line": 17,      "type": "",      "label": "str = s",      "normalized": "$VARF_1 ?= $VARL_1"    },    {      "id": 32,      "line": 20,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 33,      "line": 20,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 34,      "line": 20,      "type": "RETURN",      "label": "boolean",      "normalized": "boolean"    },    {      "id": 35,      "line": 20,      "type": "NAME",      "label": "isPrime",      "normalized": "$METHOD_3"    },    {      "id": 36,      "line": 20,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 37,      "line": 20,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 38,      "line": 20,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 39,      "line": 20,      "type": "NAME",      "label": "x",      "normalized": "$VARL_1"    },    {      "id": 40,      "line": 20,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 41,      "line": 21,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 42,      "line": 21,      "type": "TYPE",      "label": "int[]",      "normalized": "int[]"    },    {      "id": 43,      "line": 21,      "type": "NAME",      "label": "primes",      "normalized": "$VARL_2"    },    {      "id": 44,      "line": 21,      "type": "INIT",      "label": "= {2, 3, 5, 7, 11, 13, 17, 19}",      "normalized": "= {2, 3, 5, 7, 11, 13, 17, 19}"    },    {      "id": 45,      "line": 22,      "type": "FOR-EACH",      "label": "FOR-EACH",      "normalized": "FOR-EACH"    },    {      "id": 46,      "line": 22,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 47,      "line": 22,      "type": "NAME",      "label": "p",      "normalized": "$VARL_3"    },    {      "id": 48,      "line": 22,      "type": "IN",      "label": "primes",      "normalized": "$VARL_2"    },    {      "id": 49,      "line": 22,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 50,      "line": 23,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 51,      "line": 23,      "type": "COND",      "label": "x == p",      "normalized": "$VARL_1 == $VARL_3"    },    {      "id": 52,      "line": 24,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 53,      "line": 24,      "type": "",      "label": "return true;",      "normalized": "return true"    },    {      "id": 54,      "line": 26,      "type": "",      "label": "return false;",      "normalized": "return false"    },    {      "id": 55,      "line": 29,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 56,      "line": 29,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 57,      "line": 29,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 58,      "line": 29,      "type": "NAME",      "label": "test1",      "normalized": "$METHOD_4"    },    {      "id": 59,      "line": 29,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 60,      "line": 29,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 61,      "line": 29,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 62,      "line": 29,      "type": "NAME",      "label": "n",      "normalized": "$VARL_1"    },    {      "id": 63,      "line": 29,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 64,      "line": 30,      "type": "FOR",      "label": "FOR",      "normalized": "FOR"    },    {      "id": 65,      "line": 0,      "type": "INIT",      "label": "INIT",      "normalized": "INIT"    },    {      "id": 66,      "line": 30,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 67,      "line": 30,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 68,      "line": 30,      "type": "NAME",      "label": "i",      "normalized": "$VARL_2"    },    {      "id": 69,      "line": 30,      "type": "INIT",      "label": "= 0",      "normalized": "= 0"    },    {      "id": 70,      "line": 30,      "type": "COND",      "label": "i < n",      "normalized": "$VARL_2 < $VARL_1"    },    {      "id": 71,      "line": 0,      "type": "UPDATE",      "label": "UPDATE",      "normalized": "UPDATE"    },    {      "id": 72,      "line": 30,      "type": "",      "label": "++i",      "normalized": "++$VARL_2"    },    {      "id": 73,      "line": 30,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 74,      "line": 31,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 75,      "line": 31,      "type": "COND",      "label": "isPrime(i)",      "normalized": "$METHOD_3($VARL_2)"    },    {      "id": 76,      "line": 32,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 77,      "line": 32,      "type": "",      "label": "System.out.println(i)",      "normalized": "System.out.println($VARL_2)"    },    {      "id": 78,      "line": 34,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 79,      "line": 34,      "type": "",      "label": "continue;",      "normalized": "continue;"    },    {      "id": 80,      "line": 35,      "type": "",      "label": "test2(i)",      "normalized": "test2($VARL_2)"    },    {      "id": 81,      "line": 39,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 82,      "line": 39,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 83,      "line": 39,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 84,      "line": 39,      "type": "NAME",      "label": "test2",      "normalized": "$METHOD_5"    },    {      "id": 85,      "line": 39,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 86,      "line": 39,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 87,      "line": 39,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 88,      "line": 39,      "type": "NAME",      "label": "n",      "normalized": "$VARL_1"    },    {      "id": 89,      "line": 39,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 90,      "line": 40,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 91,      "line": 40,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 92,      "line": 40,      "type": "NAME",      "label": "counter",      "normalized": "$VARL_2"    },    {      "id": 93,      "line": 40,      "type": "INIT",      "label": "= n",      "normalized": "= $VARL_1"    },    {      "id": 94,      "line": 41,      "type": "DO-WHILE",      "label": "DO-WHILE",      "normalized": "DO-WHILE"    },    {      "id": 95,      "line": 47,      "type": "COND",      "label": "counter > 2",      "normalized": "$VARL_2 > 2"    },    {      "id": 96,      "line": 41,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 97,      "line": 42,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 98,      "line": 42,      "type": "COND",      "label": "isPrime(counter)",      "normalized": "$METHOD_3($VARL_2)"    },    {      "id": 99,      "line": 42,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 100,      "line": 43,      "type": "",      "label": "System.out.println(counter)",      "normalized": "System.out.println($VARL_2)"    },    {      "id": 101,      "line": 44,      "type": "",      "label": "break;",      "normalized": "break;"    },    {      "id": 102,      "line": 46,      "type": "",      "label": "--counter",      "normalized": "--$VARL_2"    },    {      "id": 103,      "line": 50,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 104,      "line": 50,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 105,      "line": 50,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 106,      "line": 50,      "type": "NAME",      "label": "test3",      "normalized": "$METHOD_6"    },    {      "id": 107,      "line": 50,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 108,      "line": 50,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 109,      "line": 50,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 110,      "line": 50,      "type": "NAME",      "label": "x",      "normalized": "$VARL_1"    },    {      "id": 111,      "line": 50,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 112,      "line": 50,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 113,      "line": 50,      "type": "NAME",      "label": "y",      "normalized": "$VARL_2"    },    {      "id": 114,      "line": 50,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 115,      "line": 51,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 116,      "line": 51,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 117,      "line": 51,      "type": "NAME",      "label": "res",      "normalized": "$VARL_3"    },    {      "id": 118,      "line": 52,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 119,      "line": 52,      "type": "COND",      "label": "x > y",      "normalized": "$VARL_1 > $VARL_2"    },    {      "id": 120,      "line": 52,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 121,      "line": 53,      "type": "",      "label": "res = x - y",      "normalized": "$VARL_3 ?= $VARL_1 - $VARL_2"    },    {      "id": 122,      "line": 54,      "type": "",      "label": "System.out.println('x-y=' + res)",      "normalized": "System.out.println('x-y=' + $VARL_3)"    },    {      "id": 123,      "line": 55,      "type": "",      "label": "res = x / y",      "normalized": "$VARL_3 ?= $VARL_1 / $VARL_2"    },    {      "id": 124,      "line": 56,      "type": "",      "label": "System.out.println('x/y=' + res)",      "normalized": "System.out.println('x/y=' + $VARL_3)"    },    {      "id": 125,      "line": 57,      "type": "",      "label": "res = x % y",      "normalized": "$VARL_3 ?= $VARL_1 % $VARL_2"    },    {      "id": 126,      "line": 58,      "type": "",      "label": "System.out.println('x%y=' + res)",      "normalized": "System.out.println('x%y=' + $VARL_3)"    },    {      "id": 127,      "line": 59,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 128,      "line": 60,      "type": "",      "label": "res = x + y",      "normalized": "$VARL_3 ?= $VARL_1 + $VARL_2"    },    {      "id": 129,      "line": 61,      "type": "",      "label": "System.out.println('x+y=' + res)",      "normalized": "System.out.println('x+y=' + $VARL_3)"    },    {      "id": 130,      "line": 62,      "type": "",      "label": "res = x * y",      "normalized": "$VARL_3 ?= $VARL_1 * $VARL_2"    },    {      "id": 131,      "line": 63,      "type": "",      "label": "System.out.println('x*y=' + res)",      "normalized": "System.out.println('x*y=' + $VARL_3)"    },    {      "id": 132,      "line": 67,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 133,      "line": 67,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 134,      "line": 67,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 135,      "line": 67,      "type": "NAME",      "label": "test4",      "normalized": "$METHOD_7"    },    {      "id": 136,      "line": 67,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 137,      "line": 68,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 138,      "line": 68,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 139,      "line": 68,      "type": "NAME",      "label": "i",      "normalized": "$VARL_1"    },    {      "id": 140,      "line": 68,      "type": "INIT",      "label": "= 0",      "normalized": "= 0"    },    {      "id": 141,      "line": 69,      "type": "WHILE",      "label": "WHILE",      "normalized": "WHILE"    },    {      "id": 142,      "line": 69,      "type": "COND",      "label": "i < 10",      "normalized": "$VARL_1 < 10"    },    {      "id": 143,      "line": 69,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 144,      "line": 70,      "type": "",      "label": "i += 2",      "normalized": "$VARL_1 ?= 2"    },    {      "id": 145,      "line": 71,      "type": "",      "label": "i--",      "normalized": "$VARL_1--"    },    {      "id": 146,      "line": 72,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 147,      "line": 72,      "type": "COND",      "label": "i == 8",      "normalized": "$VARL_1 == 8"    },    {      "id": 148,      "line": 73,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 149,      "line": 73,      "type": "",      "label": "break;",      "normalized": "break;"    },    {      "id": 150,      "line": 74,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 151,      "line": 74,      "type": "COND",      "label": "i == 5",      "normalized": "$VARL_1 == 5"    },    {      "id": 152,      "line": 75,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 153,      "line": 75,      "type": "",      "label": "continue;",      "normalized": "continue;"    },    {      "id": 154,      "line": 76,      "type": "",      "label": "System.out.println(i)",      "normalized": "System.out.println($VARL_1)"    },    {      "id": 155,      "line": 80,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 156,      "line": 80,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 157,      "line": 80,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 158,      "line": 80,      "type": "NAME",      "label": "test5",      "normalized": "$METHOD_8"    },    {      "id": 159,      "line": 80,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 160,      "line": 81,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 161,      "line": 81,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 162,      "line": 81,      "type": "NAME",      "label": "x",      "normalized": "$VARL_1"    },    {      "id": 163,      "line": 81,      "type": "INIT",      "label": "= 0",      "normalized": "= 0"    },    {      "id": 164,      "line": 82,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 165,      "line": 82,      "type": "TYPE",      "label": "boolean",      "normalized": "boolean"    },    {      "id": 166,      "line": 82,      "type": "NAME",      "label": "p0",      "normalized": "$VARL_2"    },    {      "id": 167,      "line": 82,      "type": "INIT",      "label": "= true",      "normalized": "= true"    },    {      "id": 168,      "line": 83,      "type": "WHILE",      "label": "WHILE",      "normalized": "WHILE"    },    {      "id": 169,      "line": 83,      "type": "COND",      "label": "p0",      "normalized": "$VARL_2"    },    {      "id": 170,      "line": 83,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 171,      "line": 84,      "type": "",      "label": "x += 7",      "normalized": "$VARL_1 ?= 7"    },    {      "id": 172,      "line": 85,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 173,      "line": 85,      "type": "TYPE",      "label": "boolean",      "normalized": "boolean"    },    {      "id": 174,      "line": 85,      "type": "NAME",      "label": "p1",      "normalized": "$VARL_3"    },    {      "id": 175,      "line": 85,      "type": "INIT",      "label": "= true",      "normalized": "= true"    },    {      "id": 176,      "line": 86,      "type": "WHILE",      "label": "WHILE",      "normalized": "WHILE"    },    {      "id": 177,      "line": 86,      "type": "COND",      "label": "p1",      "normalized": "$VARL_3"    },    {      "id": 178,      "line": 86,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 179,      "line": 87,      "type": "",      "label": "x *= 2",      "normalized": "$VARL_1 ?= 2"    },    {      "id": 180,      "line": 88,      "type": "",      "label": "x -= 10",      "normalized": "$VARL_1 ?= 10"    },    {      "id": 181,      "line": 89,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 182,      "line": 89,      "type": "COND",      "label": "x > 10",      "normalized": "$VARL_1 > 10"    },    {      "id": 183,      "line": 89,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 184,      "line": 90,      "type": "",      "label": "x += 8",      "normalized": "$VARL_1 ?= 8"    },    {      "id": 185,      "line": 91,      "type": "",      "label": "x /= 3",      "normalized": "$VARL_1 ?= 3"    },    {      "id": 186,      "line": 92,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 187,      "line": 92,      "type": "COND",      "label": "x > 0",      "normalized": "$VARL_1 > 0"    },    {      "id": 188,      "line": 93,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 189,      "line": 93,      "type": "",      "label": "x -= 2",      "normalized": "$VARL_1 ?= 2"    },    {      "id": 190,      "line": 95,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 191,      "line": 95,      "type": "",      "label": "break;",      "normalized": "break;"    },    {      "id": 192,      "line": 97,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 193,      "line": 97,      "type": "",      "label": "continue;",      "normalized": "continue;"    },    {      "id": 194,      "line": 98,      "type": "",      "label": "x--",      "normalized": "$VARL_1--"    },    {      "id": 195,      "line": 99,      "type": "",      "label": "System.out.println(x)",      "normalized": "System.out.println($VARL_1)"    },    {      "id": 196,      "line": 100,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 197,      "line": 100,      "type": "COND",      "label": "x > 20",      "normalized": "$VARL_1 > 20"    },    {      "id": 198,      "line": 101,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 199,      "line": 101,      "type": "",      "label": "break;",      "normalized": "break;"    },    {      "id": 200,      "line": 102,      "type": "",      "label": "--x",      "normalized": "--$VARL_1"    },    {      "id": 201,      "line": 103,      "type": "",      "label": "p1 = x > 7 ? true : false",      "normalized": "$VARL_3 ?= $VARL_1 > 7 ? true : false"    },    {      "id": 202,      "line": 105,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 203,      "line": 105,      "type": "COND",      "label": "x > 40",      "normalized": "$VARL_1 > 40"    },    {      "id": 204,      "line": 106,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 205,      "line": 106,      "type": "",      "label": "p0 = false",      "normalized": "$VARL_2 ?= false"    },    {      "id": 206,      "line": 107,      "type": "",      "label": "System.out.println(x)",      "normalized": "System.out.println($VARL_1)"    },    {      "id": 207,      "line": 109,      "type": "",      "label": "System.out.println(x)",      "normalized": "System.out.println($VARL_1)"    },    {      "id": 208,      "line": 112,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 209,      "line": 112,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 210,      "line": 112,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 211,      "line": 112,      "type": "NAME",      "label": "main",      "normalized": "$METHOD_9"    },    {      "id": 212,      "line": 112,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 213,      "line": 112,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 214,      "line": 112,      "type": "TYPE",      "label": "String[]",      "normalized": "String[]"    },    {      "id": 215,      "line": 112,      "type": "NAME",      "label": "args",      "normalized": "$VARL_1"    },    {      "id": 216,      "line": 112,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 217,      "line": 113,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 218,      "line": 113,      "type": "TYPE",      "label": "Test4",      "normalized": "Test4"    },    {      "id": 219,      "line": 113,      "type": "NAME",      "label": "tst",      "normalized": "$VARL_2"    },    {      "id": 220,      "line": 113,      "type": "INIT",      "label": "= new Test4()",      "normalized": "= ()"    },    {      "id": 221,      "line": 114,      "type": "",      "label": "tst.setString(tst.getString())",      "normalized": "$VARL_2.$METHOD_2($VARL_2.$METHOD_1())"    },    {      "id": 222,      "line": 115,      "type": "",      "label": "System.out.println(tst.getString())",      "normalized": "System.out.println($VARL_2.$METHOD_1())"    },    {      "id": 223,      "line": 116,      "type": "",      "label": "tst.test1(9)",      "normalized": "$VARL_2.$METHOD_4(9)"    },    {      "id": 224,      "line": 117,      "type": "",      "label": "tst.test2(16)",      "normalized": "$VARL_2.$METHOD_5(16)"    },    {      "id": 225,      "line": 118,      "type": "",      "label": "tst.test3(20, 5)",      "normalized": "$VARL_2.$METHOD_6(20, 5)"    },    {      "id": 226,      "line": 119,      "type": "",      "label": "tst.test4()",      "normalized": "$VARL_2.$METHOD_7()"    },    {      "id": 227,      "line": 120,      "type": "",      "label": "tst.test5()",      "normalized": "$VARL_2.$METHOD_8()"    },    {      "id": 228,      "line": 121,      "type": "",      "label": "System.out.println('End')",      "normalized": "System.out.println('End')"    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 1,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 1,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 1,      "target": 4,      "label": ""    },    {      "id": 4,      "source": 4,      "target": 5,      "label": ""    },    {      "id": 5,      "source": 4,      "target": 6,      "label": ""    },    {      "id": 6,      "source": 4,      "target": 7,      "label": ""    },    {      "id": 7,      "source": 1,      "target": 8,      "label": ""    },    {      "id": 8,      "source": 8,      "target": 9,      "label": ""    },    {      "id": 9,      "source": 8,      "target": 10,      "label": ""    },    {      "id": 10,      "source": 10,      "target": 11,      "label": ""    },    {      "id": 11,      "source": 1,      "target": 12,      "label": ""    },    {      "id": 12,      "source": 12,      "target": 13,      "label": ""    },    {      "id": 13,      "source": 12,      "target": 14,      "label": ""    },    {      "id": 14,      "source": 12,      "target": 15,      "label": ""    },    {      "id": 15,      "source": 12,      "target": 16,      "label": ""    },    {      "id": 16,      "source": 16,      "target": 17,      "label": ""    },    {      "id": 17,      "source": 17,      "target": 18,      "label": ""    },    {      "id": 18,      "source": 17,      "target": 19,      "label": ""    },    {      "id": 19,      "source": 19,      "target": 20,      "label": ""    },    {      "id": 20,      "source": 16,      "target": 21,      "label": ""    },    {      "id": 21,      "source": 1,      "target": 22,      "label": ""    },    {      "id": 22,      "source": 22,      "target": 23,      "label": ""    },    {      "id": 23,      "source": 22,      "target": 24,      "label": ""    },    {      "id": 24,      "source": 22,      "target": 25,      "label": ""    },    {      "id": 25,      "source": 22,      "target": 26,      "label": ""    },    {      "id": 26,      "source": 26,      "target": 27,      "label": ""    },    {      "id": 27,      "source": 27,      "target": 28,      "label": ""    },    {      "id": 28,      "source": 27,      "target": 29,      "label": ""    },    {      "id": 29,      "source": 22,      "target": 30,      "label": ""    },    {      "id": 30,      "source": 30,      "target": 31,      "label": ""    },    {      "id": 31,      "source": 1,      "target": 32,      "label": ""    },    {      "id": 32,      "source": 32,      "target": 33,      "label": ""    },    {      "id": 33,      "source": 32,      "target": 34,      "label": ""    },    {      "id": 34,      "source": 32,      "target": 35,      "label": ""    },    {      "id": 35,      "source": 32,      "target": 36,      "label": ""    },    {      "id": 36,      "source": 36,      "target": 37,      "label": ""    },    {      "id": 37,      "source": 37,      "target": 38,      "label": ""    },    {      "id": 38,      "source": 37,      "target": 39,      "label": ""    },    {      "id": 39,      "source": 32,      "target": 40,      "label": ""    },    {      "id": 40,      "source": 40,      "target": 41,      "label": ""    },    {      "id": 41,      "source": 41,      "target": 42,      "label": ""    },    {      "id": 42,      "source": 41,      "target": 43,      "label": ""    },    {      "id": 43,      "source": 41,      "target": 44,      "label": ""    },    {      "id": 44,      "source": 40,      "target": 45,      "label": ""    },    {      "id": 45,      "source": 45,      "target": 46,      "label": ""    },    {      "id": 46,      "source": 45,      "target": 47,      "label": ""    },    {      "id": 47,      "source": 45,      "target": 48,      "label": ""    },    {      "id": 48,      "source": 45,      "target": 49,      "label": ""    },    {      "id": 49,      "source": 49,      "target": 50,      "label": ""    },    {      "id": 50,      "source": 50,      "target": 51,      "label": ""    },    {      "id": 51,      "source": 50,      "target": 52,      "label": ""    },    {      "id": 52,      "source": 52,      "target": 53,      "label": ""    },    {      "id": 53,      "source": 40,      "target": 54,      "label": ""    },    {      "id": 54,      "source": 1,      "target": 55,      "label": ""    },    {      "id": 55,      "source": 55,      "target": 56,      "label": ""    },    {      "id": 56,      "source": 55,      "target": 57,      "label": ""    },    {      "id": 57,      "source": 55,      "target": 58,      "label": ""    },    {      "id": 58,      "source": 55,      "target": 59,      "label": ""    },    {      "id": 59,      "source": 59,      "target": 60,      "label": ""    },    {      "id": 60,      "source": 60,      "target": 61,      "label": ""    },    {      "id": 61,      "source": 60,      "target": 62,      "label": ""    },    {      "id": 62,      "source": 55,      "target": 63,      "label": ""    },    {      "id": 63,      "source": 63,      "target": 64,      "label": ""    },    {      "id": 64,      "source": 64,      "target": 65,      "label": ""    },    {      "id": 65,      "source": 65,      "target": 66,      "label": ""    },    {      "id": 66,      "source": 66,      "target": 67,      "label": ""    },    {      "id": 67,      "source": 66,      "target": 68,      "label": ""    },    {      "id": 68,      "source": 66,      "target": 69,      "label": ""    },    {      "id": 69,      "source": 64,      "target": 70,      "label": ""    },    {      "id": 70,      "source": 64,      "target": 71,      "label": ""    },    {      "id": 71,      "source": 71,      "target": 72,      "label": ""    },    {      "id": 72,      "source": 64,      "target": 73,      "label": ""    },    {      "id": 73,      "source": 73,      "target": 74,      "label": ""    },    {      "id": 74,      "source": 74,      "target": 75,      "label": ""    },    {      "id": 75,      "source": 74,      "target": 76,      "label": ""    },    {      "id": 76,      "source": 76,      "target": 77,      "label": ""    },    {      "id": 77,      "source": 74,      "target": 78,      "label": ""    },    {      "id": 78,      "source": 78,      "target": 79,      "label": ""    },    {      "id": 79,      "source": 73,      "target": 80,      "label": ""    },    {      "id": 80,      "source": 1,      "target": 81,      "label": ""    },    {      "id": 81,      "source": 81,      "target": 82,      "label": ""    },    {      "id": 82,      "source": 81,      "target": 83,      "label": ""    },    {      "id": 83,      "source": 81,      "target": 84,      "label": ""    },    {      "id": 84,      "source": 81,      "target": 85,      "label": ""    },    {      "id": 85,      "source": 85,      "target": 86,      "label": ""    },    {      "id": 86,      "source": 86,      "target": 87,      "label": ""    },    {      "id": 87,      "source": 86,      "target": 88,      "label": ""    },    {      "id": 88,      "source": 81,      "target": 89,      "label": ""    },    {      "id": 89,      "source": 89,      "target": 90,      "label": ""    },    {      "id": 90,      "source": 90,      "target": 91,      "label": ""    },    {      "id": 91,      "source": 90,      "target": 92,      "label": ""    },    {      "id": 92,      "source": 90,      "target": 93,      "label": ""    },    {      "id": 93,      "source": 89,      "target": 94,      "label": ""    },    {      "id": 94,      "source": 94,      "target": 95,      "label": ""    },    {      "id": 95,      "source": 94,      "target": 96,      "label": ""    },    {      "id": 96,      "source": 96,      "target": 97,      "label": ""    },    {      "id": 97,      "source": 97,      "target": 98,      "label": ""    },    {      "id": 98,      "source": 97,      "target": 99,      "label": ""    },    {      "id": 99,      "source": 99,      "target": 100,      "label": ""    },    {      "id": 100,      "source": 99,      "target": 101,      "label": ""    },    {      "id": 101,      "source": 96,      "target": 102,      "label": ""    },    {      "id": 102,      "source": 1,      "target": 103,      "label": ""    },    {      "id": 103,      "source": 103,      "target": 104,      "label": ""    },    {      "id": 104,      "source": 103,      "target": 105,      "label": ""    },    {      "id": 105,      "source": 103,      "target": 106,      "label": ""    },    {      "id": 106,      "source": 103,      "target": 107,      "label": ""    },    {      "id": 107,      "source": 107,      "target": 108,      "label": ""    },    {      "id": 108,      "source": 108,      "target": 109,      "label": ""    },    {      "id": 109,      "source": 108,      "target": 110,      "label": ""    },    {      "id": 110,      "source": 107,      "target": 111,      "label": ""    },    {      "id": 111,      "source": 111,      "target": 112,      "label": ""    },    {      "id": 112,      "source": 111,      "target": 113,      "label": ""    },    {      "id": 113,      "source": 103,      "target": 114,      "label": ""    },    {      "id": 114,      "source": 114,      "target": 115,      "label": ""    },    {      "id": 115,      "source": 115,      "target": 116,      "label": ""    },    {      "id": 116,      "source": 115,      "target": 117,      "label": ""    },    {      "id": 117,      "source": 114,      "target": 118,      "label": ""    },    {      "id": 118,      "source": 118,      "target": 119,      "label": ""    },    {      "id": 119,      "source": 118,      "target": 120,      "label": ""    },    {      "id": 120,      "source": 120,      "target": 121,      "label": ""    },    {      "id": 121,      "source": 120,      "target": 122,      "label": ""    },    {      "id": 122,      "source": 120,      "target": 123,      "label": ""    },    {      "id": 123,      "source": 120,      "target": 124,      "label": ""    },    {      "id": 124,      "source": 120,      "target": 125,      "label": ""    },    {      "id": 125,      "source": 120,      "target": 126,      "label": ""    },    {      "id": 126,      "source": 118,      "target": 127,      "label": ""    },    {      "id": 127,      "source": 127,      "target": 128,      "label": ""    },    {      "id": 128,      "source": 127,      "target": 129,      "label": ""    },    {      "id": 129,      "source": 127,      "target": 130,      "label": ""    },    {      "id": 130,      "source": 127,      "target": 131,      "label": ""    },    {      "id": 131,      "source": 1,      "target": 132,      "label": ""    },    {      "id": 132,      "source": 132,      "target": 133,      "label": ""    },    {      "id": 133,      "source": 132,      "target": 134,      "label": ""    },    {      "id": 134,      "source": 132,      "target": 135,      "label": ""    },    {      "id": 135,      "source": 132,      "target": 136,      "label": ""    },    {      "id": 136,      "source": 136,      "target": 137,      "label": ""    },    {      "id": 137,      "source": 137,      "target": 138,      "label": ""    },    {      "id": 138,      "source": 137,      "target": 139,      "label": ""    },    {      "id": 139,      "source": 137,      "target": 140,      "label": ""    },    {      "id": 140,      "source": 136,      "target": 141,      "label": ""    },    {      "id": 141,      "source": 141,      "target": 142,      "label": ""    },    {      "id": 142,      "source": 141,      "target": 143,      "label": ""    },    {      "id": 143,      "source": 143,      "target": 144,      "label": ""    },    {      "id": 144,      "source": 143,      "target": 145,      "label": ""    },    {      "id": 145,      "source": 143,      "target": 146,      "label": ""    },    {      "id": 146,      "source": 146,      "target": 147,      "label": ""    },    {      "id": 147,      "source": 146,      "target": 148,      "label": ""    },    {      "id": 148,      "source": 148,      "target": 149,      "label": ""    },    {      "id": 149,      "source": 143,      "target": 150,      "label": ""    },    {      "id": 150,      "source": 150,      "target": 151,      "label": ""    },    {      "id": 151,      "source": 150,      "target": 152,      "label": ""    },    {      "id": 152,      "source": 152,      "target": 153,      "label": ""    },    {      "id": 153,      "source": 143,      "target": 154,      "label": ""    },    {      "id": 154,      "source": 1,      "target": 155,      "label": ""    },    {      "id": 155,      "source": 155,      "target": 156,      "label": ""    },    {      "id": 156,      "source": 155,      "target": 157,      "label": ""    },    {      "id": 157,      "source": 155,      "target": 158,      "label": ""    },    {      "id": 158,      "source": 155,      "target": 159,      "label": ""    },    {      "id": 159,      "source": 159,      "target": 160,      "label": ""    },    {      "id": 160,      "source": 160,      "target": 161,      "label": ""    },    {      "id": 161,      "source": 160,      "target": 162,      "label": ""    },    {      "id": 162,      "source": 160,      "target": 163,      "label": ""    },    {      "id": 163,      "source": 159,      "target": 164,      "label": ""    },    {      "id": 164,      "source": 164,      "target": 165,      "label": ""    },    {      "id": 165,      "source": 164,      "target": 166,      "label": ""    },    {      "id": 166,      "source": 164,      "target": 167,      "label": ""    },    {      "id": 167,      "source": 159,      "target": 168,      "label": ""    },    {      "id": 168,      "source": 168,      "target": 169,      "label": ""    },    {      "id": 169,      "source": 168,      "target": 170,      "label": ""    },    {      "id": 170,      "source": 170,      "target": 171,      "label": ""    },    {      "id": 171,      "source": 170,      "target": 172,      "label": ""    },    {      "id": 172,      "source": 172,      "target": 173,      "label": ""    },    {      "id": 173,      "source": 172,      "target": 174,      "label": ""    },    {      "id": 174,      "source": 172,      "target": 175,      "label": ""    },    {      "id": 175,      "source": 170,      "target": 176,      "label": ""    },    {      "id": 176,      "source": 176,      "target": 177,      "label": ""    },    {      "id": 177,      "source": 176,      "target": 178,      "label": ""    },    {      "id": 178,      "source": 178,      "target": 179,      "label": ""    },    {      "id": 179,      "source": 178,      "target": 180,      "label": ""    },    {      "id": 180,      "source": 178,      "target": 181,      "label": ""    },    {      "id": 181,      "source": 181,      "target": 182,      "label": ""    },    {      "id": 182,      "source": 181,      "target": 183,      "label": ""    },    {      "id": 183,      "source": 183,      "target": 184,      "label": ""    },    {      "id": 184,      "source": 183,      "target": 185,      "label": ""    },    {      "id": 185,      "source": 183,      "target": 186,      "label": ""    },    {      "id": 186,      "source": 186,      "target": 187,      "label": ""    },    {      "id": 187,      "source": 186,      "target": 188,      "label": ""    },    {      "id": 188,      "source": 188,      "target": 189,      "label": ""    },    {      "id": 189,      "source": 186,      "target": 190,      "label": ""    },    {      "id": 190,      "source": 190,      "target": 191,      "label": ""    },    {      "id": 191,      "source": 181,      "target": 192,      "label": ""    },    {      "id": 192,      "source": 192,      "target": 193,      "label": ""    },    {      "id": 193,      "source": 178,      "target": 194,      "label": ""    },    {      "id": 194,      "source": 178,      "target": 195,      "label": ""    },    {      "id": 195,      "source": 178,      "target": 196,      "label": ""    },    {      "id": 196,      "source": 196,      "target": 197,      "label": ""    },    {      "id": 197,      "source": 196,      "target": 198,      "label": ""    },    {      "id": 198,      "source": 198,      "target": 199,      "label": ""    },    {      "id": 199,      "source": 178,      "target": 200,      "label": ""    },    {      "id": 200,      "source": 178,      "target": 201,      "label": ""    },    {      "id": 201,      "source": 170,      "target": 202,      "label": ""    },    {      "id": 202,      "source": 202,      "target": 203,      "label": ""    },    {      "id": 203,      "source": 202,      "target": 204,      "label": ""    },    {      "id": 204,      "source": 204,      "target": 205,      "label": ""    },    {      "id": 205,      "source": 170,      "target": 206,      "label": ""    },    {      "id": 206,      "source": 159,      "target": 207,      "label": ""    },    {      "id": 207,      "source": 1,      "target": 208,      "label": ""    },    {      "id": 208,      "source": 208,      "target": 209,      "label": ""    },    {      "id": 209,      "source": 208,      "target": 210,      "label": ""    },    {      "id": 210,      "source": 208,      "target": 211,      "label": ""    },    {      "id": 211,      "source": 208,      "target": 212,      "label": ""    },    {      "id": 212,      "source": 212,      "target": 213,      "label": ""    },    {      "id": 213,      "source": 213,      "target": 214,      "label": ""    },    {      "id": 214,      "source": 213,      "target": 215,      "label": ""    },    {      "id": 215,      "source": 208,      "target": 216,      "label": ""    },    {      "id": 216,      "source": 216,      "target": 217,      "label": ""    },    {      "id": 217,      "source": 217,      "target": 218,      "label": ""    },    {      "id": 218,      "source": 217,      "target": 219,      "label": ""    },    {      "id": 219,      "source": 217,      "target": 220,      "label": ""    },    {      "id": 220,      "source": 216,      "target": 221,      "label": ""    },    {      "id": 221,      "source": 216,      "target": 222,      "label": ""    },    {      "id": 222,      "source": 216,      "target": 223,      "label": ""    },    {      "id": 223,      "source": 216,      "target": 224,      "label": ""    },    {      "id": 224,      "source": 216,      "target": 225,      "label": ""    },    {      "id": 225,      "source": 216,      "target": 226,      "label": ""    },    {      "id": 226,      "source": 216,      "target": 227,      "label": ""    },    {      "id": 227,      "source": 216,      "target": 228,      "label": ""    }  ]
}
AST exported to: ../generate/java/basic/AST/\Test5-AST.json
{
  "directed": true,  "label": "AST of Test5.java",  "type": "Abstract Syntax Tree (AST)",  "file": "Test5.java",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "Test5.java",      "normalized": "Test5.java"    },    {      "id": 1,      "line": 2,      "type": "IMPORTS",      "label": "IMPORTS",      "normalized": "IMPORTS"    },    {      "id": 2,      "line": 2,      "type": "IMPORT",      "label": "java.io.File",      "normalized": "java.io.File"    },    {      "id": 3,      "line": 3,      "type": "IMPORT",      "label": "java.io.FileInputStream",      "normalized": "java.io.FileInputStream"    },    {      "id": 4,      "line": 4,      "type": "IMPORT",      "label": "java.io.FileNotFoundException",      "normalized": "java.io.FileNotFoundException"    },    {      "id": 5,      "line": 5,      "type": "IMPORT",      "label": "java.io.IOException",      "normalized": "java.io.IOException"    },    {      "id": 6,      "line": 6,      "type": "IMPORT",      "label": "java.util.Arrays",      "normalized": "java.util.Arrays"    },    {      "id": 7,      "line": 8,      "type": "CLASS",      "label": "CLASS",      "normalized": "CLASS"    },    {      "id": 8,      "line": 8,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 9,      "line": 8,      "type": "NAME",      "label": "Test5",      "normalized": "Test5"    },    {      "id": 10,      "line": 10,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 11,      "line": 10,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 12,      "line": 10,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 13,      "line": 10,      "type": "NAME",      "label": "test1",      "normalized": "$METHOD_1"    },    {      "id": 14,      "line": 10,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 15,      "line": 11,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 16,      "line": 11,      "type": "TYPE",      "label": "File",      "normalized": "File"    },    {      "id": 17,      "line": 11,      "type": "NAME",      "label": "file",      "normalized": "$VARL_1"    },    {      "id": 18,      "line": 11,      "type": "INIT",      "label": "= new File('file.log')",      "normalized": "= ('file.log')"    },    {      "id": 19,      "line": 12,      "type": "TRY",      "label": "TRY",      "normalized": "TRY"    },    {      "id": 20,      "line": 12,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 21,      "line": 13,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 22,      "line": 13,      "type": "TYPE",      "label": "FileInputStream",      "normalized": "FileInputStream"    },    {      "id": 23,      "line": 13,      "type": "NAME",      "label": "fis",      "normalized": "$VARL_2"    },    {      "id": 24,      "line": 13,      "type": "INIT",      "label": "= new FileInputStream(file)",      "normalized": "= ($VARL_1)"    },    {      "id": 25,      "line": 14,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 26,      "line": 14,      "type": "TYPE",      "label": "byte[]",      "normalized": "byte[]"    },    {      "id": 27,      "line": 14,      "type": "NAME",      "label": "buffer",      "normalized": "$VARL_3"    },    {      "id": 28,      "line": 14,      "type": "INIT",      "label": "= new byte[256]",      "normalized": "= null"    },    {      "id": 29,      "line": 15,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 30,      "line": 15,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 31,      "line": 15,      "type": "NAME",      "label": "read",      "normalized": "$VARL_4"    },    {      "id": 32,      "line": 15,      "type": "INIT",      "label": "= fis.read(buffer)",      "normalized": "= $VARL_2.$VARL_4($VARL_3)"    },    {      "id": 33,      "line": 16,      "type": "",      "label": "System.out.println(read + ' bytes read.')",      "normalized": "System.out.println($VARL_4 + ' bytes read.')"    },    {      "id": 34,      "line": 17,      "type": "",      "label": "System.out.println(Arrays.toString(Arrays.copyOf(buffer, read)))",      "normalized": "System.out.println(Arrays.toString(Arrays.copyOf($VARL_3, $VARL_4)))"    },    {      "id": 35,      "line": 18,      "type": "CATCH",      "label": "CATCH",      "normalized": "CATCH"    },    {      "id": 36,      "line": 18,      "type": "TYPE",      "label": "FileNotFoundException",      "normalized": "FileNotFoundException"    },    {      "id": 37,      "line": 18,      "type": "NAME",      "label": "ex",      "normalized": "$VARL_5"    },    {      "id": 38,      "line": 18,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 39,      "line": 19,      "type": "",      "label": "System.err.println(ex)",      "normalized": "System.err.println($VARL_5)"    },    {      "id": 40,      "line": 20,      "type": "CATCH",      "label": "CATCH",      "normalized": "CATCH"    },    {      "id": 41,      "line": 20,      "type": "TYPE",      "label": "IOException",      "normalized": "IOException"    },    {      "id": 42,      "line": 20,      "type": "NAME",      "label": "ex",      "normalized": "$VARL_6"    },    {      "id": 43,      "line": 20,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 44,      "line": 21,      "type": "",      "label": "System.err.println(ex)",      "normalized": "System.err.println($VARL_6)"    },    {      "id": 45,      "line": 22,      "type": "FINALLY",      "label": "FINALLY",      "normalized": "FINALLY"    },    {      "id": 46,      "line": 23,      "type": "",      "label": "System.out.println('finally')",      "normalized": "System.out.println('finally')"    },    {      "id": 47,      "line": 28,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 48,      "line": 28,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 49,      "line": 28,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 50,      "line": 28,      "type": "NAME",      "label": "test2",      "normalized": "$METHOD_2"    },    {      "id": 51,      "line": 28,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 52,      "line": 29,      "type": "TRY",      "label": "TRY",      "normalized": "TRY"    },    {      "id": 53,      "line": 29,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 54,      "line": 30,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 55,      "line": 30,      "type": "TYPE",      "label": "File",      "normalized": "File"    },    {      "id": 56,      "line": 30,      "type": "NAME",      "label": "file",      "normalized": "$VARL_1"    },    {      "id": 57,      "line": 30,      "type": "INIT",      "label": "= new File('file.log')",      "normalized": "= ('file.log')"    },    {      "id": 58,      "line": 31,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 59,      "line": 31,      "type": "COND",      "label": "file.exists()",      "normalized": "$VARL_1.exists()"    },    {      "id": 60,      "line": 31,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 61,      "line": 32,      "type": "",      "label": "System.out.println('Permissions for 'file.log':')",      "normalized": "System.out.println('Permissions for 'file.log':')"    },    {      "id": 62,      "line": 33,      "type": "",      "label": "System.out.println('  Read = ' + file.canRead())",      "normalized": "System.out.println('  Read = ' + $VARL_1.canRead())"    },    {      "id": 63,      "line": 34,      "type": "",      "label": "System.out.println('  Write = ' + file.canWrite())",      "normalized": "System.out.println('  Write = ' + $VARL_1.canWrite())"    },    {      "id": 64,      "line": 35,      "type": "",      "label": "System.out.println('  Execute = ' + file.canExecute())",      "normalized": "System.out.println('  Execute = ' + $VARL_1.canExecute())"    },    {      "id": 65,      "line": 36,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 66,      "line": 37,      "type": "",      "label": "System.out.println(''file.log' does not exist!')",      "normalized": "System.out.println(''file.log' does not exist!')"    },    {      "id": 67,      "line": 39,      "type": "FINALLY",      "label": "FINALLY",      "normalized": "FINALLY"    },    {      "id": 68,      "line": 40,      "type": "",      "label": "System.out.println('finally')",      "normalized": "System.out.println('finally')"    },    {      "id": 69,      "line": 45,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 70,      "line": 45,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 71,      "line": 45,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 72,      "line": 45,      "type": "NAME",      "label": "test3",      "normalized": "$METHOD_3"    },    {      "id": 73,      "line": 45,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 74,      "line": 46,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 75,      "line": 46,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 76,      "line": 46,      "type": "NAME",      "label": "i",      "normalized": "$VARL_1"    },    {      "id": 77,      "line": 46,      "type": "INIT",      "label": "= 10",      "normalized": "= 10"    },    {      "id": 78,      "line": 47,      "type": "TRY",      "label": "TRY",      "normalized": "TRY"    },    {      "id": 79,      "line": 47,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 80,      "line": 48,      "type": "WHILE",      "label": "WHILE",      "normalized": "WHILE"    },    {      "id": 81,      "line": 48,      "type": "COND",      "label": "true",      "normalized": "true"    },    {      "id": 82,      "line": 48,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 83,      "line": 49,      "type": "",      "label": "System.out.println(10 / i)",      "normalized": "System.out.println(10 / $VARL_1)"    },    {      "id": 84,      "line": 50,      "type": "",      "label": "--i",      "normalized": "--$VARL_1"    },    {      "id": 85,      "line": 52,      "type": "CATCH",      "label": "CATCH",      "normalized": "CATCH"    },    {      "id": 86,      "line": 52,      "type": "TYPE",      "label": "ArithmeticException",      "normalized": "ArithmeticException"    },    {      "id": 87,      "line": 52,      "type": "NAME",      "label": "ex",      "normalized": "$VARL_2"    },    {      "id": 88,      "line": 52,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 89,      "line": 53,      "type": "",      "label": "System.err.println(ex)",      "normalized": "System.err.println($VARL_2)"    },    {      "id": 90,      "line": 55,      "type": "",      "label": "System.out.println('i = ' + i)",      "normalized": "System.out.println('i = ' + $VARL_1)"    },    {      "id": 91,      "line": 59,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 92,      "line": 59,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 93,      "line": 59,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 94,      "line": 59,      "type": "NAME",      "label": "test4",      "normalized": "$METHOD_4"    },    {      "id": 95,      "line": 59,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 96,      "line": 59,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 97,      "line": 59,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 98,      "line": 59,      "type": "NAME",      "label": "i",      "normalized": "$VARL_1"    },    {      "id": 99,      "line": 59,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 100,      "line": 60,      "type": "TRY",      "label": "TRY",      "normalized": "TRY"    },    {      "id": 101,      "line": 60,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 102,      "line": 61,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 103,      "line": 61,      "type": "COND",      "label": "i > 0",      "normalized": "$VARL_1 > 0"    },    {      "id": 104,      "line": 61,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 105,      "line": 62,      "type": "",      "label": "System.out.println('Positive')",      "normalized": "System.out.println('Positive')"    },    {      "id": 106,      "line": 63,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 107,      "line": 64,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 108,      "line": 64,      "type": "COND",      "label": "i == 0",      "normalized": "$VARL_1 == 0"    },    {      "id": 109,      "line": 65,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 110,      "line": 65,      "type": "",      "label": "throw new Exception('ZERO! [ A Pointless Exception! ]');",      "normalized": "throw ('ZERO! [ A Pointless Exception! ]')"    },    {      "id": 111,      "line": 66,      "type": "",      "label": "System.out.println('Negative')",      "normalized": "System.out.println('Negative')"    },    {      "id": 112,      "line": 68,      "type": "CATCH",      "label": "CATCH",      "normalized": "CATCH"    },    {      "id": 113,      "line": 68,      "type": "TYPE",      "label": "Exception",      "normalized": "Exception"    },    {      "id": 114,      "line": 68,      "type": "NAME",      "label": "ex",      "normalized": "$VARL_2"    },    {      "id": 115,      "line": 68,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 116,      "line": 69,      "type": "",      "label": "System.err.println(ex)",      "normalized": "System.err.println($VARL_2)"    },    {      "id": 117,      "line": 71,      "type": "",      "label": "System.out.println('Finish')",      "normalized": "System.out.println('Finish')"    },    {      "id": 118,      "line": 75,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 119,      "line": 75,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 120,      "line": 75,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 121,      "line": 75,      "type": "NAME",      "label": "main",      "normalized": "$METHOD_5"    },    {      "id": 122,      "line": 75,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 123,      "line": 75,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 124,      "line": 75,      "type": "TYPE",      "label": "String[]",      "normalized": "String[]"    },    {      "id": 125,      "line": 75,      "type": "NAME",      "label": "args",      "normalized": "$VARL_1"    },    {      "id": 126,      "line": 75,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 127,      "line": 76,      "type": "",      "label": "System.out.println('test-1:')",      "normalized": "System.out.println('test-1:')"    },    {      "id": 128,      "line": 77,      "type": "",      "label": "test1()",      "normalized": "$METHOD_1()"    },    {      "id": 129,      "line": 78,      "type": "",      "label": "System.out.println('\\ntest-2:')",      "normalized": "System.out.println('\\ntest-2:')"    },    {      "id": 130,      "line": 79,      "type": "",      "label": "test2()",      "normalized": "$METHOD_2()"    },    {      "id": 131,      "line": 80,      "type": "",      "label": "System.out.println('\\ntest-3:')",      "normalized": "System.out.println('\\ntest-3:')"    },    {      "id": 132,      "line": 81,      "type": "",      "label": "test3()",      "normalized": "$METHOD_3()"    },    {      "id": 133,      "line": 82,      "type": "",      "label": "System.out.println('\\ntest-4:')",      "normalized": "System.out.println('\\ntest-4:')"    },    {      "id": 134,      "line": 83,      "type": "",      "label": "test4(0)",      "normalized": "$METHOD_4(0)"    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 1,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 1,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 1,      "target": 4,      "label": ""    },    {      "id": 4,      "source": 1,      "target": 5,      "label": ""    },    {      "id": 5,      "source": 1,      "target": 6,      "label": ""    },    {      "id": 6,      "source": 0,      "target": 7,      "label": ""    },    {      "id": 7,      "source": 7,      "target": 8,      "label": ""    },    {      "id": 8,      "source": 7,      "target": 9,      "label": ""    },    {      "id": 9,      "source": 7,      "target": 10,      "label": ""    },    {      "id": 10,      "source": 10,      "target": 11,      "label": ""    },    {      "id": 11,      "source": 10,      "target": 12,      "label": ""    },    {      "id": 12,      "source": 10,      "target": 13,      "label": ""    },    {      "id": 13,      "source": 10,      "target": 14,      "label": ""    },    {      "id": 14,      "source": 14,      "target": 15,      "label": ""    },    {      "id": 15,      "source": 15,      "target": 16,      "label": ""    },    {      "id": 16,      "source": 15,      "target": 17,      "label": ""    },    {      "id": 17,      "source": 15,      "target": 18,      "label": ""    },    {      "id": 18,      "source": 14,      "target": 19,      "label": ""    },    {      "id": 19,      "source": 19,      "target": 20,      "label": ""    },    {      "id": 20,      "source": 20,      "target": 21,      "label": ""    },    {      "id": 21,      "source": 21,      "target": 22,      "label": ""    },    {      "id": 22,      "source": 21,      "target": 23,      "label": ""    },    {      "id": 23,      "source": 21,      "target": 24,      "label": ""    },    {      "id": 24,      "source": 20,      "target": 25,      "label": ""    },    {      "id": 25,      "source": 25,      "target": 26,      "label": ""    },    {      "id": 26,      "source": 25,      "target": 27,      "label": ""    },    {      "id": 27,      "source": 25,      "target": 28,      "label": ""    },    {      "id": 28,      "source": 20,      "target": 29,      "label": ""    },    {      "id": 29,      "source": 29,      "target": 30,      "label": ""    },    {      "id": 30,      "source": 29,      "target": 31,      "label": ""    },    {      "id": 31,      "source": 29,      "target": 32,      "label": ""    },    {      "id": 32,      "source": 20,      "target": 33,      "label": ""    },    {      "id": 33,      "source": 20,      "target": 34,      "label": ""    },    {      "id": 34,      "source": 19,      "target": 35,      "label": ""    },    {      "id": 35,      "source": 35,      "target": 36,      "label": ""    },    {      "id": 36,      "source": 35,      "target": 37,      "label": ""    },    {      "id": 37,      "source": 35,      "target": 38,      "label": ""    },    {      "id": 38,      "source": 38,      "target": 39,      "label": ""    },    {      "id": 39,      "source": 19,      "target": 40,      "label": ""    },    {      "id": 40,      "source": 40,      "target": 41,      "label": ""    },    {      "id": 41,      "source": 40,      "target": 42,      "label": ""    },    {      "id": 42,      "source": 40,      "target": 43,      "label": ""    },    {      "id": 43,      "source": 43,      "target": 44,      "label": ""    },    {      "id": 44,      "source": 19,      "target": 45,      "label": ""    },    {      "id": 45,      "source": 45,      "target": 46,      "label": ""    },    {      "id": 46,      "source": 7,      "target": 47,      "label": ""    },    {      "id": 47,      "source": 47,      "target": 48,      "label": ""    },    {      "id": 48,      "source": 47,      "target": 49,      "label": ""    },    {      "id": 49,      "source": 47,      "target": 50,      "label": ""    },    {      "id": 50,      "source": 47,      "target": 51,      "label": ""    },    {      "id": 51,      "source": 51,      "target": 52,      "label": ""    },    {      "id": 52,      "source": 52,      "target": 53,      "label": ""    },    {      "id": 53,      "source": 53,      "target": 54,      "label": ""    },    {      "id": 54,      "source": 54,      "target": 55,      "label": ""    },    {      "id": 55,      "source": 54,      "target": 56,      "label": ""    },    {      "id": 56,      "source": 54,      "target": 57,      "label": ""    },    {      "id": 57,      "source": 53,      "target": 58,      "label": ""    },    {      "id": 58,      "source": 58,      "target": 59,      "label": ""    },    {      "id": 59,      "source": 58,      "target": 60,      "label": ""    },    {      "id": 60,      "source": 60,      "target": 61,      "label": ""    },    {      "id": 61,      "source": 60,      "target": 62,      "label": ""    },    {      "id": 62,      "source": 60,      "target": 63,      "label": ""    },    {      "id": 63,      "source": 60,      "target": 64,      "label": ""    },    {      "id": 64,      "source": 58,      "target": 65,      "label": ""    },    {      "id": 65,      "source": 65,      "target": 66,      "label": ""    },    {      "id": 66,      "source": 52,      "target": 67,      "label": ""    },    {      "id": 67,      "source": 67,      "target": 68,      "label": ""    },    {      "id": 68,      "source": 7,      "target": 69,      "label": ""    },    {      "id": 69,      "source": 69,      "target": 70,      "label": ""    },    {      "id": 70,      "source": 69,      "target": 71,      "label": ""    },    {      "id": 71,      "source": 69,      "target": 72,      "label": ""    },    {      "id": 72,      "source": 69,      "target": 73,      "label": ""    },    {      "id": 73,      "source": 73,      "target": 74,      "label": ""    },    {      "id": 74,      "source": 74,      "target": 75,      "label": ""    },    {      "id": 75,      "source": 74,      "target": 76,      "label": ""    },    {      "id": 76,      "source": 74,      "target": 77,      "label": ""    },    {      "id": 77,      "source": 73,      "target": 78,      "label": ""    },    {      "id": 78,      "source": 78,      "target": 79,      "label": ""    },    {      "id": 79,      "source": 79,      "target": 80,      "label": ""    },    {      "id": 80,      "source": 80,      "target": 81,      "label": ""    },    {      "id": 81,      "source": 80,      "target": 82,      "label": ""    },    {      "id": 82,      "source": 82,      "target": 83,      "label": ""    },    {      "id": 83,      "source": 82,      "target": 84,      "label": ""    },    {      "id": 84,      "source": 78,      "target": 85,      "label": ""    },    {      "id": 85,      "source": 85,      "target": 86,      "label": ""    },    {      "id": 86,      "source": 85,      "target": 87,      "label": ""    },    {      "id": 87,      "source": 85,      "target": 88,      "label": ""    },    {      "id": 88,      "source": 88,      "target": 89,      "label": ""    },    {      "id": 89,      "source": 73,      "target": 90,      "label": ""    },    {      "id": 90,      "source": 7,      "target": 91,      "label": ""    },    {      "id": 91,      "source": 91,      "target": 92,      "label": ""    },    {      "id": 92,      "source": 91,      "target": 93,      "label": ""    },    {      "id": 93,      "source": 91,      "target": 94,      "label": ""    },    {      "id": 94,      "source": 91,      "target": 95,      "label": ""    },    {      "id": 95,      "source": 95,      "target": 96,      "label": ""    },    {      "id": 96,      "source": 96,      "target": 97,      "label": ""    },    {      "id": 97,      "source": 96,      "target": 98,      "label": ""    },    {      "id": 98,      "source": 91,      "target": 99,      "label": ""    },    {      "id": 99,      "source": 99,      "target": 100,      "label": ""    },    {      "id": 100,      "source": 100,      "target": 101,      "label": ""    },    {      "id": 101,      "source": 101,      "target": 102,      "label": ""    },    {      "id": 102,      "source": 102,      "target": 103,      "label": ""    },    {      "id": 103,      "source": 102,      "target": 104,      "label": ""    },    {      "id": 104,      "source": 104,      "target": 105,      "label": ""    },    {      "id": 105,      "source": 102,      "target": 106,      "label": ""    },    {      "id": 106,      "source": 106,      "target": 107,      "label": ""    },    {      "id": 107,      "source": 107,      "target": 108,      "label": ""    },    {      "id": 108,      "source": 107,      "target": 109,      "label": ""    },    {      "id": 109,      "source": 109,      "target": 110,      "label": ""    },    {      "id": 110,      "source": 106,      "target": 111,      "label": ""    },    {      "id": 111,      "source": 100,      "target": 112,      "label": ""    },    {      "id": 112,      "source": 112,      "target": 113,      "label": ""    },    {      "id": 113,      "source": 112,      "target": 114,      "label": ""    },    {      "id": 114,      "source": 112,      "target": 115,      "label": ""    },    {      "id": 115,      "source": 115,      "target": 116,      "label": ""    },    {      "id": 116,      "source": 99,      "target": 117,      "label": ""    },    {      "id": 117,      "source": 7,      "target": 118,      "label": ""    },    {      "id": 118,      "source": 118,      "target": 119,      "label": ""    },    {      "id": 119,      "source": 118,      "target": 120,      "label": ""    },    {      "id": 120,      "source": 118,      "target": 121,      "label": ""    },    {      "id": 121,      "source": 118,      "target": 122,      "label": ""    },    {      "id": 122,      "source": 122,      "target": 123,      "label": ""    },    {      "id": 123,      "source": 123,      "target": 124,      "label": ""    },    {      "id": 124,      "source": 123,      "target": 125,      "label": ""    },    {      "id": 125,      "source": 118,      "target": 126,      "label": ""    },    {      "id": 126,      "source": 126,      "target": 127,      "label": ""    },    {      "id": 127,      "source": 126,      "target": 128,      "label": ""    },    {      "id": 128,      "source": 126,      "target": 129,      "label": ""    },    {      "id": 129,      "source": 126,      "target": 130,      "label": ""    },    {      "id": 130,      "source": 126,      "target": 131,      "label": ""    },    {      "id": 131,      "source": 126,      "target": 132,      "label": ""    },    {      "id": 132,      "source": 126,      "target": 133,      "label": ""    },    {      "id": 133,      "source": 126,      "target": 134,      "label": ""    }  ]
}
AST exported to: ../generate/java/basic/AST/\Test6-AST.json
{
  "directed": true,  "label": "AST of Test6.java",  "type": "Abstract Syntax Tree (AST)",  "file": "Test6.java",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "Test6.java",      "normalized": "Test6.java"    },    {      "id": 1,      "line": 2,      "type": "CLASS",      "label": "CLASS",      "normalized": "CLASS"    },    {      "id": 2,      "line": 2,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 3,      "line": 2,      "type": "NAME",      "label": "Test6",      "normalized": "Test6"    },    {      "id": 4,      "line": 4,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 5,      "line": 4,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 6,      "line": 4,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 7,      "line": 4,      "type": "NAME",      "label": "test",      "normalized": "$METHOD_1"    },    {      "id": 8,      "line": 4,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 9,      "line": 5,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 10,      "line": 5,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 11,      "line": 5,      "type": "NAME",      "label": "x",      "normalized": "$VARL_1"    },    {      "id": 12,      "line": 5,      "type": "INIT",      "label": "= 0",      "normalized": "= 0"    },    {      "id": 13,      "line": 6,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 14,      "line": 6,      "type": "TYPE",      "label": "boolean",      "normalized": "boolean"    },    {      "id": 15,      "line": 6,      "type": "NAME",      "label": "p1",      "normalized": "$VARL_2"    },    {      "id": 16,      "line": 6,      "type": "INIT",      "label": "= true",      "normalized": "= true"    },    {      "id": 17,      "line": 7,      "type": "WHILE",      "label": "WHILE",      "normalized": "WHILE"    },    {      "id": 18,      "line": 7,      "type": "COND",      "label": "p1",      "normalized": "$VARL_2"    },    {      "id": 19,      "line": 7,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 20,      "line": 8,      "type": "",      "label": "x *= 2",      "normalized": "$VARL_1 ?= 2"    },    {      "id": 21,      "line": 9,      "type": "",      "label": "x -= 10",      "normalized": "$VARL_1 ?= 10"    },    {      "id": 22,      "line": 10,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 23,      "line": 10,      "type": "COND",      "label": "x > 10",      "normalized": "$VARL_1 > 10"    },    {      "id": 24,      "line": 10,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 25,      "line": 11,      "type": "",      "label": "x += 8",      "normalized": "$VARL_1 ?= 8"    },    {      "id": 26,      "line": 12,      "type": "",      "label": "x /= 3",      "normalized": "$VARL_1 ?= 3"    },    {      "id": 27,      "line": 13,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 28,      "line": 13,      "type": "COND",      "label": "x > 0",      "normalized": "$VARL_1 > 0"    },    {      "id": 29,      "line": 14,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 30,      "line": 14,      "type": "",      "label": "x -= 2",      "normalized": "$VARL_1 ?= 2"    },    {      "id": 31,      "line": 16,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 32,      "line": 16,      "type": "",      "label": "break;",      "normalized": "break;"    },    {      "id": 33,      "line": 18,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 34,      "line": 18,      "type": "",      "label": "continue;",      "normalized": "continue;"    },    {      "id": 35,      "line": 19,      "type": "",      "label": "x--",      "normalized": "$VARL_1--"    },    {      "id": 36,      "line": 20,      "type": "",      "label": "System.out.println(x)",      "normalized": "System.out.println($VARL_1)"    },    {      "id": 37,      "line": 21,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 38,      "line": 21,      "type": "COND",      "label": "x > 20",      "normalized": "$VARL_1 > 20"    },    {      "id": 39,      "line": 22,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 40,      "line": 22,      "type": "",      "label": "break;",      "normalized": "break;"    },    {      "id": 41,      "line": 23,      "type": "",      "label": "--x",      "normalized": "--$VARL_1"    },    {      "id": 42,      "line": 24,      "type": "",      "label": "p1 = x > 7 ? true : false",      "normalized": "$VARL_2 ?= $VARL_1 > 7 ? true : false"    },    {      "id": 43,      "line": 28,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 44,      "line": 28,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 45,      "line": 28,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 46,      "line": 28,      "type": "NAME",      "label": "main",      "normalized": "$METHOD_2"    },    {      "id": 47,      "line": 28,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 48,      "line": 28,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 49,      "line": 28,      "type": "TYPE",      "label": "String[]",      "normalized": "String[]"    },    {      "id": 50,      "line": 28,      "type": "NAME",      "label": "args",      "normalized": "$VARL_1"    },    {      "id": 51,      "line": 28,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 52,      "line": 29,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 53,      "line": 29,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 54,      "line": 29,      "type": "NAME",      "label": "x",      "normalized": "$VARL_2"    },    {      "id": 55,      "line": 29,      "type": "INIT",      "label": "= 120",      "normalized": "= 120"    },    {      "id": 56,      "line": 30,      "type": "WHILE",      "label": "WHILE",      "normalized": "WHILE"    },    {      "id": 57,      "line": 30,      "type": "COND",      "label": "true",      "normalized": "true"    },    {      "id": 58,      "line": 30,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 59,      "line": 31,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 60,      "line": 31,      "type": "COND",      "label": "x > 100",      "normalized": "$VARL_2 > 100"    },    {      "id": 61,      "line": 31,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 62,      "line": 32,      "type": "",      "label": "x -= 10",      "normalized": "$VARL_2 ?= 10"    },    {      "id": 63,      "line": 33,      "type": "",      "label": "continue;",      "normalized": "continue;"    },    {      "id": 64,      "line": 34,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 65,      "line": 35,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 66,      "line": 35,      "type": "COND",      "label": "x < 10",      "normalized": "$VARL_2 < 10"    },    {      "id": 67,      "line": 36,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 68,      "line": 36,      "type": "",      "label": "break;",      "normalized": "break;"    },    {      "id": 69,      "line": 38,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 70,      "line": 38,      "type": "",      "label": "x -= 5",      "normalized": "$VARL_2 ?= 5"    },    {      "id": 71,      "line": 40,      "type": "",      "label": "System.out.println(x)",      "normalized": "System.out.println($VARL_2)"    },    {      "id": 72,      "line": 43,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 73,      "line": 43,      "type": "TYPE",      "label": "Test6",      "normalized": "Test6"    },    {      "id": 74,      "line": 43,      "type": "NAME",      "label": "tst",      "normalized": "$VARL_3"    },    {      "id": 75,      "line": 43,      "type": "INIT",      "label": "= new Test6()",      "normalized": "= ()"    },    {      "id": 76,      "line": 44,      "type": "",      "label": "tst.test()",      "normalized": "$VARL_3.$METHOD_1()"    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 1,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 1,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 1,      "target": 4,      "label": ""    },    {      "id": 4,      "source": 4,      "target": 5,      "label": ""    },    {      "id": 5,      "source": 4,      "target": 6,      "label": ""    },    {      "id": 6,      "source": 4,      "target": 7,      "label": ""    },    {      "id": 7,      "source": 4,      "target": 8,      "label": ""    },    {      "id": 8,      "source": 8,      "target": 9,      "label": ""    },    {      "id": 9,      "source": 9,      "target": 10,      "label": ""    },    {      "id": 10,      "source": 9,      "target": 11,      "label": ""    },    {      "id": 11,      "source": 9,      "target": 12,      "label": ""    },    {      "id": 12,      "source": 8,      "target": 13,      "label": ""    },    {      "id": 13,      "source": 13,      "target": 14,      "label": ""    },    {      "id": 14,      "source": 13,      "target": 15,      "label": ""    },    {      "id": 15,      "source": 13,      "target": 16,      "label": ""    },    {      "id": 16,      "source": 8,      "target": 17,      "label": ""    },    {      "id": 17,      "source": 17,      "target": 18,      "label": ""    },    {      "id": 18,      "source": 17,      "target": 19,      "label": ""    },    {      "id": 19,      "source": 19,      "target": 20,      "label": ""    },    {      "id": 20,      "source": 19,      "target": 21,      "label": ""    },    {      "id": 21,      "source": 19,      "target": 22,      "label": ""    },    {      "id": 22,      "source": 22,      "target": 23,      "label": ""    },    {      "id": 23,      "source": 22,      "target": 24,      "label": ""    },    {      "id": 24,      "source": 24,      "target": 25,      "label": ""    },    {      "id": 25,      "source": 24,      "target": 26,      "label": ""    },    {      "id": 26,      "source": 24,      "target": 27,      "label": ""    },    {      "id": 27,      "source": 27,      "target": 28,      "label": ""    },    {      "id": 28,      "source": 27,      "target": 29,      "label": ""    },    {      "id": 29,      "source": 29,      "target": 30,      "label": ""    },    {      "id": 30,      "source": 27,      "target": 31,      "label": ""    },    {      "id": 31,      "source": 31,      "target": 32,      "label": ""    },    {      "id": 32,      "source": 22,      "target": 33,      "label": ""    },    {      "id": 33,      "source": 33,      "target": 34,      "label": ""    },    {      "id": 34,      "source": 19,      "target": 35,      "label": ""    },    {      "id": 35,      "source": 19,      "target": 36,      "label": ""    },    {      "id": 36,      "source": 19,      "target": 37,      "label": ""    },    {      "id": 37,      "source": 37,      "target": 38,      "label": ""    },    {      "id": 38,      "source": 37,      "target": 39,      "label": ""    },    {      "id": 39,      "source": 39,      "target": 40,      "label": ""    },    {      "id": 40,      "source": 19,      "target": 41,      "label": ""    },    {      "id": 41,      "source": 19,      "target": 42,      "label": ""    },    {      "id": 42,      "source": 1,      "target": 43,      "label": ""    },    {      "id": 43,      "source": 43,      "target": 44,      "label": ""    },    {      "id": 44,      "source": 43,      "target": 45,      "label": ""    },    {      "id": 45,      "source": 43,      "target": 46,      "label": ""    },    {      "id": 46,      "source": 43,      "target": 47,      "label": ""    },    {      "id": 47,      "source": 47,      "target": 48,      "label": ""    },    {      "id": 48,      "source": 48,      "target": 49,      "label": ""    },    {      "id": 49,      "source": 48,      "target": 50,      "label": ""    },    {      "id": 50,      "source": 43,      "target": 51,      "label": ""    },    {      "id": 51,      "source": 51,      "target": 52,      "label": ""    },    {      "id": 52,      "source": 52,      "target": 53,      "label": ""    },    {      "id": 53,      "source": 52,      "target": 54,      "label": ""    },    {      "id": 54,      "source": 52,      "target": 55,      "label": ""    },    {      "id": 55,      "source": 51,      "target": 56,      "label": ""    },    {      "id": 56,      "source": 56,      "target": 57,      "label": ""    },    {      "id": 57,      "source": 56,      "target": 58,      "label": ""    },    {      "id": 58,      "source": 58,      "target": 59,      "label": ""    },    {      "id": 59,      "source": 59,      "target": 60,      "label": ""    },    {      "id": 60,      "source": 59,      "target": 61,      "label": ""    },    {      "id": 61,      "source": 61,      "target": 62,      "label": ""    },    {      "id": 62,      "source": 61,      "target": 63,      "label": ""    },    {      "id": 63,      "source": 59,      "target": 64,      "label": ""    },    {      "id": 64,      "source": 64,      "target": 65,      "label": ""    },    {      "id": 65,      "source": 65,      "target": 66,      "label": ""    },    {      "id": 66,      "source": 65,      "target": 67,      "label": ""    },    {      "id": 67,      "source": 67,      "target": 68,      "label": ""    },    {      "id": 68,      "source": 65,      "target": 69,      "label": ""    },    {      "id": 69,      "source": 69,      "target": 70,      "label": ""    },    {      "id": 70,      "source": 58,      "target": 71,      "label": ""    },    {      "id": 71,      "source": 51,      "target": 72,      "label": ""    },    {      "id": 72,      "source": 72,      "target": 73,      "label": ""    },    {      "id": 73,      "source": 72,      "target": 74,      "label": ""    },    {      "id": 74,      "source": 72,      "target": 75,      "label": ""    },    {      "id": 75,      "source": 51,      "target": 76,      "label": ""    }  ]
}
AST exported to: ../generate/java/basic/AST/\Test7-AST.json
{
  "directed": true,  "label": "AST of Test7.java",  "type": "Abstract Syntax Tree (AST)",  "file": "Test7.java",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "Test7.java",      "normalized": "Test7.java"    },    {      "id": 1,      "line": 2,      "type": "CLASS",      "label": "CLASS",      "normalized": "CLASS"    },    {      "id": 2,      "line": 2,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 3,      "line": 2,      "type": "NAME",      "label": "Test7",      "normalized": "Test7"    },    {      "id": 4,      "line": 4,      "type": "FIELD",      "label": "FIELD",      "normalized": "FIELD"    },    {      "id": 5,      "line": 4,      "type": "MODIFIER",      "label": "private",      "normalized": "private"    },    {      "id": 6,      "line": 4,      "type": "TYPE",      "label": "String",      "normalized": "String"    },    {      "id": 7,      "line": 4,      "type": "NAME",      "label": "str",      "normalized": "$VARF_1"    },    {      "id": 8,      "line": 5,      "type": "FIELD",      "label": "FIELD",      "normalized": "FIELD"    },    {      "id": 9,      "line": 5,      "type": "MODIFIER",      "label": "private",      "normalized": "private"    },    {      "id": 10,      "line": 5,      "type": "TYPE",      "label": "Integer",      "normalized": "Integer"    },    {      "id": 11,      "line": 5,      "type": "NAME",      "label": "integer",      "normalized": "$VARF_2"    },    {      "id": 12,      "line": 7,      "type": "CONSTRUCTOR",      "label": "CONSTRUCTOR",      "normalized": "CONSTRUCTOR"    },    {      "id": 13,      "line": 7,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 14,      "line": 7,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 15,      "line": 8,      "type": "",      "label": "str = ''",      "normalized": "$VARF_1 ?= ''"    },    {      "id": 16,      "line": 9,      "type": "",      "label": "integer = 0",      "normalized": "$VARF_2 ?= 0"    },    {      "id": 17,      "line": 12,      "type": "CONSTRUCTOR",      "label": "CONSTRUCTOR",      "normalized": "CONSTRUCTOR"    },    {      "id": 18,      "line": 12,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 19,      "line": 12,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 20,      "line": 12,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 21,      "line": 12,      "type": "TYPE",      "label": "String",      "normalized": "String"    },    {      "id": 22,      "line": 12,      "type": "NAME",      "label": "str",      "normalized": "$VARL_1"    },    {      "id": 23,      "line": 12,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 24,      "line": 12,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 25,      "line": 12,      "type": "NAME",      "label": "sub",      "normalized": "$VARL_2"    },    {      "id": 26,      "line": 12,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 27,      "line": 13,      "type": "",      "label": "this.str = str.substring(sub)",      "normalized": "this.$VARL_1 ?= $VARL_1.substring($VARL_2)"    },    {      "id": 28,      "line": 14,      "type": "",      "label": "integer = 0",      "normalized": "$VARF_2 ?= 0"    },    {      "id": 29,      "line": 17,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 30,      "line": 17,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 31,      "line": 17,      "type": "RETURN",      "label": "String",      "normalized": "String"    },    {      "id": 32,      "line": 17,      "type": "NAME",      "label": "getSTR",      "normalized": "$METHOD_1"    },    {      "id": 33,      "line": 17,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 34,      "line": 18,      "type": "",      "label": "return str;",      "normalized": "return $VARF_1"    },    {      "id": 35,      "line": 21,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 36,      "line": 21,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 37,      "line": 21,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 38,      "line": 21,      "type": "NAME",      "label": "setInteger",      "normalized": "$METHOD_2"    },    {      "id": 39,      "line": 21,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 40,      "line": 21,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 41,      "line": 21,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 42,      "line": 21,      "type": "NAME",      "label": "i",      "normalized": "$VARL_1"    },    {      "id": 43,      "line": 21,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 44,      "line": 22,      "type": "",      "label": "integer = i",      "normalized": "$VARF_2 ?= $VARL_1"    },    {      "id": 45,      "line": 25,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 46,      "line": 25,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 47,      "line": 25,      "type": "RETURN",      "label": "int",      "normalized": "int"    },    {      "id": 48,      "line": 25,      "type": "NAME",      "label": "getInteger",      "normalized": "$METHOD_3"    },    {      "id": 49,      "line": 25,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 50,      "line": 26,      "type": "",      "label": "return integer;",      "normalized": "return $VARF_2"    },    {      "id": 51,      "line": 29,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 52,      "line": 29,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 53,      "line": 29,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 54,      "line": 29,      "type": "NAME",      "label": "setSTR",      "normalized": "$METHOD_4"    },    {      "id": 55,      "line": 29,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 56,      "line": 29,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 57,      "line": 29,      "type": "TYPE",      "label": "String",      "normalized": "String"    },    {      "id": 58,      "line": 29,      "type": "NAME",      "label": "str",      "normalized": "$VARL_1"    },    {      "id": 59,      "line": 29,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 60,      "line": 30,      "type": "",      "label": "this.str = str",      "normalized": "this.$VARL_1 ?= $VARL_1"    },    {      "id": 61,      "line": 33,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 62,      "line": 33,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 63,      "line": 33,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 64,      "line": 33,      "type": "NAME",      "label": "method1",      "normalized": "$METHOD_5"    },    {      "id": 65,      "line": 33,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 66,      "line": 34,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 67,      "line": 34,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 68,      "line": 34,      "type": "NAME",      "label": "len",      "normalized": "$VARL_1"    },    {      "id": 69,      "line": 34,      "type": "INIT",      "label": "= str.length()",      "normalized": "= $VARF_1.length()"    },    {      "id": 70,      "line": 35,      "type": "",      "label": "System.out.println('STR length is ' + len)",      "normalized": "System.out.println('STR length is ' + $VARL_1)"    },    {      "id": 71,      "line": 38,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 72,      "line": 38,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 73,      "line": 38,      "type": "RETURN",      "label": "String",      "normalized": "String"    },    {      "id": 74,      "line": 38,      "type": "NAME",      "label": "addSTR",      "normalized": "$METHOD_6"    },    {      "id": 75,      "line": 38,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 76,      "line": 38,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 77,      "line": 38,      "type": "TYPE",      "label": "String",      "normalized": "String"    },    {      "id": 78,      "line": 38,      "type": "NAME",      "label": "str",      "normalized": "$VARL_1"    },    {      "id": 79,      "line": 38,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 80,      "line": 39,      "type": "",      "label": "return this.str + str;",      "normalized": "return this.$VARL_1 + $VARL_1"    },    {      "id": 81,      "line": 42,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 82,      "line": 42,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 83,      "line": 42,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 84,      "line": 42,      "type": "NAME",      "label": "simple",      "normalized": "$METHOD_7"    },    {      "id": 85,      "line": 42,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 86,      "line": 43,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 87,      "line": 43,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 88,      "line": 43,      "type": "NAME",      "label": "i",      "normalized": "$VARL_1"    },    {      "id": 89,      "line": 43,      "type": "INIT",      "label": "= 1",      "normalized": "= 1"    },    {      "id": 90,      "line": 43,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 91,      "line": 43,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 92,      "line": 43,      "type": "NAME",      "label": "j",      "normalized": "$VARL_2"    },    {      "id": 93,      "line": 44,      "type": "",      "label": "i++",      "normalized": "$VARL_1++"    },    {      "id": 94,      "line": 45,      "type": "",      "label": "System.out.println(i)",      "normalized": "System.out.println($VARL_1)"    },    {      "id": 95,      "line": 46,      "type": "",      "label": "j = i + 3",      "normalized": "$VARL_2 ?= $VARL_1 + 3"    },    {      "id": 96,      "line": 47,      "type": "",      "label": "System.out.println(j)",      "normalized": "System.out.println($VARL_2)"    },    {      "id": 97,      "line": 50,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 98,      "line": 50,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 99,      "line": 50,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 100,      "line": 50,      "type": "NAME",      "label": "main",      "normalized": "$METHOD_8"    },    {      "id": 101,      "line": 50,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 102,      "line": 50,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 103,      "line": 50,      "type": "TYPE",      "label": "String[]",      "normalized": "String[]"    },    {      "id": 104,      "line": 50,      "type": "NAME",      "label": "args",      "normalized": "$VARL_1"    },    {      "id": 105,      "line": 50,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 106,      "line": 51,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 107,      "line": 51,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 108,      "line": 51,      "type": "NAME",      "label": "idx",      "normalized": "$VARL_2"    },    {      "id": 109,      "line": 51,      "type": "INIT",      "label": "= 4",      "normalized": "= 4"    },    {      "id": 110,      "line": 52,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 111,      "line": 52,      "type": "TYPE",      "label": "Test7",      "normalized": "Test7"    },    {      "id": 112,      "line": 52,      "type": "NAME",      "label": "t",      "normalized": "$VARL_3"    },    {      "id": 113,      "line": 52,      "type": "INIT",      "label": "= new Test7()",      "normalized": "= ()"    },    {      "id": 114,      "line": 53,      "type": "",      "label": "t.method1()",      "normalized": "$VARL_3.$METHOD_5()"    },    {      "id": 115,      "line": 54,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 116,      "line": 54,      "type": "TYPE",      "label": "String",      "normalized": "String"    },    {      "id": 117,      "line": 54,      "type": "NAME",      "label": "str",      "normalized": "$VARL_4"    },    {      "id": 118,      "line": 54,      "type": "INIT",      "label": "= 'some-string'",      "normalized": "= 'some-string'"    },    {      "id": 119,      "line": 55,      "type": "",      "label": "t.setSTR(t.addSTR(str).concat(str))",      "normalized": "$VARL_3.$METHOD_4($VARL_3.$METHOD_6($VARL_4).concat($VARL_4))"    },    {      "id": 120,      "line": 56,      "type": "",      "label": "System.out.println(t.getSTR())",      "normalized": "System.out.println($VARL_3.$METHOD_1())"    },    {      "id": 121,      "line": 57,      "type": "",      "label": "System.out.println(t.getSTR().charAt(idx += 2))",      "normalized": "System.out.println($VARL_3.$METHOD_1().charAt($VARL_2 ?= 2))"    },    {      "id": 122,      "line": 58,      "type": "",      "label": "t = new Test7(str.concat('-plus-more'), idx)",      "normalized": "$VARL_3 ?= ($VARL_4.concat('-plus-more'), $VARL_2)"    },    {      "id": 123,      "line": 59,      "type": "",      "label": "new Test7('This is a string', 10).getSTR()",      "normalized": "('This is a string', 10).$METHOD_1()"    },    {      "id": 124,      "line": 60,      "type": "",      "label": "simple()",      "normalized": "$METHOD_7()"    },    {      "id": 125,      "line": 61,      "type": "",      "label": "t.sideEffect()",      "normalized": "$VARL_3.sideEffect()"    },    {      "id": 126,      "line": 62,      "type": "",      "label": "System.out.println('t.integer = ' + t.getInteger())",      "normalized": "System.out.println('t.integer = ' + $VARL_3.$METHOD_3())"    },    {      "id": 127,      "line": 63,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 128,      "line": 63,      "type": "TYPE",      "label": "StringBuilder",      "normalized": "StringBuilder"    },    {      "id": 129,      "line": 63,      "type": "NAME",      "label": "val",      "normalized": "$VARL_5"    },    {      "id": 130,      "line": 63,      "type": "INIT",      "label": "= new StringBuilder('10')",      "normalized": "= ('10')"    },    {      "id": 131,      "line": 64,      "type": "",      "label": "System.out.println('val = ' + val)",      "normalized": "System.out.println('val = ' + $VARL_5)"    },    {      "id": 132,      "line": 65,      "type": "",      "label": "t.doubleSideEffect(val)",      "normalized": "$VARL_3.doubleSideEffect($VARL_5)"    },    {      "id": 133,      "line": 66,      "type": "",      "label": "System.out.println('val = ' + val)",      "normalized": "System.out.println('val = ' + $VARL_5)"    },    {      "id": 134,      "line": 67,      "type": "",      "label": "System.out.println('t.integer = ' + t.getInteger())",      "normalized": "System.out.println('t.integer = ' + $VARL_3.$METHOD_3())"    },    {      "id": 135,      "line": 70,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 136,      "line": 70,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 137,      "line": 70,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 138,      "line": 70,      "type": "NAME",      "label": "sideEffect",      "normalized": "$METHOD_9"    },    {      "id": 139,      "line": 70,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 140,      "line": 71,      "type": "",      "label": "integer++",      "normalized": "$VARF_2++"    },    {      "id": 141,      "line": 74,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 142,      "line": 74,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 143,      "line": 74,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 144,      "line": 74,      "type": "NAME",      "label": "doubleSideEffect",      "normalized": "$METHOD_10"    },    {      "id": 145,      "line": 74,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 146,      "line": 74,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 147,      "line": 74,      "type": "TYPE",      "label": "StringBuilder",      "normalized": "StringBuilder"    },    {      "id": 148,      "line": 74,      "type": "NAME",      "label": "intStr",      "normalized": "$VARL_1"    },    {      "id": 149,      "line": 74,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 150,      "line": 75,      "type": "",      "label": "intStr.append(0)",      "normalized": "$VARL_1.append(0)"    },    {      "id": 151,      "line": 76,      "type": "",      "label": "integer = Integer.parseInt(intStr.toString())",      "normalized": "$VARF_2 ?= Integer.parseInt($VARL_1.toString())"    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 1,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 1,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 1,      "target": 4,      "label": ""    },    {      "id": 4,      "source": 4,      "target": 5,      "label": ""    },    {      "id": 5,      "source": 4,      "target": 6,      "label": ""    },    {      "id": 6,      "source": 4,      "target": 7,      "label": ""    },    {      "id": 7,      "source": 1,      "target": 8,      "label": ""    },    {      "id": 8,      "source": 8,      "target": 9,      "label": ""    },    {      "id": 9,      "source": 8,      "target": 10,      "label": ""    },    {      "id": 10,      "source": 8,      "target": 11,      "label": ""    },    {      "id": 11,      "source": 1,      "target": 12,      "label": ""    },    {      "id": 12,      "source": 12,      "target": 13,      "label": ""    },    {      "id": 13,      "source": 12,      "target": 14,      "label": ""    },    {      "id": 14,      "source": 14,      "target": 15,      "label": ""    },    {      "id": 15,      "source": 14,      "target": 16,      "label": ""    },    {      "id": 16,      "source": 1,      "target": 17,      "label": ""    },    {      "id": 17,      "source": 17,      "target": 18,      "label": ""    },    {      "id": 18,      "source": 17,      "target": 19,      "label": ""    },    {      "id": 19,      "source": 19,      "target": 20,      "label": ""    },    {      "id": 20,      "source": 20,      "target": 21,      "label": ""    },    {      "id": 21,      "source": 20,      "target": 22,      "label": ""    },    {      "id": 22,      "source": 19,      "target": 23,      "label": ""    },    {      "id": 23,      "source": 23,      "target": 24,      "label": ""    },    {      "id": 24,      "source": 23,      "target": 25,      "label": ""    },    {      "id": 25,      "source": 17,      "target": 26,      "label": ""    },    {      "id": 26,      "source": 26,      "target": 27,      "label": ""    },    {      "id": 27,      "source": 26,      "target": 28,      "label": ""    },    {      "id": 28,      "source": 1,      "target": 29,      "label": ""    },    {      "id": 29,      "source": 29,      "target": 30,      "label": ""    },    {      "id": 30,      "source": 29,      "target": 31,      "label": ""    },    {      "id": 31,      "source": 29,      "target": 32,      "label": ""    },    {      "id": 32,      "source": 29,      "target": 33,      "label": ""    },    {      "id": 33,      "source": 33,      "target": 34,      "label": ""    },    {      "id": 34,      "source": 1,      "target": 35,      "label": ""    },    {      "id": 35,      "source": 35,      "target": 36,      "label": ""    },    {      "id": 36,      "source": 35,      "target": 37,      "label": ""    },    {      "id": 37,      "source": 35,      "target": 38,      "label": ""    },    {      "id": 38,      "source": 35,      "target": 39,      "label": ""    },    {      "id": 39,      "source": 39,      "target": 40,      "label": ""    },    {      "id": 40,      "source": 40,      "target": 41,      "label": ""    },    {      "id": 41,      "source": 40,      "target": 42,      "label": ""    },    {      "id": 42,      "source": 35,      "target": 43,      "label": ""    },    {      "id": 43,      "source": 43,      "target": 44,      "label": ""    },    {      "id": 44,      "source": 1,      "target": 45,      "label": ""    },    {      "id": 45,      "source": 45,      "target": 46,      "label": ""    },    {      "id": 46,      "source": 45,      "target": 47,      "label": ""    },    {      "id": 47,      "source": 45,      "target": 48,      "label": ""    },    {      "id": 48,      "source": 45,      "target": 49,      "label": ""    },    {      "id": 49,      "source": 49,      "target": 50,      "label": ""    },    {      "id": 50,      "source": 1,      "target": 51,      "label": ""    },    {      "id": 51,      "source": 51,      "target": 52,      "label": ""    },    {      "id": 52,      "source": 51,      "target": 53,      "label": ""    },    {      "id": 53,      "source": 51,      "target": 54,      "label": ""    },    {      "id": 54,      "source": 51,      "target": 55,      "label": ""    },    {      "id": 55,      "source": 55,      "target": 56,      "label": ""    },    {      "id": 56,      "source": 56,      "target": 57,      "label": ""    },    {      "id": 57,      "source": 56,      "target": 58,      "label": ""    },    {      "id": 58,      "source": 51,      "target": 59,      "label": ""    },    {      "id": 59,      "source": 59,      "target": 60,      "label": ""    },    {      "id": 60,      "source": 1,      "target": 61,      "label": ""    },    {      "id": 61,      "source": 61,      "target": 62,      "label": ""    },    {      "id": 62,      "source": 61,      "target": 63,      "label": ""    },    {      "id": 63,      "source": 61,      "target": 64,      "label": ""    },    {      "id": 64,      "source": 61,      "target": 65,      "label": ""    },    {      "id": 65,      "source": 65,      "target": 66,      "label": ""    },    {      "id": 66,      "source": 66,      "target": 67,      "label": ""    },    {      "id": 67,      "source": 66,      "target": 68,      "label": ""    },    {      "id": 68,      "source": 66,      "target": 69,      "label": ""    },    {      "id": 69,      "source": 65,      "target": 70,      "label": ""    },    {      "id": 70,      "source": 1,      "target": 71,      "label": ""    },    {      "id": 71,      "source": 71,      "target": 72,      "label": ""    },    {      "id": 72,      "source": 71,      "target": 73,      "label": ""    },    {      "id": 73,      "source": 71,      "target": 74,      "label": ""    },    {      "id": 74,      "source": 71,      "target": 75,      "label": ""    },    {      "id": 75,      "source": 75,      "target": 76,      "label": ""    },    {      "id": 76,      "source": 76,      "target": 77,      "label": ""    },    {      "id": 77,      "source": 76,      "target": 78,      "label": ""    },    {      "id": 78,      "source": 71,      "target": 79,      "label": ""    },    {      "id": 79,      "source": 79,      "target": 80,      "label": ""    },    {      "id": 80,      "source": 1,      "target": 81,      "label": ""    },    {      "id": 81,      "source": 81,      "target": 82,      "label": ""    },    {      "id": 82,      "source": 81,      "target": 83,      "label": ""    },    {      "id": 83,      "source": 81,      "target": 84,      "label": ""    },    {      "id": 84,      "source": 81,      "target": 85,      "label": ""    },    {      "id": 85,      "source": 85,      "target": 86,      "label": ""    },    {      "id": 86,      "source": 86,      "target": 87,      "label": ""    },    {      "id": 87,      "source": 86,      "target": 88,      "label": ""    },    {      "id": 88,      "source": 86,      "target": 89,      "label": ""    },    {      "id": 89,      "source": 85,      "target": 90,      "label": ""    },    {      "id": 90,      "source": 90,      "target": 91,      "label": ""    },    {      "id": 91,      "source": 90,      "target": 92,      "label": ""    },    {      "id": 92,      "source": 85,      "target": 93,      "label": ""    },    {      "id": 93,      "source": 85,      "target": 94,      "label": ""    },    {      "id": 94,      "source": 85,      "target": 95,      "label": ""    },    {      "id": 95,      "source": 85,      "target": 96,      "label": ""    },    {      "id": 96,      "source": 1,      "target": 97,      "label": ""    },    {      "id": 97,      "source": 97,      "target": 98,      "label": ""    },    {      "id": 98,      "source": 97,      "target": 99,      "label": ""    },    {      "id": 99,      "source": 97,      "target": 100,      "label": ""    },    {      "id": 100,      "source": 97,      "target": 101,      "label": ""    },    {      "id": 101,      "source": 101,      "target": 102,      "label": ""    },    {      "id": 102,      "source": 102,      "target": 103,      "label": ""    },    {      "id": 103,      "source": 102,      "target": 104,      "label": ""    },    {      "id": 104,      "source": 97,      "target": 105,      "label": ""    },    {      "id": 105,      "source": 105,      "target": 106,      "label": ""    },    {      "id": 106,      "source": 106,      "target": 107,      "label": ""    },    {      "id": 107,      "source": 106,      "target": 108,      "label": ""    },    {      "id": 108,      "source": 106,      "target": 109,      "label": ""    },    {      "id": 109,      "source": 105,      "target": 110,      "label": ""    },    {      "id": 110,      "source": 110,      "target": 111,      "label": ""    },    {      "id": 111,      "source": 110,      "target": 112,      "label": ""    },    {      "id": 112,      "source": 110,      "target": 113,      "label": ""    },    {      "id": 113,      "source": 105,      "target": 114,      "label": ""    },    {      "id": 114,      "source": 105,      "target": 115,      "label": ""    },    {      "id": 115,      "source": 115,      "target": 116,      "label": ""    },    {      "id": 116,      "source": 115,      "target": 117,      "label": ""    },    {      "id": 117,      "source": 115,      "target": 118,      "label": ""    },    {      "id": 118,      "source": 105,      "target": 119,      "label": ""    },    {      "id": 119,      "source": 105,      "target": 120,      "label": ""    },    {      "id": 120,      "source": 105,      "target": 121,      "label": ""    },    {      "id": 121,      "source": 105,      "target": 122,      "label": ""    },    {      "id": 122,      "source": 105,      "target": 123,      "label": ""    },    {      "id": 123,      "source": 105,      "target": 124,      "label": ""    },    {      "id": 124,      "source": 105,      "target": 125,      "label": ""    },    {      "id": 125,      "source": 105,      "target": 126,      "label": ""    },    {      "id": 126,      "source": 105,      "target": 127,      "label": ""    },    {      "id": 127,      "source": 127,      "target": 128,      "label": ""    },    {      "id": 128,      "source": 127,      "target": 129,      "label": ""    },    {      "id": 129,      "source": 127,      "target": 130,      "label": ""    },    {      "id": 130,      "source": 105,      "target": 131,      "label": ""    },    {      "id": 131,      "source": 105,      "target": 132,      "label": ""    },    {      "id": 132,      "source": 105,      "target": 133,      "label": ""    },    {      "id": 133,      "source": 105,      "target": 134,      "label": ""    },    {      "id": 134,      "source": 1,      "target": 135,      "label": ""    },    {      "id": 135,      "source": 135,      "target": 136,      "label": ""    },    {      "id": 136,      "source": 135,      "target": 137,      "label": ""    },    {      "id": 137,      "source": 135,      "target": 138,      "label": ""    },    {      "id": 138,      "source": 135,      "target": 139,      "label": ""    },    {      "id": 139,      "source": 139,      "target": 140,      "label": ""    },    {      "id": 140,      "source": 1,      "target": 141,      "label": ""    },    {      "id": 141,      "source": 141,      "target": 142,      "label": ""    },    {      "id": 142,      "source": 141,      "target": 143,      "label": ""    },    {      "id": 143,      "source": 141,      "target": 144,      "label": ""    },    {      "id": 144,      "source": 141,      "target": 145,      "label": ""    },    {      "id": 145,      "source": 145,      "target": 146,      "label": ""    },    {      "id": 146,      "source": 146,      "target": 147,      "label": ""    },    {      "id": 147,      "source": 146,      "target": 148,      "label": ""    },    {      "id": 148,      "source": 141,      "target": 149,      "label": ""    },    {      "id": 149,      "source": 149,      "target": 150,      "label": ""    },    {      "id": 150,      "source": 149,      "target": 151,      "label": ""    }  ]
}
AST exported to: ../generate/java/basic/AST/\Test8-AST.json
{
  "directed": true,  "label": "AST of Test8.java",  "type": "Abstract Syntax Tree (AST)",  "file": "Test8.java",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "Test8.java",      "normalized": "Test8.java"    },    {      "id": 1,      "line": 1,      "type": "IMPORTS",      "label": "IMPORTS",      "normalized": "IMPORTS"    },    {      "id": 2,      "line": 1,      "type": "IMPORT",      "label": "java.io.File",      "normalized": "java.io.File"    },    {      "id": 3,      "line": 2,      "type": "IMPORT",      "label": "java.io.FileInputStream",      "normalized": "java.io.FileInputStream"    },    {      "id": 4,      "line": 3,      "type": "IMPORT",      "label": "java.io.FileNotFoundException",      "normalized": "java.io.FileNotFoundException"    },    {      "id": 5,      "line": 4,      "type": "IMPORT",      "label": "java.io.IOException",      "normalized": "java.io.IOException"    },    {      "id": 6,      "line": 5,      "type": "IMPORT",      "label": "java.util.Arrays",      "normalized": "java.util.Arrays"    },    {      "id": 7,      "line": 8,      "type": "CLASS",      "label": "CLASS",      "normalized": "CLASS"    },    {      "id": 8,      "line": 8,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 9,      "line": 8,      "type": "NAME",      "label": "Test8",      "normalized": "Test8"    },    {      "id": 10,      "line": 10,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 11,      "line": 10,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 12,      "line": 10,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 13,      "line": 10,      "type": "NAME",      "label": "run",      "normalized": "$METHOD_1"    },    {      "id": 14,      "line": 10,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 15,      "line": 10,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 16,      "line": 10,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 17,      "line": 10,      "type": "NAME",      "label": "x",      "normalized": "$VARL_1"    },    {      "id": 18,      "line": 10,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 19,      "line": 12,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 20,      "line": 12,      "type": "TYPE",      "label": "boolean",      "normalized": "boolean"    },    {      "id": 21,      "line": 12,      "type": "NAME",      "label": "isPrime",      "normalized": "$VARL_2"    },    {      "id": 22,      "line": 12,      "type": "INIT",      "label": "= false",      "normalized": "= false"    },    {      "id": 23,      "line": 13,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 24,      "line": 13,      "type": "TYPE",      "label": "int[]",      "normalized": "int[]"    },    {      "id": 25,      "line": 13,      "type": "NAME",      "label": "primes",      "normalized": "$VARL_3"    },    {      "id": 26,      "line": 13,      "type": "INIT",      "label": "= {2, 3, 5, 7, 11, 13, 17, 19}",      "normalized": "= {2, 3, 5, 7, 11, 13, 17, 19}"    },    {      "id": 27,      "line": 14,      "type": "FOR-EACH",      "label": "FOR-EACH",      "normalized": "FOR-EACH"    },    {      "id": 28,      "line": 14,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 29,      "line": 14,      "type": "NAME",      "label": "p",      "normalized": "$VARL_4"    },    {      "id": 30,      "line": 14,      "type": "IN",      "label": "primes",      "normalized": "$VARL_3"    },    {      "id": 31,      "line": 14,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 32,      "line": 15,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 33,      "line": 15,      "type": "COND",      "label": "x == p",      "normalized": "$VARL_1 == $VARL_4"    },    {      "id": 34,      "line": 16,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 35,      "line": 16,      "type": "",      "label": "isPrime = true",      "normalized": "$VARL_2 ?= true"    },    {      "id": 36,      "line": 18,      "type": "",      "label": "System.out.println(x + (isPrime ? ' is prime' : ' is not prime'))",      "normalized": "System.out.println($VARL_1 + ($VARL_2 ? ' is prime' : ' is not prime'))"    },    {      "id": 37,      "line": 21,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 38,      "line": 21,      "type": "TYPE",      "label": "File",      "normalized": "File"    },    {      "id": 39,      "line": 21,      "type": "NAME",      "label": "file",      "normalized": "$VARL_5"    },    {      "id": 40,      "line": 21,      "type": "INIT",      "label": "= new File('manifest.mf')",      "normalized": "= ('manifest.mf')"    },    {      "id": 41,      "line": 22,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 42,      "line": 22,      "type": "TYPE",      "label": "FileInputStream",      "normalized": "FileInputStream"    },    {      "id": 43,      "line": 22,      "type": "NAME",      "label": "fis",      "normalized": "$VARL_6"    },    {      "id": 44,      "line": 22,      "type": "INIT",      "label": "= null",      "normalized": "= null"    },    {      "id": 45,      "line": 23,      "type": "TRY",      "label": "TRY",      "normalized": "TRY"    },    {      "id": 46,      "line": 23,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 47,      "line": 24,      "type": "",      "label": "fis = new FileInputStream(file)",      "normalized": "$VARL_6 ?= ($VARL_5)"    },    {      "id": 48,      "line": 25,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 49,      "line": 25,      "type": "TYPE",      "label": "byte[]",      "normalized": "byte[]"    },    {      "id": 50,      "line": 25,      "type": "NAME",      "label": "buffer",      "normalized": "$VARL_7"    },    {      "id": 51,      "line": 25,      "type": "INIT",      "label": "= new byte[x]",      "normalized": "= null"    },    {      "id": 52,      "line": 26,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 53,      "line": 26,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 54,      "line": 26,      "type": "NAME",      "label": "read",      "normalized": "$VARL_8"    },    {      "id": 55,      "line": 26,      "type": "INIT",      "label": "= fis.read(buffer)",      "normalized": "= $VARL_6.$VARL_8($VARL_7)"    },    {      "id": 56,      "line": 27,      "type": "",      "label": "System.out.println(read + ' bytes read.')",      "normalized": "System.out.println($VARL_8 + ' bytes read.')"    },    {      "id": 57,      "line": 28,      "type": "",      "label": "System.out.println(Arrays.toString(Arrays.copyOf(buffer, read)))",      "normalized": "System.out.println(Arrays.toString(Arrays.copyOf($VARL_7, $VARL_8)))"    },    {      "id": 58,      "line": 29,      "type": "CATCH",      "label": "CATCH",      "normalized": "CATCH"    },    {      "id": 59,      "line": 29,      "type": "TYPE",      "label": "FileNotFoundException",      "normalized": "FileNotFoundException"    },    {      "id": 60,      "line": 29,      "type": "NAME",      "label": "ex",      "normalized": "$VARL_9"    },    {      "id": 61,      "line": 29,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 62,      "line": 30,      "type": "",      "label": "System.err.println(ex)",      "normalized": "System.err.println($VARL_9)"    },    {      "id": 63,      "line": 31,      "type": "CATCH",      "label": "CATCH",      "normalized": "CATCH"    },    {      "id": 64,      "line": 31,      "type": "TYPE",      "label": "IOException",      "normalized": "IOException"    },    {      "id": 65,      "line": 31,      "type": "NAME",      "label": "ex",      "normalized": "$VARL_10"    },    {      "id": 66,      "line": 31,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 67,      "line": 32,      "type": "",      "label": "System.err.println(ex)",      "normalized": "System.err.println($VARL_10)"    },    {      "id": 68,      "line": 33,      "type": "FINALLY",      "label": "FINALLY",      "normalized": "FINALLY"    },    {      "id": 69,      "line": 34,      "type": "TRY",      "label": "TRY",      "normalized": "TRY"    },    {      "id": 70,      "line": 34,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 71,      "line": 35,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 72,      "line": 35,      "type": "COND",      "label": "fis != null",      "normalized": "$VARL_6 != null"    },    {      "id": 73,      "line": 36,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 74,      "line": 36,      "type": "",      "label": "fis.close()",      "normalized": "$VARL_6.close()"    },    {      "id": 75,      "line": 37,      "type": "CATCH",      "label": "CATCH",      "normalized": "CATCH"    },    {      "id": 76,      "line": 37,      "type": "TYPE",      "label": "IOException",      "normalized": "IOException"    },    {      "id": 77,      "line": 37,      "type": "NAME",      "label": "ex",      "normalized": "$VARL_11"    },    {      "id": 78,      "line": 37,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 79,      "line": 38,      "type": "",      "label": "System.err.println(ex)",      "normalized": "System.err.println($VARL_11)"    },    {      "id": 80,      "line": 43,      "type": "",      "label": "file = new File('build.xml')",      "normalized": "$VARL_5 ?= ('build.xml')"    },    {      "id": 81,      "line": 44,      "type": "TRY",      "label": "TRY",      "normalized": "TRY"    },    {      "id": 82,      "line": 44,      "type": "RESOURCES",      "label": "RESOURCES",      "normalized": "RESOURCES"    },    {      "id": 83,      "line": 44,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 84,      "line": 44,      "type": "TYPE",      "label": "FileInputStream",      "normalized": "FileInputStream"    },    {      "id": 85,      "line": 44,      "type": "NAME",      "label": "fism",      "normalized": "$VARL_12"    },    {      "id": 86,      "line": 44,      "type": "INIT",      "label": "= new FileInputStream(file)",      "normalized": "= ($VARL_5)"    },    {      "id": 87,      "line": 44,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 88,      "line": 45,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 89,      "line": 45,      "type": "TYPE",      "label": "byte[]",      "normalized": "byte[]"    },    {      "id": 90,      "line": 45,      "type": "NAME",      "label": "buffer",      "normalized": "$VARL_13"    },    {      "id": 91,      "line": 45,      "type": "INIT",      "label": "= new byte[2 * x]",      "normalized": "= null"    },    {      "id": 92,      "line": 46,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 93,      "line": 46,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 94,      "line": 46,      "type": "NAME",      "label": "read",      "normalized": "$VARL_14"    },    {      "id": 95,      "line": 46,      "type": "INIT",      "label": "= fism.read(buffer)",      "normalized": "= $VARL_12.$VARL_14($VARL_13)"    },    {      "id": 96,      "line": 47,      "type": "",      "label": "System.out.println(read + ' bytes read.')",      "normalized": "System.out.println($VARL_14 + ' bytes read.')"    },    {      "id": 97,      "line": 48,      "type": "",      "label": "System.out.println(Arrays.toString(Arrays.copyOf(buffer, read)))",      "normalized": "System.out.println(Arrays.toString(Arrays.copyOf($VARL_13, $VARL_14)))"    },    {      "id": 98,      "line": 49,      "type": "CATCH",      "label": "CATCH",      "normalized": "CATCH"    },    {      "id": 99,      "line": 49,      "type": "TYPE",      "label": "FileNotFoundException",      "normalized": "FileNotFoundException"    },    {      "id": 100,      "line": 49,      "type": "NAME",      "label": "ex",      "normalized": "$VARL_15"    },    {      "id": 101,      "line": 49,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 102,      "line": 50,      "type": "",      "label": "System.err.println(ex)",      "normalized": "System.err.println($VARL_15)"    },    {      "id": 103,      "line": 51,      "type": "CATCH",      "label": "CATCH",      "normalized": "CATCH"    },    {      "id": 104,      "line": 51,      "type": "TYPE",      "label": "IOException",      "normalized": "IOException"    },    {      "id": 105,      "line": 51,      "type": "NAME",      "label": "ex",      "normalized": "$VARL_16"    },    {      "id": 106,      "line": 51,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 107,      "line": 52,      "type": "",      "label": "System.err.println(ex)",      "normalized": "System.err.println($VARL_16)"    },    {      "id": 108,      "line": 57,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 109,      "line": 57,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 110,      "line": 57,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 111,      "line": 57,      "type": "NAME",      "label": "main",      "normalized": "$METHOD_2"    },    {      "id": 112,      "line": 57,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 113,      "line": 57,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 114,      "line": 57,      "type": "TYPE",      "label": "String[]",      "normalized": "String[]"    },    {      "id": 115,      "line": 57,      "type": "NAME",      "label": "args",      "normalized": "$VARL_1"    },    {      "id": 116,      "line": 57,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 117,      "line": 58,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 118,      "line": 58,      "type": "COND",      "label": "args.length > 0",      "normalized": "$VARL_1.length > 0"    },    {      "id": 119,      "line": 59,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 120,      "line": 59,      "type": "",      "label": "Test8.run(Integer.parseInt(args[0]))",      "normalized": "Test8.$METHOD_1(Integer.parseInt($VARL_1[0]))"    },    {      "id": 121,      "line": 61,      "type": "ELSE",      "label": "ELSE",      "normalized": "ELSE"    },    {      "id": 122,      "line": 61,      "type": "",      "label": "System.out.println('Nothing to process!')",      "normalized": "System.out.println('Nothing to process!')"    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 1,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 1,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 1,      "target": 4,      "label": ""    },    {      "id": 4,      "source": 1,      "target": 5,      "label": ""    },    {      "id": 5,      "source": 1,      "target": 6,      "label": ""    },    {      "id": 6,      "source": 0,      "target": 7,      "label": ""    },    {      "id": 7,      "source": 7,      "target": 8,      "label": ""    },    {      "id": 8,      "source": 7,      "target": 9,      "label": ""    },    {      "id": 9,      "source": 7,      "target": 10,      "label": ""    },    {      "id": 10,      "source": 10,      "target": 11,      "label": ""    },    {      "id": 11,      "source": 10,      "target": 12,      "label": ""    },    {      "id": 12,      "source": 10,      "target": 13,      "label": ""    },    {      "id": 13,      "source": 10,      "target": 14,      "label": ""    },    {      "id": 14,      "source": 14,      "target": 15,      "label": ""    },    {      "id": 15,      "source": 15,      "target": 16,      "label": ""    },    {      "id": 16,      "source": 15,      "target": 17,      "label": ""    },    {      "id": 17,      "source": 10,      "target": 18,      "label": ""    },    {      "id": 18,      "source": 18,      "target": 19,      "label": ""    },    {      "id": 19,      "source": 19,      "target": 20,      "label": ""    },    {      "id": 20,      "source": 19,      "target": 21,      "label": ""    },    {      "id": 21,      "source": 19,      "target": 22,      "label": ""    },    {      "id": 22,      "source": 18,      "target": 23,      "label": ""    },    {      "id": 23,      "source": 23,      "target": 24,      "label": ""    },    {      "id": 24,      "source": 23,      "target": 25,      "label": ""    },    {      "id": 25,      "source": 23,      "target": 26,      "label": ""    },    {      "id": 26,      "source": 18,      "target": 27,      "label": ""    },    {      "id": 27,      "source": 27,      "target": 28,      "label": ""    },    {      "id": 28,      "source": 27,      "target": 29,      "label": ""    },    {      "id": 29,      "source": 27,      "target": 30,      "label": ""    },    {      "id": 30,      "source": 27,      "target": 31,      "label": ""    },    {      "id": 31,      "source": 31,      "target": 32,      "label": ""    },    {      "id": 32,      "source": 32,      "target": 33,      "label": ""    },    {      "id": 33,      "source": 32,      "target": 34,      "label": ""    },    {      "id": 34,      "source": 34,      "target": 35,      "label": ""    },    {      "id": 35,      "source": 18,      "target": 36,      "label": ""    },    {      "id": 36,      "source": 18,      "target": 37,      "label": ""    },    {      "id": 37,      "source": 37,      "target": 38,      "label": ""    },    {      "id": 38,      "source": 37,      "target": 39,      "label": ""    },    {      "id": 39,      "source": 37,      "target": 40,      "label": ""    },    {      "id": 40,      "source": 18,      "target": 41,      "label": ""    },    {      "id": 41,      "source": 41,      "target": 42,      "label": ""    },    {      "id": 42,      "source": 41,      "target": 43,      "label": ""    },    {      "id": 43,      "source": 41,      "target": 44,      "label": ""    },    {      "id": 44,      "source": 18,      "target": 45,      "label": ""    },    {      "id": 45,      "source": 45,      "target": 46,      "label": ""    },    {      "id": 46,      "source": 46,      "target": 47,      "label": ""    },    {      "id": 47,      "source": 46,      "target": 48,      "label": ""    },    {      "id": 48,      "source": 48,      "target": 49,      "label": ""    },    {      "id": 49,      "source": 48,      "target": 50,      "label": ""    },    {      "id": 50,      "source": 48,      "target": 51,      "label": ""    },    {      "id": 51,      "source": 46,      "target": 52,      "label": ""    },    {      "id": 52,      "source": 52,      "target": 53,      "label": ""    },    {      "id": 53,      "source": 52,      "target": 54,      "label": ""    },    {      "id": 54,      "source": 52,      "target": 55,      "label": ""    },    {      "id": 55,      "source": 46,      "target": 56,      "label": ""    },    {      "id": 56,      "source": 46,      "target": 57,      "label": ""    },    {      "id": 57,      "source": 45,      "target": 58,      "label": ""    },    {      "id": 58,      "source": 58,      "target": 59,      "label": ""    },    {      "id": 59,      "source": 58,      "target": 60,      "label": ""    },    {      "id": 60,      "source": 58,      "target": 61,      "label": ""    },    {      "id": 61,      "source": 61,      "target": 62,      "label": ""    },    {      "id": 62,      "source": 45,      "target": 63,      "label": ""    },    {      "id": 63,      "source": 63,      "target": 64,      "label": ""    },    {      "id": 64,      "source": 63,      "target": 65,      "label": ""    },    {      "id": 65,      "source": 63,      "target": 66,      "label": ""    },    {      "id": 66,      "source": 66,      "target": 67,      "label": ""    },    {      "id": 67,      "source": 45,      "target": 68,      "label": ""    },    {      "id": 68,      "source": 68,      "target": 69,      "label": ""    },    {      "id": 69,      "source": 69,      "target": 70,      "label": ""    },    {      "id": 70,      "source": 70,      "target": 71,      "label": ""    },    {      "id": 71,      "source": 71,      "target": 72,      "label": ""    },    {      "id": 72,      "source": 71,      "target": 73,      "label": ""    },    {      "id": 73,      "source": 73,      "target": 74,      "label": ""    },    {      "id": 74,      "source": 69,      "target": 75,      "label": ""    },    {      "id": 75,      "source": 75,      "target": 76,      "label": ""    },    {      "id": 76,      "source": 75,      "target": 77,      "label": ""    },    {      "id": 77,      "source": 75,      "target": 78,      "label": ""    },    {      "id": 78,      "source": 78,      "target": 79,      "label": ""    },    {      "id": 79,      "source": 18,      "target": 80,      "label": ""    },    {      "id": 80,      "source": 18,      "target": 81,      "label": ""    },    {      "id": 81,      "source": 81,      "target": 82,      "label": ""    },    {      "id": 82,      "source": 82,      "target": 83,      "label": ""    },    {      "id": 83,      "source": 83,      "target": 84,      "label": ""    },    {      "id": 84,      "source": 83,      "target": 85,      "label": ""    },    {      "id": 85,      "source": 83,      "target": 86,      "label": ""    },    {      "id": 86,      "source": 81,      "target": 87,      "label": ""    },    {      "id": 87,      "source": 87,      "target": 88,      "label": ""    },    {      "id": 88,      "source": 88,      "target": 89,      "label": ""    },    {      "id": 89,      "source": 88,      "target": 90,      "label": ""    },    {      "id": 90,      "source": 88,      "target": 91,      "label": ""    },    {      "id": 91,      "source": 87,      "target": 92,      "label": ""    },    {      "id": 92,      "source": 92,      "target": 93,      "label": ""    },    {      "id": 93,      "source": 92,      "target": 94,      "label": ""    },    {      "id": 94,      "source": 92,      "target": 95,      "label": ""    },    {      "id": 95,      "source": 87,      "target": 96,      "label": ""    },    {      "id": 96,      "source": 87,      "target": 97,      "label": ""    },    {      "id": 97,      "source": 81,      "target": 98,      "label": ""    },    {      "id": 98,      "source": 98,      "target": 99,      "label": ""    },    {      "id": 99,      "source": 98,      "target": 100,      "label": ""    },    {      "id": 100,      "source": 98,      "target": 101,      "label": ""    },    {      "id": 101,      "source": 101,      "target": 102,      "label": ""    },    {      "id": 102,      "source": 81,      "target": 103,      "label": ""    },    {      "id": 103,      "source": 103,      "target": 104,      "label": ""    },    {      "id": 104,      "source": 103,      "target": 105,      "label": ""    },    {      "id": 105,      "source": 103,      "target": 106,      "label": ""    },    {      "id": 106,      "source": 106,      "target": 107,      "label": ""    },    {      "id": 107,      "source": 7,      "target": 108,      "label": ""    },    {      "id": 108,      "source": 108,      "target": 109,      "label": ""    },    {      "id": 109,      "source": 108,      "target": 110,      "label": ""    },    {      "id": 110,      "source": 108,      "target": 111,      "label": ""    },    {      "id": 111,      "source": 108,      "target": 112,      "label": ""    },    {      "id": 112,      "source": 112,      "target": 113,      "label": ""    },    {      "id": 113,      "source": 113,      "target": 114,      "label": ""    },    {      "id": 114,      "source": 113,      "target": 115,      "label": ""    },    {      "id": 115,      "source": 108,      "target": 116,      "label": ""    },    {      "id": 116,      "source": 116,      "target": 117,      "label": ""    },    {      "id": 117,      "source": 117,      "target": 118,      "label": ""    },    {      "id": 118,      "source": 117,      "target": 119,      "label": ""    },    {      "id": 119,      "source": 119,      "target": 120,      "label": ""    },    {      "id": 120,      "source": 117,      "target": 121,      "label": ""    },    {      "id": 121,      "source": 121,      "target": 122,      "label": ""    }  ]
}
AST exported to: ../generate/java/basic/AST/\Test9-AST.json
{
  "directed": true,  "label": "AST of Test9.java",  "type": "Abstract Syntax Tree (AST)",  "file": "Test9.java",
  "nodes": [    {      "id": 0,      "line": 0,      "type": "ROOT",      "label": "Test9.java",      "normalized": "Test9.java"    },    {      "id": 1,      "line": 2,      "type": "CLASS",      "label": "CLASS",      "normalized": "CLASS"    },    {      "id": 2,      "line": 2,      "type": "MODIFIER",      "label": "public",      "normalized": "public"    },    {      "id": 3,      "line": 2,      "type": "NAME",      "label": "Test9",      "normalized": "Test9"    },    {      "id": 4,      "line": 4,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 5,      "line": 4,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 6,      "line": 4,      "type": "RETURN",      "label": "String",      "normalized": "String"    },    {      "id": 7,      "line": 4,      "type": "NAME",      "label": "test",      "normalized": "$METHOD_1"    },    {      "id": 8,      "line": 4,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 9,      "line": 5,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 10,      "line": 5,      "type": "TYPE",      "label": "StringBuilder",      "normalized": "StringBuilder"    },    {      "id": 11,      "line": 5,      "type": "NAME",      "label": "str",      "normalized": "$VARL_1"    },    {      "id": 12,      "line": 5,      "type": "INIT",      "label": "= new StringBuilder()",      "normalized": "= ()"    },    {      "id": 13,      "line": 6,      "type": "",      "label": "str.append('hello').append('World')",      "normalized": "$VARL_1.append('hello').append('World')"    },    {      "id": 14,      "line": 7,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 15,      "line": 7,      "type": "TYPE",      "label": "int",      "normalized": "int"    },    {      "id": 16,      "line": 7,      "type": "NAME",      "label": "x",      "normalized": "$VARL_2"    },    {      "id": 17,      "line": 7,      "type": "INIT",      "label": "= 0",      "normalized": "= 0"    },    {      "id": 18,      "line": 8,      "type": "IF",      "label": "IF",      "normalized": "IF"    },    {      "id": 19,      "line": 8,      "type": "COND",      "label": "x < 0",      "normalized": "$VARL_2 < 0"    },    {      "id": 20,      "line": 9,      "type": "THEN",      "label": "THEN",      "normalized": "THEN"    },    {      "id": 21,      "line": 9,      "type": "",      "label": "return '';",      "normalized": "return ''"    },    {      "id": 22,      "line": 10,      "type": "",      "label": "return str.toString();",      "normalized": "return $VARL_1.toString()"    },    {      "id": 23,      "line": 13,      "type": "METHOD",      "label": "METHOD",      "normalized": "METHOD"    },    {      "id": 24,      "line": 13,      "type": "MODIFIER",      "label": "public static",      "normalized": "public static"    },    {      "id": 25,      "line": 13,      "type": "RETURN",      "label": "void",      "normalized": "void"    },    {      "id": 26,      "line": 13,      "type": "NAME",      "label": "main",      "normalized": "$METHOD_2"    },    {      "id": 27,      "line": 13,      "type": "PARAMS",      "label": "PARAMS",      "normalized": "PARAMS"    },    {      "id": 28,      "line": 13,      "type": "VAR",      "label": "VAR",      "normalized": "VAR"    },    {      "id": 29,      "line": 13,      "type": "TYPE",      "label": "String[]",      "normalized": "String[]"    },    {      "id": 30,      "line": 13,      "type": "NAME",      "label": "args",      "normalized": "$VARL_1"    },    {      "id": 31,      "line": 13,      "type": "BLOCK",      "label": "BLOCK",      "normalized": "BLOCK"    },    {      "id": 32,      "line": 14,      "type": "",      "label": "System.out.println(test() + test())",      "normalized": "System.out.println($METHOD_1() + $METHOD_1())"    }  ],

  "edges": [    {      "id": 0,      "source": 0,      "target": 1,      "label": ""    },    {      "id": 1,      "source": 1,      "target": 2,      "label": ""    },    {      "id": 2,      "source": 1,      "target": 3,      "label": ""    },    {      "id": 3,      "source": 1,      "target": 4,      "label": ""    },    {      "id": 4,      "source": 4,      "target": 5,      "label": ""    },    {      "id": 5,      "source": 4,      "target": 6,      "label": ""    },    {      "id": 6,      "source": 4,      "target": 7,      "label": ""    },    {      "id": 7,      "source": 4,      "target": 8,      "label": ""    },    {      "id": 8,      "source": 8,      "target": 9,      "label": ""    },    {      "id": 9,      "source": 9,      "target": 10,      "label": ""    },    {      "id": 10,      "source": 9,      "target": 11,      "label": ""    },    {      "id": 11,      "source": 9,      "target": 12,      "label": ""    },    {      "id": 12,      "source": 8,      "target": 13,      "label": ""    },    {      "id": 13,      "source": 8,      "target": 14,      "label": ""    },    {      "id": 14,      "source": 14,      "target": 15,      "label": ""    },    {      "id": 15,      "source": 14,      "target": 16,      "label": ""    },    {      "id": 16,      "source": 14,      "target": 17,      "label": ""    },    {      "id": 17,      "source": 8,      "target": 18,      "label": ""    },    {      "id": 18,      "source": 18,      "target": 19,      "label": ""    },    {      "id": 19,      "source": 18,      "target": 20,      "label": ""    },    {      "id": 20,      "source": 20,      "target": 21,      "label": ""    },    {      "id": 21,      "source": 8,      "target": 22,      "label": ""    },    {      "id": 22,      "source": 1,      "target": 23,      "label": ""    },    {      "id": 23,      "source": 23,      "target": 24,      "label": ""    },    {      "id": 24,      "source": 23,      "target": 25,      "label": ""    },    {      "id": 25,      "source": 23,      "target": 26,      "label": ""    },    {      "id": 26,      "source": 23,      "target": 27,      "label": ""    },    {      "id": 27,      "source": 27,      "target": 28,      "label": ""    },    {      "id": 28,      "source": 28,      "target": 29,      "label": ""    },    {      "id": 29,      "source": 28,      "target": 30,      "label": ""    },    {      "id": 30,      "source": 23,      "target": 31,      "label": ""    },    {      "id": 31,      "source": 31,      "target": 32,      "label": ""    }  ]
}
